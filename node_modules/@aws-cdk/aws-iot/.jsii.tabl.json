{
  "version": "2",
  "toolVersion": "1.74.0",
  "snippets": {
    "5986c0622028e0080ef3429f8da7ac9ef06d75c996d786bfa4ed07187285d3e2": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_iot as iot\nimport aws_cdk.aws_iot_actions as actions",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.IoT;\nusing Amazon.CDK.AWS.IoT.Actions;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.iot.*;\nimport software.amazon.awscdk.services.iot.actions.*;",
          "version": "1"
        },
        "go": {
          "source": "import iot \"github.com/aws-samples/dummy/awscdkawsiot\"\nimport actions \"github.com/aws-samples/dummy/awscdkawsiotactions\"",
          "version": "1"
        },
        "$": {
          "source": "import * as iot from '@aws-cdk/aws-iot';\nimport * as actions from '@aws-cdk/aws-iot-actions';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-iot"
        },
        "field": {
          "field": "markdown",
          "line": 37
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as iot from '@aws-cdk/aws-iot';\nimport * as actions from '@aws-cdk/aws-iot-actions';",
      "syntaxKindCounter": {
        "10": 2,
        "75": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "fd6ee59f42e3fbd69caad32261a09d7d3b06f339d972e92d6f47b2ac424a81c6": {
      "translations": {
        "python": {
          "source": "func = lambda_.Function(self, \"MyFunction\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_inline(\"\"\"\n            exports.handler = (event) => {\n              console.log(\"It is test for lambda action of AWS IoT Rule.\", event);\n            };\"\"\")\n)\n\niot.TopicRule(self, \"TopicRule\",\n    topic_rule_name=\"MyTopicRule\",  # optional\n    description=\"invokes the lambda function\",  # optional\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n    actions=[actions.LambdaFunctionAction(func)]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Function func = new Function(this, \"MyFunction\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromInline(@\"\n        exports.handler = (event) => {\n          console.log(\"\"It is test for lambda action of AWS IoT Rule.\"\", event);\n        };\")\n});\n\nnew TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    TopicRuleName = \"MyTopicRule\",  // optional\n    Description = \"invokes the lambda function\",  // optional\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n    Actions = new [] { new LambdaFunctionAction(func) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Function func = Function.Builder.create(this, \"MyFunction\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromInline(\"\\n    exports.handler = (event) => {\\n      console.log(\\\"It is test for lambda action of AWS IoT Rule.\\\", event);\\n    };\"))\n        .build();\n\nTopicRule.Builder.create(this, \"TopicRule\")\n        .topicRuleName(\"MyTopicRule\") // optional\n        .description(\"invokes the lambda function\") // optional\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"))\n        .actions(List.of(new LambdaFunctionAction(func)))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "func := lambda.NewFunction(this, jsii.String(\"MyFunction\"), &functionProps{\n\truntime: lambda.runtime_NODEJS_14_X(),\n\thandler: jsii.String(\"index.handler\"),\n\tcode: lambda.code.fromInline(jsii.String(\"\\n    exports.handler = (event) => {\\n      console.log(\\\"It is test for lambda action of AWS IoT Rule.\\\", event);\\n    };\")),\n})\n\niot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\ttopicRuleName: jsii.String(\"MyTopicRule\"),\n\t // optional\n\tdescription: jsii.String(\"invokes the lambda function\"),\n\t // optional\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\")),\n\tactions: []iAction{\n\t\tactions.NewLambdaFunctionAction(func),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const func = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`\n    exports.handler = (event) => {\n      console.log(\"It is test for lambda action of AWS IoT Rule.\", event);\n    };`\n  ),\n});\n\nnew iot.TopicRule(this, 'TopicRule', {\n  topicRuleName: 'MyTopicRule', // optional\n  description: 'invokes the lambda function', // optional\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  actions: [new actions.LambdaFunctionAction(func)],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-iot"
        },
        "field": {
          "field": "markdown",
          "line": 47
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.LambdaFunctionAction",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromInline",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_14_X",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst func = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`\n    exports.handler = (event) => {\n      console.log(\"It is test for lambda action of AWS IoT Rule.\", event);\n    };`\n  ),\n});\n\nnew iot.TopicRule(this, 'TopicRule', {\n  topicRuleName: 'MyTopicRule', // optional\n  description: 'invokes the lambda function', // optional\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  actions: [new actions.LambdaFunctionAction(func)],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 6,
        "14": 1,
        "75": 24,
        "104": 2,
        "192": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 7
      },
      "fqnsFingerprint": "f51b8d5e0c9cc54873f43d96133cf80e487f0f1a5f1237828cf84e5407894a77"
    },
    "0b4f84b7a07764ceeacd8e66826028a7a668bb4c9afa29360876b687d35a6e81": {
      "translations": {
        "python": {
          "source": "# func: lambda.Function\n\n\ntopic_rule = iot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\")\n)\ntopic_rule.add_action(actions.LambdaFunctionAction(func))",
          "version": "2"
        },
        "csharp": {
          "source": "Function func;\n\n\nTopicRule topicRule = new TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\")\n});\ntopicRule.AddAction(new LambdaFunctionAction(func));",
          "version": "1"
        },
        "java": {
          "source": "Function func;\n\n\nTopicRule topicRule = TopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"))\n        .build();\ntopicRule.addAction(new LambdaFunctionAction(func));",
          "version": "1"
        },
        "go": {
          "source": "var func function\n\n\ntopicRule := iot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\")),\n})\ntopicRule.addAction(actions.NewLambdaFunctionAction(func))",
          "version": "1"
        },
        "$": {
          "source": "declare const func: lambda.Function;\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n});\ntopicRule.addAction(new actions.LambdaFunctionAction(func));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-iot"
        },
        "field": {
          "field": "markdown",
          "line": 68
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.LambdaFunctionAction",
        "@aws-cdk/aws-iot.IAction",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRule#addAction",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-lambda.IFunction",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const func: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n});\ntopicRule.addAction(new actions.LambdaFunctionAction(func));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 5,
        "196": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "92563aeb25f82c23a0feca4f91751532ba9a1dbaf44b570358aff8eaf8c63e0b"
    },
    "970cf66f0f2ede14a2954e523be425aa7d294d6a09a28a669e15fc91edf67bc7": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_logs as logs\n\n\nlog_group = logs.LogGroup(self, \"MyLogGroup\")\n\niot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n    error_action=actions.CloudWatchLogsAction(log_group)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Logs;\n\n\nLogGroup logGroup = new LogGroup(this, \"MyLogGroup\");\n\nnew TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n    ErrorAction = new CloudWatchLogsAction(logGroup)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.logs.*;\n\n\nLogGroup logGroup = new LogGroup(this, \"MyLogGroup\");\n\nTopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"))\n        .errorAction(new CloudWatchLogsAction(logGroup))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\n\nlogGroup := logs.NewLogGroup(this, jsii.String(\"MyLogGroup\"))\n\niot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\")),\n\terrorAction: actions.NewCloudWatchLogsAction(logGroup),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as logs from '@aws-cdk/aws-logs';\n\nconst logGroup = new logs.LogGroup(this, 'MyLogGroup');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  errorAction: new actions.CloudWatchLogsAction(logGroup),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-iot"
        },
        "field": {
          "field": "markdown",
          "line": 80
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.CloudWatchLogsAction",
        "@aws-cdk/aws-iot.IAction",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-logs.LogGroup",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as logs from '@aws-cdk/aws-logs';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst logGroup = new logs.LogGroup(this, 'MyLogGroup');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  errorAction: new actions.CloudWatchLogsAction(logGroup),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "104": 2,
        "193": 1,
        "194": 5,
        "196": 1,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "da608908e85e0b2489cdb41524a749c2239efe2a613c550ba143febc9fbf7363"
    },
    "b45f520d205328085f1f5fe58599f45772903dfa976368d4919de82bc5b91483": {
      "translations": {
        "python": {
          "source": "iot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n    Enabled = false\n});",
          "version": "1"
        },
        "java": {
          "source": "TopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"))\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "iot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\")),\n\tenabled: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  enabled: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-iot"
        },
        "field": {
          "field": "markdown",
          "line": 93
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  enabled: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "104": 1,
        "193": 1,
        "194": 3,
        "196": 1,
        "197": 1,
        "226": 1,
        "281": 2
      },
      "fqnsFingerprint": "da46f35c3cdc31bbfdd1a689eda75cf2cef198500afa47a737d0af6285c5dfd9"
    },
    "1438052073c62d069208f1931a8bb72e1e84b1186009b413f0204c20ecf997bb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naction_config = iot.ActionConfig(\n    configuration=iot.CfnTopicRule.ActionProperty(\n        cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n            alarm_name=\"alarmName\",\n            role_arn=\"roleArn\",\n            state_reason=\"stateReason\",\n            state_value=\"stateValue\"\n        ),\n        cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n            log_group_name=\"logGroupName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False\n        ),\n        cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n            metric_name=\"metricName\",\n            metric_namespace=\"metricNamespace\",\n            metric_unit=\"metricUnit\",\n            metric_value=\"metricValue\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            metric_timestamp=\"metricTimestamp\"\n        ),\n        dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n            hash_key_field=\"hashKeyField\",\n            hash_key_value=\"hashKeyValue\",\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            hash_key_type=\"hashKeyType\",\n            payload_field=\"payloadField\",\n            range_key_field=\"rangeKeyField\",\n            range_key_type=\"rangeKeyType\",\n            range_key_value=\"rangeKeyValue\"\n        ),\n        dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n            put_item=iot.CfnTopicRule.PutItemInputProperty(\n                table_name=\"tableName\"\n            ),\n            role_arn=\"roleArn\"\n        ),\n        elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n            endpoint=\"endpoint\",\n            id=\"id\",\n            index=\"index\",\n            role_arn=\"roleArn\",\n            type=\"type\"\n        ),\n        firehose=iot.CfnTopicRule.FirehoseActionProperty(\n            delivery_stream_name=\"deliveryStreamName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False,\n            separator=\"separator\"\n        ),\n        http=iot.CfnTopicRule.HttpActionProperty(\n            url=\"url\",\n\n            # the properties below are optional\n            auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                    role_arn=\"roleArn\",\n                    service_name=\"serviceName\",\n                    signing_region=\"signingRegion\"\n                )\n            ),\n            confirmation_url=\"confirmationUrl\",\n            headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n            channel_name=\"channelName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False\n        ),\n        iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n            input_name=\"inputName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False,\n            message_id=\"messageId\"\n        ),\n        iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n            put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                    timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                        time_in_seconds=\"timeInSeconds\",\n\n                        # the properties below are optional\n                        offset_in_nanos=\"offsetInNanos\"\n                    ),\n                    value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                        boolean_value=\"booleanValue\",\n                        double_value=\"doubleValue\",\n                        integer_value=\"integerValue\",\n                        string_value=\"stringValue\"\n                    ),\n\n                    # the properties below are optional\n                    quality=\"quality\"\n                )],\n\n                # the properties below are optional\n                asset_id=\"assetId\",\n                entry_id=\"entryId\",\n                property_alias=\"propertyAlias\",\n                property_id=\"propertyId\"\n            )],\n            role_arn=\"roleArn\"\n        ),\n        kafka=iot.CfnTopicRule.KafkaActionProperty(\n            client_properties={\n                \"client_properties_key\": \"clientProperties\"\n            },\n            destination_arn=\"destinationArn\",\n            topic=\"topic\",\n\n            # the properties below are optional\n            key=\"key\",\n            partition=\"partition\"\n        ),\n        kinesis=iot.CfnTopicRule.KinesisActionProperty(\n            role_arn=\"roleArn\",\n            stream_name=\"streamName\",\n\n            # the properties below are optional\n            partition_key=\"partitionKey\"\n        ),\n        lambda_=iot.CfnTopicRule.LambdaActionProperty(\n            function_arn=\"functionArn\"\n        ),\n        location=iot.CfnTopicRule.LocationActionProperty(\n            device_id=\"deviceId\",\n            latitude=\"latitude\",\n            longitude=\"longitude\",\n            role_arn=\"roleArn\",\n            tracker_name=\"trackerName\",\n\n            # the properties below are optional\n            timestamp=Date()\n        ),\n        open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n            endpoint=\"endpoint\",\n            id=\"id\",\n            index=\"index\",\n            role_arn=\"roleArn\",\n            type=\"type\"\n        ),\n        republish=iot.CfnTopicRule.RepublishActionProperty(\n            role_arn=\"roleArn\",\n            topic=\"topic\",\n\n            # the properties below are optional\n            headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                content_type=\"contentType\",\n                correlation_data=\"correlationData\",\n                message_expiry=\"messageExpiry\",\n                payload_format_indicator=\"payloadFormatIndicator\",\n                response_topic=\"responseTopic\",\n                user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            qos=123\n        ),\n        s3=iot.CfnTopicRule.S3ActionProperty(\n            bucket_name=\"bucketName\",\n            key=\"key\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            canned_acl=\"cannedAcl\"\n        ),\n        sns=iot.CfnTopicRule.SnsActionProperty(\n            role_arn=\"roleArn\",\n            target_arn=\"targetArn\",\n\n            # the properties below are optional\n            message_format=\"messageFormat\"\n        ),\n        sqs=iot.CfnTopicRule.SqsActionProperty(\n            queue_url=\"queueUrl\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            use_base64=False\n        ),\n        step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n            role_arn=\"roleArn\",\n            state_machine_name=\"stateMachineName\",\n\n            # the properties below are optional\n            execution_name_prefix=\"executionNamePrefix\"\n        ),\n        timestream=iot.CfnTopicRule.TimestreamActionProperty(\n            database_name=\"databaseName\",\n            dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                unit=\"unit\",\n                value=\"value\"\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nActionConfig actionConfig = new ActionConfig {\n    Configuration = new ActionProperty {\n        CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n            AlarmName = \"alarmName\",\n            RoleArn = \"roleArn\",\n            StateReason = \"stateReason\",\n            StateValue = \"stateValue\"\n        },\n        CloudwatchLogs = new CloudwatchLogsActionProperty {\n            LogGroupName = \"logGroupName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false\n        },\n        CloudwatchMetric = new CloudwatchMetricActionProperty {\n            MetricName = \"metricName\",\n            MetricNamespace = \"metricNamespace\",\n            MetricUnit = \"metricUnit\",\n            MetricValue = \"metricValue\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            MetricTimestamp = \"metricTimestamp\"\n        },\n        DynamoDb = new DynamoDBActionProperty {\n            HashKeyField = \"hashKeyField\",\n            HashKeyValue = \"hashKeyValue\",\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            HashKeyType = \"hashKeyType\",\n            PayloadField = \"payloadField\",\n            RangeKeyField = \"rangeKeyField\",\n            RangeKeyType = \"rangeKeyType\",\n            RangeKeyValue = \"rangeKeyValue\"\n        },\n        DynamoDBv2 = new DynamoDBv2ActionProperty {\n            PutItem = new PutItemInputProperty {\n                TableName = \"tableName\"\n            },\n            RoleArn = \"roleArn\"\n        },\n        Elasticsearch = new ElasticsearchActionProperty {\n            Endpoint = \"endpoint\",\n            Id = \"id\",\n            Index = \"index\",\n            RoleArn = \"roleArn\",\n            Type = \"type\"\n        },\n        Firehose = new FirehoseActionProperty {\n            DeliveryStreamName = \"deliveryStreamName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false,\n            Separator = \"separator\"\n        },\n        Http = new HttpActionProperty {\n            Url = \"url\",\n\n            // the properties below are optional\n            Auth = new HttpAuthorizationProperty {\n                Sigv4 = new SigV4AuthorizationProperty {\n                    RoleArn = \"roleArn\",\n                    ServiceName = \"serviceName\",\n                    SigningRegion = \"signingRegion\"\n                }\n            },\n            ConfirmationUrl = \"confirmationUrl\",\n            Headers = new [] { new HttpActionHeaderProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        IotAnalytics = new IotAnalyticsActionProperty {\n            ChannelName = \"channelName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false\n        },\n        IotEvents = new IotEventsActionProperty {\n            InputName = \"inputName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false,\n            MessageId = \"messageId\"\n        },\n        IotSiteWise = new IotSiteWiseActionProperty {\n            PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                PropertyValues = new [] { new AssetPropertyValueProperty {\n                    Timestamp = new AssetPropertyTimestampProperty {\n                        TimeInSeconds = \"timeInSeconds\",\n\n                        // the properties below are optional\n                        OffsetInNanos = \"offsetInNanos\"\n                    },\n                    Value = new AssetPropertyVariantProperty {\n                        BooleanValue = \"booleanValue\",\n                        DoubleValue = \"doubleValue\",\n                        IntegerValue = \"integerValue\",\n                        StringValue = \"stringValue\"\n                    },\n\n                    // the properties below are optional\n                    Quality = \"quality\"\n                } },\n\n                // the properties below are optional\n                AssetId = \"assetId\",\n                EntryId = \"entryId\",\n                PropertyAlias = \"propertyAlias\",\n                PropertyId = \"propertyId\"\n            } },\n            RoleArn = \"roleArn\"\n        },\n        Kafka = new KafkaActionProperty {\n            ClientProperties = new Dictionary<string, string> {\n                { \"clientPropertiesKey\", \"clientProperties\" }\n            },\n            DestinationArn = \"destinationArn\",\n            Topic = \"topic\",\n\n            // the properties below are optional\n            Key = \"key\",\n            Partition = \"partition\"\n        },\n        Kinesis = new KinesisActionProperty {\n            RoleArn = \"roleArn\",\n            StreamName = \"streamName\",\n\n            // the properties below are optional\n            PartitionKey = \"partitionKey\"\n        },\n        Lambda = new LambdaActionProperty {\n            FunctionArn = \"functionArn\"\n        },\n        Location = new LocationActionProperty {\n            DeviceId = \"deviceId\",\n            Latitude = \"latitude\",\n            Longitude = \"longitude\",\n            RoleArn = \"roleArn\",\n            TrackerName = \"trackerName\",\n\n            // the properties below are optional\n            Timestamp = new Date()\n        },\n        OpenSearch = new OpenSearchActionProperty {\n            Endpoint = \"endpoint\",\n            Id = \"id\",\n            Index = \"index\",\n            RoleArn = \"roleArn\",\n            Type = \"type\"\n        },\n        Republish = new RepublishActionProperty {\n            RoleArn = \"roleArn\",\n            Topic = \"topic\",\n\n            // the properties below are optional\n            Headers = new RepublishActionHeadersProperty {\n                ContentType = \"contentType\",\n                CorrelationData = \"correlationData\",\n                MessageExpiry = \"messageExpiry\",\n                PayloadFormatIndicator = \"payloadFormatIndicator\",\n                ResponseTopic = \"responseTopic\",\n                UserProperties = new [] { new UserPropertyProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            Qos = 123\n        },\n        S3 = new S3ActionProperty {\n            BucketName = \"bucketName\",\n            Key = \"key\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            CannedAcl = \"cannedAcl\"\n        },\n        Sns = new SnsActionProperty {\n            RoleArn = \"roleArn\",\n            TargetArn = \"targetArn\",\n\n            // the properties below are optional\n            MessageFormat = \"messageFormat\"\n        },\n        Sqs = new SqsActionProperty {\n            QueueUrl = \"queueUrl\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            UseBase64 = false\n        },\n        StepFunctions = new StepFunctionsActionProperty {\n            RoleArn = \"roleArn\",\n            StateMachineName = \"stateMachineName\",\n\n            // the properties below are optional\n            ExecutionNamePrefix = \"executionNamePrefix\"\n        },\n        Timestream = new TimestreamActionProperty {\n            DatabaseName = \"databaseName\",\n            Dimensions = new [] { new TimestreamDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            Timestamp = new TimestreamTimestampProperty {\n                Unit = \"unit\",\n                Value = \"value\"\n            }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nActionConfig actionConfig = ActionConfig.builder()\n        .configuration(ActionProperty.builder()\n                .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                        .alarmName(\"alarmName\")\n                        .roleArn(\"roleArn\")\n                        .stateReason(\"stateReason\")\n                        .stateValue(\"stateValue\")\n                        .build())\n                .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                        .logGroupName(\"logGroupName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .build())\n                .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                        .metricName(\"metricName\")\n                        .metricNamespace(\"metricNamespace\")\n                        .metricUnit(\"metricUnit\")\n                        .metricValue(\"metricValue\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .metricTimestamp(\"metricTimestamp\")\n                        .build())\n                .dynamoDb(DynamoDBActionProperty.builder()\n                        .hashKeyField(\"hashKeyField\")\n                        .hashKeyValue(\"hashKeyValue\")\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .hashKeyType(\"hashKeyType\")\n                        .payloadField(\"payloadField\")\n                        .rangeKeyField(\"rangeKeyField\")\n                        .rangeKeyType(\"rangeKeyType\")\n                        .rangeKeyValue(\"rangeKeyValue\")\n                        .build())\n                .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                        .putItem(PutItemInputProperty.builder()\n                                .tableName(\"tableName\")\n                                .build())\n                        .roleArn(\"roleArn\")\n                        .build())\n                .elasticsearch(ElasticsearchActionProperty.builder()\n                        .endpoint(\"endpoint\")\n                        .id(\"id\")\n                        .index(\"index\")\n                        .roleArn(\"roleArn\")\n                        .type(\"type\")\n                        .build())\n                .firehose(FirehoseActionProperty.builder()\n                        .deliveryStreamName(\"deliveryStreamName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .separator(\"separator\")\n                        .build())\n                .http(HttpActionProperty.builder()\n                        .url(\"url\")\n\n                        // the properties below are optional\n                        .auth(HttpAuthorizationProperty.builder()\n                                .sigv4(SigV4AuthorizationProperty.builder()\n                                        .roleArn(\"roleArn\")\n                                        .serviceName(\"serviceName\")\n                                        .signingRegion(\"signingRegion\")\n                                        .build())\n                                .build())\n                        .confirmationUrl(\"confirmationUrl\")\n                        .headers(List.of(HttpActionHeaderProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .iotAnalytics(IotAnalyticsActionProperty.builder()\n                        .channelName(\"channelName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .build())\n                .iotEvents(IotEventsActionProperty.builder()\n                        .inputName(\"inputName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .messageId(\"messageId\")\n                        .build())\n                .iotSiteWise(IotSiteWiseActionProperty.builder()\n                        .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                        .timestamp(AssetPropertyTimestampProperty.builder()\n                                                .timeInSeconds(\"timeInSeconds\")\n\n                                                // the properties below are optional\n                                                .offsetInNanos(\"offsetInNanos\")\n                                                .build())\n                                        .value(AssetPropertyVariantProperty.builder()\n                                                .booleanValue(\"booleanValue\")\n                                                .doubleValue(\"doubleValue\")\n                                                .integerValue(\"integerValue\")\n                                                .stringValue(\"stringValue\")\n                                                .build())\n\n                                        // the properties below are optional\n                                        .quality(\"quality\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .assetId(\"assetId\")\n                                .entryId(\"entryId\")\n                                .propertyAlias(\"propertyAlias\")\n                                .propertyId(\"propertyId\")\n                                .build()))\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kafka(KafkaActionProperty.builder()\n                        .clientProperties(Map.of(\n                                \"clientPropertiesKey\", \"clientProperties\"))\n                        .destinationArn(\"destinationArn\")\n                        .topic(\"topic\")\n\n                        // the properties below are optional\n                        .key(\"key\")\n                        .partition(\"partition\")\n                        .build())\n                .kinesis(KinesisActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .streamName(\"streamName\")\n\n                        // the properties below are optional\n                        .partitionKey(\"partitionKey\")\n                        .build())\n                .lambda(LambdaActionProperty.builder()\n                        .functionArn(\"functionArn\")\n                        .build())\n                .location(LocationActionProperty.builder()\n                        .deviceId(\"deviceId\")\n                        .latitude(\"latitude\")\n                        .longitude(\"longitude\")\n                        .roleArn(\"roleArn\")\n                        .trackerName(\"trackerName\")\n\n                        // the properties below are optional\n                        .timestamp(new Date())\n                        .build())\n                .openSearch(OpenSearchActionProperty.builder()\n                        .endpoint(\"endpoint\")\n                        .id(\"id\")\n                        .index(\"index\")\n                        .roleArn(\"roleArn\")\n                        .type(\"type\")\n                        .build())\n                .republish(RepublishActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .topic(\"topic\")\n\n                        // the properties below are optional\n                        .headers(RepublishActionHeadersProperty.builder()\n                                .contentType(\"contentType\")\n                                .correlationData(\"correlationData\")\n                                .messageExpiry(\"messageExpiry\")\n                                .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                .responseTopic(\"responseTopic\")\n                                .userProperties(List.of(UserPropertyProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .qos(123)\n                        .build())\n                .s3(S3ActionProperty.builder()\n                        .bucketName(\"bucketName\")\n                        .key(\"key\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .cannedAcl(\"cannedAcl\")\n                        .build())\n                .sns(SnsActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .targetArn(\"targetArn\")\n\n                        // the properties below are optional\n                        .messageFormat(\"messageFormat\")\n                        .build())\n                .sqs(SqsActionProperty.builder()\n                        .queueUrl(\"queueUrl\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .useBase64(false)\n                        .build())\n                .stepFunctions(StepFunctionsActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .stateMachineName(\"stateMachineName\")\n\n                        // the properties below are optional\n                        .executionNamePrefix(\"executionNamePrefix\")\n                        .build())\n                .timestream(TimestreamActionProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .timestamp(TimestreamTimestampProperty.builder()\n                                .unit(\"unit\")\n                                .value(\"value\")\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nactionConfig := &actionConfig{\n\tconfiguration: &actionProperty{\n\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t},\n\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t},\n\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t},\n\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t},\n\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\tputItem: &putItemInputProperty{\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tindex: jsii.String(\"index\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t\tfirehose: &firehoseActionProperty{\n\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\tseparator: jsii.String(\"separator\"),\n\t\t},\n\t\thttp: &httpActionProperty{\n\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t// the properties below are optional\n\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\theaders: []interface{}{\n\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t},\n\t\tiotEvents: &iotEventsActionProperty{\n\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t},\n\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tkafka: &kafkaActionProperty{\n\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t},\n\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tpartition: jsii.String(\"partition\"),\n\t\t},\n\t\tkinesis: &kinesisActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t},\n\t\tlambda: &lambdaActionProperty{\n\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t},\n\t\tlocation: &locationActionProperty{\n\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t// the properties below are optional\n\t\t\ttimestamp: NewDate(),\n\t\t},\n\t\topenSearch: &openSearchActionProperty{\n\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tindex: jsii.String(\"index\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t\trepublish: &republishActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t// the properties below are optional\n\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tqos: jsii.Number(123),\n\t\t},\n\t\ts3: &s3ActionProperty{\n\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t},\n\t\tsns: &snsActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t},\n\t\tsqs: &sqsActionProperty{\n\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tuseBase64: jsii.Boolean(false),\n\t\t},\n\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t// the properties below are optional\n\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t},\n\t\ttimestream: &timestreamActionProperty{\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\tdimensions: []interface{}{\n\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst actionConfig: iot.ActionConfig = {\n  configuration: {\n    cloudwatchAlarm: {\n      alarmName: 'alarmName',\n      roleArn: 'roleArn',\n      stateReason: 'stateReason',\n      stateValue: 'stateValue',\n    },\n    cloudwatchLogs: {\n      logGroupName: 'logGroupName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    cloudwatchMetric: {\n      metricName: 'metricName',\n      metricNamespace: 'metricNamespace',\n      metricUnit: 'metricUnit',\n      metricValue: 'metricValue',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      metricTimestamp: 'metricTimestamp',\n    },\n    dynamoDb: {\n      hashKeyField: 'hashKeyField',\n      hashKeyValue: 'hashKeyValue',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      hashKeyType: 'hashKeyType',\n      payloadField: 'payloadField',\n      rangeKeyField: 'rangeKeyField',\n      rangeKeyType: 'rangeKeyType',\n      rangeKeyValue: 'rangeKeyValue',\n    },\n    dynamoDBv2: {\n      putItem: {\n        tableName: 'tableName',\n      },\n      roleArn: 'roleArn',\n    },\n    elasticsearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    firehose: {\n      deliveryStreamName: 'deliveryStreamName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      separator: 'separator',\n    },\n    http: {\n      url: 'url',\n\n      // the properties below are optional\n      auth: {\n        sigv4: {\n          roleArn: 'roleArn',\n          serviceName: 'serviceName',\n          signingRegion: 'signingRegion',\n        },\n      },\n      confirmationUrl: 'confirmationUrl',\n      headers: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    iotAnalytics: {\n      channelName: 'channelName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    iotEvents: {\n      inputName: 'inputName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      messageId: 'messageId',\n    },\n    iotSiteWise: {\n      putAssetPropertyValueEntries: [{\n        propertyValues: [{\n          timestamp: {\n            timeInSeconds: 'timeInSeconds',\n\n            // the properties below are optional\n            offsetInNanos: 'offsetInNanos',\n          },\n          value: {\n            booleanValue: 'booleanValue',\n            doubleValue: 'doubleValue',\n            integerValue: 'integerValue',\n            stringValue: 'stringValue',\n          },\n\n          // the properties below are optional\n          quality: 'quality',\n        }],\n\n        // the properties below are optional\n        assetId: 'assetId',\n        entryId: 'entryId',\n        propertyAlias: 'propertyAlias',\n        propertyId: 'propertyId',\n      }],\n      roleArn: 'roleArn',\n    },\n    kafka: {\n      clientProperties: {\n        clientPropertiesKey: 'clientProperties',\n      },\n      destinationArn: 'destinationArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      key: 'key',\n      partition: 'partition',\n    },\n    kinesis: {\n      roleArn: 'roleArn',\n      streamName: 'streamName',\n\n      // the properties below are optional\n      partitionKey: 'partitionKey',\n    },\n    lambda: {\n      functionArn: 'functionArn',\n    },\n    location: {\n      deviceId: 'deviceId',\n      latitude: 'latitude',\n      longitude: 'longitude',\n      roleArn: 'roleArn',\n      trackerName: 'trackerName',\n\n      // the properties below are optional\n      timestamp: new Date(),\n    },\n    openSearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    republish: {\n      roleArn: 'roleArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      headers: {\n        contentType: 'contentType',\n        correlationData: 'correlationData',\n        messageExpiry: 'messageExpiry',\n        payloadFormatIndicator: 'payloadFormatIndicator',\n        responseTopic: 'responseTopic',\n        userProperties: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      qos: 123,\n    },\n    s3: {\n      bucketName: 'bucketName',\n      key: 'key',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      cannedAcl: 'cannedAcl',\n    },\n    sns: {\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n\n      // the properties below are optional\n      messageFormat: 'messageFormat',\n    },\n    sqs: {\n      queueUrl: 'queueUrl',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      useBase64: false,\n    },\n    stepFunctions: {\n      roleArn: 'roleArn',\n      stateMachineName: 'stateMachineName',\n\n      // the properties below are optional\n      executionNamePrefix: 'executionNamePrefix',\n    },\n    timestream: {\n      databaseName: 'databaseName',\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      timestamp: {\n        unit: 'unit',\n        value: 'value',\n      },\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.ActionConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.ActionConfig",
        "@aws-cdk/aws-iot.CfnTopicRule.ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionConfig: iot.ActionConfig = {\n  configuration: {\n    cloudwatchAlarm: {\n      alarmName: 'alarmName',\n      roleArn: 'roleArn',\n      stateReason: 'stateReason',\n      stateValue: 'stateValue',\n    },\n    cloudwatchLogs: {\n      logGroupName: 'logGroupName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    cloudwatchMetric: {\n      metricName: 'metricName',\n      metricNamespace: 'metricNamespace',\n      metricUnit: 'metricUnit',\n      metricValue: 'metricValue',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      metricTimestamp: 'metricTimestamp',\n    },\n    dynamoDb: {\n      hashKeyField: 'hashKeyField',\n      hashKeyValue: 'hashKeyValue',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      hashKeyType: 'hashKeyType',\n      payloadField: 'payloadField',\n      rangeKeyField: 'rangeKeyField',\n      rangeKeyType: 'rangeKeyType',\n      rangeKeyValue: 'rangeKeyValue',\n    },\n    dynamoDBv2: {\n      putItem: {\n        tableName: 'tableName',\n      },\n      roleArn: 'roleArn',\n    },\n    elasticsearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    firehose: {\n      deliveryStreamName: 'deliveryStreamName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      separator: 'separator',\n    },\n    http: {\n      url: 'url',\n\n      // the properties below are optional\n      auth: {\n        sigv4: {\n          roleArn: 'roleArn',\n          serviceName: 'serviceName',\n          signingRegion: 'signingRegion',\n        },\n      },\n      confirmationUrl: 'confirmationUrl',\n      headers: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    iotAnalytics: {\n      channelName: 'channelName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    iotEvents: {\n      inputName: 'inputName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      messageId: 'messageId',\n    },\n    iotSiteWise: {\n      putAssetPropertyValueEntries: [{\n        propertyValues: [{\n          timestamp: {\n            timeInSeconds: 'timeInSeconds',\n\n            // the properties below are optional\n            offsetInNanos: 'offsetInNanos',\n          },\n          value: {\n            booleanValue: 'booleanValue',\n            doubleValue: 'doubleValue',\n            integerValue: 'integerValue',\n            stringValue: 'stringValue',\n          },\n\n          // the properties below are optional\n          quality: 'quality',\n        }],\n\n        // the properties below are optional\n        assetId: 'assetId',\n        entryId: 'entryId',\n        propertyAlias: 'propertyAlias',\n        propertyId: 'propertyId',\n      }],\n      roleArn: 'roleArn',\n    },\n    kafka: {\n      clientProperties: {\n        clientPropertiesKey: 'clientProperties',\n      },\n      destinationArn: 'destinationArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      key: 'key',\n      partition: 'partition',\n    },\n    kinesis: {\n      roleArn: 'roleArn',\n      streamName: 'streamName',\n\n      // the properties below are optional\n      partitionKey: 'partitionKey',\n    },\n    lambda: {\n      functionArn: 'functionArn',\n    },\n    location: {\n      deviceId: 'deviceId',\n      latitude: 'latitude',\n      longitude: 'longitude',\n      roleArn: 'roleArn',\n      trackerName: 'trackerName',\n\n      // the properties below are optional\n      timestamp: new Date(),\n    },\n    openSearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    republish: {\n      roleArn: 'roleArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      headers: {\n        contentType: 'contentType',\n        correlationData: 'correlationData',\n        messageExpiry: 'messageExpiry',\n        payloadFormatIndicator: 'payloadFormatIndicator',\n        responseTopic: 'responseTopic',\n        userProperties: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      qos: 123,\n    },\n    s3: {\n      bucketName: 'bucketName',\n      key: 'key',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      cannedAcl: 'cannedAcl',\n    },\n    sns: {\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n\n      // the properties below are optional\n      messageFormat: 'messageFormat',\n    },\n    sqs: {\n      queueUrl: 'queueUrl',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      useBase64: false,\n    },\n    stepFunctions: {\n      roleArn: 'roleArn',\n      stateMachineName: 'stateMachineName',\n\n      // the properties below are optional\n      executionNamePrefix: 'executionNamePrefix',\n    },\n    timestream: {\n      databaseName: 'databaseName',\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      timestamp: {\n        unit: 'unit',\n        value: 'value',\n      },\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 103,
        "75": 150,
        "91": 5,
        "153": 1,
        "169": 1,
        "192": 5,
        "193": 37,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 145,
        "290": 1
      },
      "fqnsFingerprint": "093a1e92a44fe85e46cd16a848a9876e3020b07f7d85b9c4f8b567e78b1e10e7"
    },
    "bcd490bf9b038abb02ef0c14fa3b06103cb0cfc7b5c117ed942c2f10c58fb54d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_account_audit_configuration = iot.CfnAccountAuditConfiguration(self, \"MyCfnAccountAuditConfiguration\",\n    account_id=\"accountId\",\n    audit_check_configurations=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty(\n        authenticated_cognito_role_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        ca_certificate_expiring_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        ca_certificate_key_quality_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        conflicting_client_ids_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        device_certificate_expiring_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        device_certificate_key_quality_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        device_certificate_shared_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        intermediate_ca_revoked_for_active_device_certificates_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        iot_policy_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        io_tPolicy_potential_mis_configuration_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        iot_role_alias_allows_access_to_unused_services_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        iot_role_alias_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        logging_disabled_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        revoked_ca_certificate_still_active_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        revoked_device_certificate_still_active_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        unauthenticated_cognito_role_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    audit_notification_target_configurations=iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty(\n        sns=iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty(\n            enabled=False,\n            role_arn=\"roleArn\",\n            target_arn=\"targetArn\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnAccountAuditConfiguration cfnAccountAuditConfiguration = new CfnAccountAuditConfiguration(this, \"MyCfnAccountAuditConfiguration\", new CfnAccountAuditConfigurationProps {\n    AccountId = \"accountId\",\n    AuditCheckConfigurations = new AuditCheckConfigurationsProperty {\n        AuthenticatedCognitoRoleOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        CaCertificateExpiringCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        CaCertificateKeyQualityCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        ConflictingClientIdsCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        DeviceCertificateExpiringCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        DeviceCertificateKeyQualityCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        DeviceCertificateSharedCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IntermediateCaRevokedForActiveDeviceCertificatesCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IotPolicyOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IoTPolicyPotentialMisConfigurationCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IotRoleAliasAllowsAccessToUnusedServicesCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IotRoleAliasOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        LoggingDisabledCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        RevokedCaCertificateStillActiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        RevokedDeviceCertificateStillActiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        UnauthenticatedCognitoRoleOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    AuditNotificationTargetConfigurations = new AuditNotificationTargetConfigurationsProperty {\n        Sns = new AuditNotificationTargetProperty {\n            Enabled = false,\n            RoleArn = \"roleArn\",\n            TargetArn = \"targetArn\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnAccountAuditConfiguration cfnAccountAuditConfiguration = CfnAccountAuditConfiguration.Builder.create(this, \"MyCfnAccountAuditConfiguration\")\n        .accountId(\"accountId\")\n        .auditCheckConfigurations(AuditCheckConfigurationsProperty.builder()\n                .authenticatedCognitoRoleOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .caCertificateExpiringCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .caCertificateKeyQualityCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .conflictingClientIdsCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deviceCertificateExpiringCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deviceCertificateKeyQualityCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deviceCertificateSharedCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .intermediateCaRevokedForActiveDeviceCertificatesCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .iotPolicyOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .ioTPolicyPotentialMisConfigurationCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .iotRoleAliasAllowsAccessToUnusedServicesCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .iotRoleAliasOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .loggingDisabledCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .revokedCaCertificateStillActiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .revokedDeviceCertificateStillActiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .unauthenticatedCognitoRoleOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .auditNotificationTargetConfigurations(AuditNotificationTargetConfigurationsProperty.builder()\n                .sns(AuditNotificationTargetProperty.builder()\n                        .enabled(false)\n                        .roleArn(\"roleArn\")\n                        .targetArn(\"targetArn\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnAccountAuditConfiguration := iot.NewCfnAccountAuditConfiguration(this, jsii.String(\"MyCfnAccountAuditConfiguration\"), &cfnAccountAuditConfigurationProps{\n\taccountId: jsii.String(\"accountId\"),\n\tauditCheckConfigurations: &auditCheckConfigurationsProperty{\n\t\tauthenticatedCognitoRoleOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tcaCertificateExpiringCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tcaCertificateKeyQualityCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tconflictingClientIdsCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdeviceCertificateExpiringCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdeviceCertificateKeyQualityCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdeviceCertificateSharedCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tintermediateCaRevokedForActiveDeviceCertificatesCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tiotPolicyOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tioTPolicyPotentialMisConfigurationCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tiotRoleAliasAllowsAccessToUnusedServicesCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tiotRoleAliasOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tloggingDisabledCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\trevokedCaCertificateStillActiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\trevokedDeviceCertificateStillActiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tunauthenticatedCognitoRoleOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tauditNotificationTargetConfigurations: &auditNotificationTargetConfigurationsProperty{\n\t\tsns: &auditNotificationTargetProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnAccountAuditConfiguration = new iot.CfnAccountAuditConfiguration(this, 'MyCfnAccountAuditConfiguration', {\n  accountId: 'accountId',\n  auditCheckConfigurations: {\n    authenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    caCertificateExpiringCheck: {\n      enabled: false,\n    },\n    caCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    conflictingClientIdsCheck: {\n      enabled: false,\n    },\n    deviceCertificateExpiringCheck: {\n      enabled: false,\n    },\n    deviceCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    deviceCertificateSharedCheck: {\n      enabled: false,\n    },\n    intermediateCaRevokedForActiveDeviceCertificatesCheck: {\n      enabled: false,\n    },\n    iotPolicyOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    ioTPolicyPotentialMisConfigurationCheck: {\n      enabled: false,\n    },\n    iotRoleAliasAllowsAccessToUnusedServicesCheck: {\n      enabled: false,\n    },\n    iotRoleAliasOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    loggingDisabledCheck: {\n      enabled: false,\n    },\n    revokedCaCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    revokedDeviceCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    unauthenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  auditNotificationTargetConfigurations: {\n    sns: {\n      enabled: false,\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAccountAuditConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAccountAuditConfiguration",
        "@aws-cdk/aws-iot.CfnAccountAuditConfigurationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAccountAuditConfiguration = new iot.CfnAccountAuditConfiguration(this, 'MyCfnAccountAuditConfiguration', {\n  accountId: 'accountId',\n  auditCheckConfigurations: {\n    authenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    caCertificateExpiringCheck: {\n      enabled: false,\n    },\n    caCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    conflictingClientIdsCheck: {\n      enabled: false,\n    },\n    deviceCertificateExpiringCheck: {\n      enabled: false,\n    },\n    deviceCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    deviceCertificateSharedCheck: {\n      enabled: false,\n    },\n    intermediateCaRevokedForActiveDeviceCertificatesCheck: {\n      enabled: false,\n    },\n    iotPolicyOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    ioTPolicyPotentialMisConfigurationCheck: {\n      enabled: false,\n    },\n    iotRoleAliasAllowsAccessToUnusedServicesCheck: {\n      enabled: false,\n    },\n    iotRoleAliasOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    loggingDisabledCheck: {\n      enabled: false,\n    },\n    revokedCaCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    revokedDeviceCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    unauthenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  auditNotificationTargetConfigurations: {\n    sns: {\n      enabled: false,\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 44,
        "91": 17,
        "104": 1,
        "193": 20,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 40,
        "290": 1
      },
      "fqnsFingerprint": "988d176c3288ee00d8defe9e504487c351714bf7cad5557ad888e0e35dcb55fb"
    },
    "53c9e0e679e47db560daa2d7c61146aa63c719ee4fe2381d1c5096c498963565": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naudit_check_configuration_property = iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n    enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAuditCheckConfigurationProperty auditCheckConfigurationProperty = new AuditCheckConfigurationProperty {\n    Enabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAuditCheckConfigurationProperty auditCheckConfigurationProperty = AuditCheckConfigurationProperty.builder()\n        .enabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nauditCheckConfigurationProperty := &auditCheckConfigurationProperty{\n\tenabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst auditCheckConfigurationProperty: iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty = {\n  enabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst auditCheckConfigurationProperty: iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty = {\n  enabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "9031b95e9d7fa5d1ed7ee153330329ffe859c33bae4c6921d21e9ef4b9cbea01"
    },
    "05efa5490aa6c06bf187e1a997ac61968b00658efa58902296e3f8a1474d043a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naudit_check_configurations_property = iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty(\n    authenticated_cognito_role_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    ca_certificate_expiring_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    ca_certificate_key_quality_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    conflicting_client_ids_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    device_certificate_expiring_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    device_certificate_key_quality_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    device_certificate_shared_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    intermediate_ca_revoked_for_active_device_certificates_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    iot_policy_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    io_tPolicy_potential_mis_configuration_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    iot_role_alias_allows_access_to_unused_services_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    iot_role_alias_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    logging_disabled_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    revoked_ca_certificate_still_active_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    revoked_device_certificate_still_active_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    ),\n    unauthenticated_cognito_role_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n        enabled=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAuditCheckConfigurationsProperty auditCheckConfigurationsProperty = new AuditCheckConfigurationsProperty {\n    AuthenticatedCognitoRoleOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    CaCertificateExpiringCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    CaCertificateKeyQualityCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    ConflictingClientIdsCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    DeviceCertificateExpiringCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    DeviceCertificateKeyQualityCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    DeviceCertificateSharedCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    IntermediateCaRevokedForActiveDeviceCertificatesCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    IotPolicyOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    IoTPolicyPotentialMisConfigurationCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    IotRoleAliasAllowsAccessToUnusedServicesCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    IotRoleAliasOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    LoggingDisabledCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    RevokedCaCertificateStillActiveCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    RevokedDeviceCertificateStillActiveCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    },\n    UnauthenticatedCognitoRoleOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n        Enabled = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAuditCheckConfigurationsProperty auditCheckConfigurationsProperty = AuditCheckConfigurationsProperty.builder()\n        .authenticatedCognitoRoleOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .caCertificateExpiringCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .caCertificateKeyQualityCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .conflictingClientIdsCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .deviceCertificateExpiringCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .deviceCertificateKeyQualityCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .deviceCertificateSharedCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .intermediateCaRevokedForActiveDeviceCertificatesCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .iotPolicyOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .ioTPolicyPotentialMisConfigurationCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .iotRoleAliasAllowsAccessToUnusedServicesCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .iotRoleAliasOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .loggingDisabledCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .revokedCaCertificateStillActiveCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .revokedDeviceCertificateStillActiveCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .unauthenticatedCognitoRoleOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                .enabled(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nauditCheckConfigurationsProperty := &auditCheckConfigurationsProperty{\n\tauthenticatedCognitoRoleOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tcaCertificateExpiringCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tcaCertificateKeyQualityCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tconflictingClientIdsCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tdeviceCertificateExpiringCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tdeviceCertificateKeyQualityCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tdeviceCertificateSharedCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tintermediateCaRevokedForActiveDeviceCertificatesCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tiotPolicyOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tioTPolicyPotentialMisConfigurationCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tiotRoleAliasAllowsAccessToUnusedServicesCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tiotRoleAliasOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tloggingDisabledCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\trevokedCaCertificateStillActiveCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\trevokedDeviceCertificateStillActiveCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n\tunauthenticatedCognitoRoleOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst auditCheckConfigurationsProperty: iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty = {\n  authenticatedCognitoRoleOverlyPermissiveCheck: {\n    enabled: false,\n  },\n  caCertificateExpiringCheck: {\n    enabled: false,\n  },\n  caCertificateKeyQualityCheck: {\n    enabled: false,\n  },\n  conflictingClientIdsCheck: {\n    enabled: false,\n  },\n  deviceCertificateExpiringCheck: {\n    enabled: false,\n  },\n  deviceCertificateKeyQualityCheck: {\n    enabled: false,\n  },\n  deviceCertificateSharedCheck: {\n    enabled: false,\n  },\n  intermediateCaRevokedForActiveDeviceCertificatesCheck: {\n    enabled: false,\n  },\n  iotPolicyOverlyPermissiveCheck: {\n    enabled: false,\n  },\n  ioTPolicyPotentialMisConfigurationCheck: {\n    enabled: false,\n  },\n  iotRoleAliasAllowsAccessToUnusedServicesCheck: {\n    enabled: false,\n  },\n  iotRoleAliasOverlyPermissiveCheck: {\n    enabled: false,\n  },\n  loggingDisabledCheck: {\n    enabled: false,\n  },\n  revokedCaCertificateStillActiveCheck: {\n    enabled: false,\n  },\n  revokedDeviceCertificateStillActiveCheck: {\n    enabled: false,\n  },\n  unauthenticatedCognitoRoleOverlyPermissiveCheck: {\n    enabled: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst auditCheckConfigurationsProperty: iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty = {\n  authenticatedCognitoRoleOverlyPermissiveCheck: {\n    enabled: false,\n  },\n  caCertificateExpiringCheck: {\n    enabled: false,\n  },\n  caCertificateKeyQualityCheck: {\n    enabled: false,\n  },\n  conflictingClientIdsCheck: {\n    enabled: false,\n  },\n  deviceCertificateExpiringCheck: {\n    enabled: false,\n  },\n  deviceCertificateKeyQualityCheck: {\n    enabled: false,\n  },\n  deviceCertificateSharedCheck: {\n    enabled: false,\n  },\n  intermediateCaRevokedForActiveDeviceCertificatesCheck: {\n    enabled: false,\n  },\n  iotPolicyOverlyPermissiveCheck: {\n    enabled: false,\n  },\n  ioTPolicyPotentialMisConfigurationCheck: {\n    enabled: false,\n  },\n  iotRoleAliasAllowsAccessToUnusedServicesCheck: {\n    enabled: false,\n  },\n  iotRoleAliasOverlyPermissiveCheck: {\n    enabled: false,\n  },\n  loggingDisabledCheck: {\n    enabled: false,\n  },\n  revokedCaCertificateStillActiveCheck: {\n    enabled: false,\n  },\n  revokedDeviceCertificateStillActiveCheck: {\n    enabled: false,\n  },\n  unauthenticatedCognitoRoleOverlyPermissiveCheck: {\n    enabled: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 37,
        "91": 16,
        "153": 2,
        "169": 1,
        "193": 17,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 32,
        "290": 1
      },
      "fqnsFingerprint": "84e40b726471a6f403aedf8295f1e156cd09a82d55851f2e3122cdf52b68147a"
    },
    "56d46b58e85f004e4dbd4aa9a3464aa3391b9cab7b41da53bc185e36a628f5e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naudit_notification_target_configurations_property = iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty(\n    sns=iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty(\n        enabled=False,\n        role_arn=\"roleArn\",\n        target_arn=\"targetArn\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAuditNotificationTargetConfigurationsProperty auditNotificationTargetConfigurationsProperty = new AuditNotificationTargetConfigurationsProperty {\n    Sns = new AuditNotificationTargetProperty {\n        Enabled = false,\n        RoleArn = \"roleArn\",\n        TargetArn = \"targetArn\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAuditNotificationTargetConfigurationsProperty auditNotificationTargetConfigurationsProperty = AuditNotificationTargetConfigurationsProperty.builder()\n        .sns(AuditNotificationTargetProperty.builder()\n                .enabled(false)\n                .roleArn(\"roleArn\")\n                .targetArn(\"targetArn\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nauditNotificationTargetConfigurationsProperty := &auditNotificationTargetConfigurationsProperty{\n\tsns: &auditNotificationTargetProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttargetArn: jsii.String(\"targetArn\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst auditNotificationTargetConfigurationsProperty: iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty = {\n  sns: {\n    enabled: false,\n    roleArn: 'roleArn',\n    targetArn: 'targetArn',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst auditNotificationTargetConfigurationsProperty: iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty = {\n  sns: {\n    enabled: false,\n    roleArn: 'roleArn',\n    targetArn: 'targetArn',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "6554d4ab88bbe0116cc561b0bbfb15b830b86866fb91ef4950ef3045361160ab"
    },
    "be3c7bd2137b05806094b070b9a32013f1271812444594dd694d52cd50ff78c6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naudit_notification_target_property = iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty(\n    enabled=False,\n    role_arn=\"roleArn\",\n    target_arn=\"targetArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAuditNotificationTargetProperty auditNotificationTargetProperty = new AuditNotificationTargetProperty {\n    Enabled = false,\n    RoleArn = \"roleArn\",\n    TargetArn = \"targetArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAuditNotificationTargetProperty auditNotificationTargetProperty = AuditNotificationTargetProperty.builder()\n        .enabled(false)\n        .roleArn(\"roleArn\")\n        .targetArn(\"targetArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nauditNotificationTargetProperty := &auditNotificationTargetProperty{\n\tenabled: jsii.Boolean(false),\n\troleArn: jsii.String(\"roleArn\"),\n\ttargetArn: jsii.String(\"targetArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst auditNotificationTargetProperty: iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty = {\n  enabled: false,\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst auditNotificationTargetProperty: iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty = {\n  enabled: false,\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "d9bfa0096c24e5efe7e525d74b1e0d693889a7d4c8748b2e7aa6afd463db12c6"
    },
    "26ddb6ff5ab85f98893c76b81b4be5f32af3bdf39a676a7428ddfa20fda9ead4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_account_audit_configuration_props = iot.CfnAccountAuditConfigurationProps(\n    account_id=\"accountId\",\n    audit_check_configurations=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationsProperty(\n        authenticated_cognito_role_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        ca_certificate_expiring_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        ca_certificate_key_quality_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        conflicting_client_ids_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        device_certificate_expiring_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        device_certificate_key_quality_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        device_certificate_shared_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        intermediate_ca_revoked_for_active_device_certificates_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        iot_policy_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        io_tPolicy_potential_mis_configuration_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        iot_role_alias_allows_access_to_unused_services_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        iot_role_alias_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        logging_disabled_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        revoked_ca_certificate_still_active_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        revoked_device_certificate_still_active_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        ),\n        unauthenticated_cognito_role_overly_permissive_check=iot.CfnAccountAuditConfiguration.AuditCheckConfigurationProperty(\n            enabled=False\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    audit_notification_target_configurations=iot.CfnAccountAuditConfiguration.AuditNotificationTargetConfigurationsProperty(\n        sns=iot.CfnAccountAuditConfiguration.AuditNotificationTargetProperty(\n            enabled=False,\n            role_arn=\"roleArn\",\n            target_arn=\"targetArn\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnAccountAuditConfigurationProps cfnAccountAuditConfigurationProps = new CfnAccountAuditConfigurationProps {\n    AccountId = \"accountId\",\n    AuditCheckConfigurations = new AuditCheckConfigurationsProperty {\n        AuthenticatedCognitoRoleOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        CaCertificateExpiringCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        CaCertificateKeyQualityCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        ConflictingClientIdsCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        DeviceCertificateExpiringCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        DeviceCertificateKeyQualityCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        DeviceCertificateSharedCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IntermediateCaRevokedForActiveDeviceCertificatesCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IotPolicyOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IoTPolicyPotentialMisConfigurationCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IotRoleAliasAllowsAccessToUnusedServicesCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        IotRoleAliasOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        LoggingDisabledCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        RevokedCaCertificateStillActiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        RevokedDeviceCertificateStillActiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        },\n        UnauthenticatedCognitoRoleOverlyPermissiveCheck = new AuditCheckConfigurationProperty {\n            Enabled = false\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    AuditNotificationTargetConfigurations = new AuditNotificationTargetConfigurationsProperty {\n        Sns = new AuditNotificationTargetProperty {\n            Enabled = false,\n            RoleArn = \"roleArn\",\n            TargetArn = \"targetArn\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnAccountAuditConfigurationProps cfnAccountAuditConfigurationProps = CfnAccountAuditConfigurationProps.builder()\n        .accountId(\"accountId\")\n        .auditCheckConfigurations(AuditCheckConfigurationsProperty.builder()\n                .authenticatedCognitoRoleOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .caCertificateExpiringCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .caCertificateKeyQualityCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .conflictingClientIdsCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deviceCertificateExpiringCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deviceCertificateKeyQualityCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .deviceCertificateSharedCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .intermediateCaRevokedForActiveDeviceCertificatesCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .iotPolicyOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .ioTPolicyPotentialMisConfigurationCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .iotRoleAliasAllowsAccessToUnusedServicesCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .iotRoleAliasOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .loggingDisabledCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .revokedCaCertificateStillActiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .revokedDeviceCertificateStillActiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .unauthenticatedCognitoRoleOverlyPermissiveCheck(AuditCheckConfigurationProperty.builder()\n                        .enabled(false)\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .auditNotificationTargetConfigurations(AuditNotificationTargetConfigurationsProperty.builder()\n                .sns(AuditNotificationTargetProperty.builder()\n                        .enabled(false)\n                        .roleArn(\"roleArn\")\n                        .targetArn(\"targetArn\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnAccountAuditConfigurationProps := &cfnAccountAuditConfigurationProps{\n\taccountId: jsii.String(\"accountId\"),\n\tauditCheckConfigurations: &auditCheckConfigurationsProperty{\n\t\tauthenticatedCognitoRoleOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tcaCertificateExpiringCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tcaCertificateKeyQualityCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tconflictingClientIdsCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdeviceCertificateExpiringCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdeviceCertificateKeyQualityCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tdeviceCertificateSharedCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tintermediateCaRevokedForActiveDeviceCertificatesCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tiotPolicyOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tioTPolicyPotentialMisConfigurationCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tiotRoleAliasAllowsAccessToUnusedServicesCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tiotRoleAliasOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tloggingDisabledCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\trevokedCaCertificateStillActiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\trevokedDeviceCertificateStillActiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t\tunauthenticatedCognitoRoleOverlyPermissiveCheck: &auditCheckConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tauditNotificationTargetConfigurations: &auditNotificationTargetConfigurationsProperty{\n\t\tsns: &auditNotificationTargetProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnAccountAuditConfigurationProps: iot.CfnAccountAuditConfigurationProps = {\n  accountId: 'accountId',\n  auditCheckConfigurations: {\n    authenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    caCertificateExpiringCheck: {\n      enabled: false,\n    },\n    caCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    conflictingClientIdsCheck: {\n      enabled: false,\n    },\n    deviceCertificateExpiringCheck: {\n      enabled: false,\n    },\n    deviceCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    deviceCertificateSharedCheck: {\n      enabled: false,\n    },\n    intermediateCaRevokedForActiveDeviceCertificatesCheck: {\n      enabled: false,\n    },\n    iotPolicyOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    ioTPolicyPotentialMisConfigurationCheck: {\n      enabled: false,\n    },\n    iotRoleAliasAllowsAccessToUnusedServicesCheck: {\n      enabled: false,\n    },\n    iotRoleAliasOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    loggingDisabledCheck: {\n      enabled: false,\n    },\n    revokedCaCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    revokedDeviceCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    unauthenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  auditNotificationTargetConfigurations: {\n    sns: {\n      enabled: false,\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAccountAuditConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAccountAuditConfigurationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAccountAuditConfigurationProps: iot.CfnAccountAuditConfigurationProps = {\n  accountId: 'accountId',\n  auditCheckConfigurations: {\n    authenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    caCertificateExpiringCheck: {\n      enabled: false,\n    },\n    caCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    conflictingClientIdsCheck: {\n      enabled: false,\n    },\n    deviceCertificateExpiringCheck: {\n      enabled: false,\n    },\n    deviceCertificateKeyQualityCheck: {\n      enabled: false,\n    },\n    deviceCertificateSharedCheck: {\n      enabled: false,\n    },\n    intermediateCaRevokedForActiveDeviceCertificatesCheck: {\n      enabled: false,\n    },\n    iotPolicyOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    ioTPolicyPotentialMisConfigurationCheck: {\n      enabled: false,\n    },\n    iotRoleAliasAllowsAccessToUnusedServicesCheck: {\n      enabled: false,\n    },\n    iotRoleAliasOverlyPermissiveCheck: {\n      enabled: false,\n    },\n    loggingDisabledCheck: {\n      enabled: false,\n    },\n    revokedCaCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    revokedDeviceCertificateStillActiveCheck: {\n      enabled: false,\n    },\n    unauthenticatedCognitoRoleOverlyPermissiveCheck: {\n      enabled: false,\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  auditNotificationTargetConfigurations: {\n    sns: {\n      enabled: false,\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 44,
        "91": 17,
        "153": 1,
        "169": 1,
        "193": 20,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 40,
        "290": 1
      },
      "fqnsFingerprint": "faaf857fdd65ca3935f7115eae2214fb02fe57da37f9403bdb85ed458a82e868"
    },
    "a4c9d8fb7bb45ab5d17b385d9879a078567013c1a536b12918dea38f1157b260": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_authorizer = iot.CfnAuthorizer(self, \"MyCfnAuthorizer\",\n    authorizer_function_arn=\"authorizerFunctionArn\",\n\n    # the properties below are optional\n    authorizer_name=\"authorizerName\",\n    enable_caching_for_http=False,\n    signing_disabled=False,\n    status=\"status\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    token_key_name=\"tokenKeyName\",\n    token_signing_public_keys={\n        \"token_signing_public_keys_key\": \"tokenSigningPublicKeys\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnAuthorizer cfnAuthorizer = new CfnAuthorizer(this, \"MyCfnAuthorizer\", new CfnAuthorizerProps {\n    AuthorizerFunctionArn = \"authorizerFunctionArn\",\n\n    // the properties below are optional\n    AuthorizerName = \"authorizerName\",\n    EnableCachingForHttp = false,\n    SigningDisabled = false,\n    Status = \"status\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TokenKeyName = \"tokenKeyName\",\n    TokenSigningPublicKeys = new Dictionary<string, string> {\n        { \"tokenSigningPublicKeysKey\", \"tokenSigningPublicKeys\" }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnAuthorizer cfnAuthorizer = CfnAuthorizer.Builder.create(this, \"MyCfnAuthorizer\")\n        .authorizerFunctionArn(\"authorizerFunctionArn\")\n\n        // the properties below are optional\n        .authorizerName(\"authorizerName\")\n        .enableCachingForHttp(false)\n        .signingDisabled(false)\n        .status(\"status\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .tokenKeyName(\"tokenKeyName\")\n        .tokenSigningPublicKeys(Map.of(\n                \"tokenSigningPublicKeysKey\", \"tokenSigningPublicKeys\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnAuthorizer := iot.NewCfnAuthorizer(this, jsii.String(\"MyCfnAuthorizer\"), &cfnAuthorizerProps{\n\tauthorizerFunctionArn: jsii.String(\"authorizerFunctionArn\"),\n\n\t// the properties below are optional\n\tauthorizerName: jsii.String(\"authorizerName\"),\n\tenableCachingForHttp: jsii.Boolean(false),\n\tsigningDisabled: jsii.Boolean(false),\n\tstatus: jsii.String(\"status\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttokenKeyName: jsii.String(\"tokenKeyName\"),\n\ttokenSigningPublicKeys: map[string]*string{\n\t\t\"tokenSigningPublicKeysKey\": jsii.String(\"tokenSigningPublicKeys\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnAuthorizer = new iot.CfnAuthorizer(this, 'MyCfnAuthorizer', {\n  authorizerFunctionArn: 'authorizerFunctionArn',\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  enableCachingForHttp: false,\n  signingDisabled: false,\n  status: 'status',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tokenKeyName: 'tokenKeyName',\n  tokenSigningPublicKeys: {\n    tokenSigningPublicKeysKey: 'tokenSigningPublicKeys',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAuthorizer"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAuthorizer",
        "@aws-cdk/aws-iot.CfnAuthorizerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAuthorizer = new iot.CfnAuthorizer(this, 'MyCfnAuthorizer', {\n  authorizerFunctionArn: 'authorizerFunctionArn',\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  enableCachingForHttp: false,\n  signingDisabled: false,\n  status: 'status',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tokenKeyName: 'tokenKeyName',\n  tokenSigningPublicKeys: {\n    tokenSigningPublicKeysKey: 'tokenSigningPublicKeys',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 15,
        "91": 2,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "4ef6b2d0e5c7c5a5d4cc0b199405c54cb54a19936286f7f78d8450b026e0f748"
    },
    "e83f06e9ede82af522b6496b803ab6f470524c20817493e327b1dfd2f9e84014": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_authorizer_props = iot.CfnAuthorizerProps(\n    authorizer_function_arn=\"authorizerFunctionArn\",\n\n    # the properties below are optional\n    authorizer_name=\"authorizerName\",\n    enable_caching_for_http=False,\n    signing_disabled=False,\n    status=\"status\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    token_key_name=\"tokenKeyName\",\n    token_signing_public_keys={\n        \"token_signing_public_keys_key\": \"tokenSigningPublicKeys\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnAuthorizerProps cfnAuthorizerProps = new CfnAuthorizerProps {\n    AuthorizerFunctionArn = \"authorizerFunctionArn\",\n\n    // the properties below are optional\n    AuthorizerName = \"authorizerName\",\n    EnableCachingForHttp = false,\n    SigningDisabled = false,\n    Status = \"status\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TokenKeyName = \"tokenKeyName\",\n    TokenSigningPublicKeys = new Dictionary<string, string> {\n        { \"tokenSigningPublicKeysKey\", \"tokenSigningPublicKeys\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnAuthorizerProps cfnAuthorizerProps = CfnAuthorizerProps.builder()\n        .authorizerFunctionArn(\"authorizerFunctionArn\")\n\n        // the properties below are optional\n        .authorizerName(\"authorizerName\")\n        .enableCachingForHttp(false)\n        .signingDisabled(false)\n        .status(\"status\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .tokenKeyName(\"tokenKeyName\")\n        .tokenSigningPublicKeys(Map.of(\n                \"tokenSigningPublicKeysKey\", \"tokenSigningPublicKeys\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnAuthorizerProps := &cfnAuthorizerProps{\n\tauthorizerFunctionArn: jsii.String(\"authorizerFunctionArn\"),\n\n\t// the properties below are optional\n\tauthorizerName: jsii.String(\"authorizerName\"),\n\tenableCachingForHttp: jsii.Boolean(false),\n\tsigningDisabled: jsii.Boolean(false),\n\tstatus: jsii.String(\"status\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttokenKeyName: jsii.String(\"tokenKeyName\"),\n\ttokenSigningPublicKeys: map[string]*string{\n\t\t\"tokenSigningPublicKeysKey\": jsii.String(\"tokenSigningPublicKeys\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnAuthorizerProps: iot.CfnAuthorizerProps = {\n  authorizerFunctionArn: 'authorizerFunctionArn',\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  enableCachingForHttp: false,\n  signingDisabled: false,\n  status: 'status',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tokenKeyName: 'tokenKeyName',\n  tokenSigningPublicKeys: {\n    tokenSigningPublicKeysKey: 'tokenSigningPublicKeys',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnAuthorizerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnAuthorizerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAuthorizerProps: iot.CfnAuthorizerProps = {\n  authorizerFunctionArn: 'authorizerFunctionArn',\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  enableCachingForHttp: false,\n  signingDisabled: false,\n  status: 'status',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  tokenKeyName: 'tokenKeyName',\n  tokenSigningPublicKeys: {\n    tokenSigningPublicKeysKey: 'tokenSigningPublicKeys',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 15,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "8353dedfd8d53a862f1e5c50b5f532d68f7d27042f5620ec41047be49c0cf76d"
    },
    "7924cc06af5d909a63fa32283f52694d0cbb55a6c59c41146f1ef2aaa3ade742": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_cACertificate = iot.CfnCACertificate(self, \"MyCfnCACertificate\",\n    ca_certificate_pem=\"caCertificatePem\",\n    status=\"status\",\n\n    # the properties below are optional\n    auto_registration_status=\"autoRegistrationStatus\",\n    certificate_mode=\"certificateMode\",\n    registration_config=iot.CfnCACertificate.RegistrationConfigProperty(\n        role_arn=\"roleArn\",\n        template_body=\"templateBody\",\n        template_name=\"templateName\"\n    ),\n    remove_auto_registration=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    verification_certificate_pem=\"verificationCertificatePem\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnCACertificate cfnCACertificate = new CfnCACertificate(this, \"MyCfnCACertificate\", new CfnCACertificateProps {\n    CaCertificatePem = \"caCertificatePem\",\n    Status = \"status\",\n\n    // the properties below are optional\n    AutoRegistrationStatus = \"autoRegistrationStatus\",\n    CertificateMode = \"certificateMode\",\n    RegistrationConfig = new RegistrationConfigProperty {\n        RoleArn = \"roleArn\",\n        TemplateBody = \"templateBody\",\n        TemplateName = \"templateName\"\n    },\n    RemoveAutoRegistration = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VerificationCertificatePem = \"verificationCertificatePem\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnCACertificate cfnCACertificate = CfnCACertificate.Builder.create(this, \"MyCfnCACertificate\")\n        .caCertificatePem(\"caCertificatePem\")\n        .status(\"status\")\n\n        // the properties below are optional\n        .autoRegistrationStatus(\"autoRegistrationStatus\")\n        .certificateMode(\"certificateMode\")\n        .registrationConfig(RegistrationConfigProperty.builder()\n                .roleArn(\"roleArn\")\n                .templateBody(\"templateBody\")\n                .templateName(\"templateName\")\n                .build())\n        .removeAutoRegistration(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .verificationCertificatePem(\"verificationCertificatePem\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnCACertificate := iot.NewCfnCACertificate(this, jsii.String(\"MyCfnCACertificate\"), &cfnCACertificateProps{\n\tcaCertificatePem: jsii.String(\"caCertificatePem\"),\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\tautoRegistrationStatus: jsii.String(\"autoRegistrationStatus\"),\n\tcertificateMode: jsii.String(\"certificateMode\"),\n\tregistrationConfig: &registrationConfigProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttemplateBody: jsii.String(\"templateBody\"),\n\t\ttemplateName: jsii.String(\"templateName\"),\n\t},\n\tremoveAutoRegistration: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tverificationCertificatePem: jsii.String(\"verificationCertificatePem\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnCACertificate = new iot.CfnCACertificate(this, 'MyCfnCACertificate', {\n  caCertificatePem: 'caCertificatePem',\n  status: 'status',\n\n  // the properties below are optional\n  autoRegistrationStatus: 'autoRegistrationStatus',\n  certificateMode: 'certificateMode',\n  registrationConfig: {\n    roleArn: 'roleArn',\n    templateBody: 'templateBody',\n    templateName: 'templateName',\n  },\n  removeAutoRegistration: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  verificationCertificatePem: 'verificationCertificatePem',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCACertificate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCACertificate",
        "@aws-cdk/aws-iot.CfnCACertificateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCACertificate = new iot.CfnCACertificate(this, 'MyCfnCACertificate', {\n  caCertificatePem: 'caCertificatePem',\n  status: 'status',\n\n  // the properties below are optional\n  autoRegistrationStatus: 'autoRegistrationStatus',\n  certificateMode: 'certificateMode',\n  registrationConfig: {\n    roleArn: 'roleArn',\n    templateBody: 'templateBody',\n    templateName: 'templateName',\n  },\n  removeAutoRegistration: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  verificationCertificatePem: 'verificationCertificatePem',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 17,
        "91": 1,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "5cf917d652231119e71b324c729e2c574a827e3d81ef278c375c4499cbc4249c"
    },
    "5bebd63b6ff23c8c00bea78855114c49b8ae353ee5cd7d7a804dc3d4f11c0886": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nregistration_config_property = iot.CfnCACertificate.RegistrationConfigProperty(\n    role_arn=\"roleArn\",\n    template_body=\"templateBody\",\n    template_name=\"templateName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nRegistrationConfigProperty registrationConfigProperty = new RegistrationConfigProperty {\n    RoleArn = \"roleArn\",\n    TemplateBody = \"templateBody\",\n    TemplateName = \"templateName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nRegistrationConfigProperty registrationConfigProperty = RegistrationConfigProperty.builder()\n        .roleArn(\"roleArn\")\n        .templateBody(\"templateBody\")\n        .templateName(\"templateName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nregistrationConfigProperty := &registrationConfigProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\ttemplateBody: jsii.String(\"templateBody\"),\n\ttemplateName: jsii.String(\"templateName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst registrationConfigProperty: iot.CfnCACertificate.RegistrationConfigProperty = {\n  roleArn: 'roleArn',\n  templateBody: 'templateBody',\n  templateName: 'templateName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCACertificate.RegistrationConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCACertificate.RegistrationConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst registrationConfigProperty: iot.CfnCACertificate.RegistrationConfigProperty = {\n  roleArn: 'roleArn',\n  templateBody: 'templateBody',\n  templateName: 'templateName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5b48b6c737180fda9ad3a7c76c4a2c17375e6914b65fc762cbfedeab4037fe05"
    },
    "50af2d96750b7471cfd417a2c5986cf33bbe50fc0d3b861a748c02d3ae12a0b9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_cACertificate_props = iot.CfnCACertificateProps(\n    ca_certificate_pem=\"caCertificatePem\",\n    status=\"status\",\n\n    # the properties below are optional\n    auto_registration_status=\"autoRegistrationStatus\",\n    certificate_mode=\"certificateMode\",\n    registration_config=iot.CfnCACertificate.RegistrationConfigProperty(\n        role_arn=\"roleArn\",\n        template_body=\"templateBody\",\n        template_name=\"templateName\"\n    ),\n    remove_auto_registration=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    verification_certificate_pem=\"verificationCertificatePem\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnCACertificateProps cfnCACertificateProps = new CfnCACertificateProps {\n    CaCertificatePem = \"caCertificatePem\",\n    Status = \"status\",\n\n    // the properties below are optional\n    AutoRegistrationStatus = \"autoRegistrationStatus\",\n    CertificateMode = \"certificateMode\",\n    RegistrationConfig = new RegistrationConfigProperty {\n        RoleArn = \"roleArn\",\n        TemplateBody = \"templateBody\",\n        TemplateName = \"templateName\"\n    },\n    RemoveAutoRegistration = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    VerificationCertificatePem = \"verificationCertificatePem\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnCACertificateProps cfnCACertificateProps = CfnCACertificateProps.builder()\n        .caCertificatePem(\"caCertificatePem\")\n        .status(\"status\")\n\n        // the properties below are optional\n        .autoRegistrationStatus(\"autoRegistrationStatus\")\n        .certificateMode(\"certificateMode\")\n        .registrationConfig(RegistrationConfigProperty.builder()\n                .roleArn(\"roleArn\")\n                .templateBody(\"templateBody\")\n                .templateName(\"templateName\")\n                .build())\n        .removeAutoRegistration(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .verificationCertificatePem(\"verificationCertificatePem\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnCACertificateProps := &cfnCACertificateProps{\n\tcaCertificatePem: jsii.String(\"caCertificatePem\"),\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\tautoRegistrationStatus: jsii.String(\"autoRegistrationStatus\"),\n\tcertificateMode: jsii.String(\"certificateMode\"),\n\tregistrationConfig: &registrationConfigProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttemplateBody: jsii.String(\"templateBody\"),\n\t\ttemplateName: jsii.String(\"templateName\"),\n\t},\n\tremoveAutoRegistration: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tverificationCertificatePem: jsii.String(\"verificationCertificatePem\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnCACertificateProps: iot.CfnCACertificateProps = {\n  caCertificatePem: 'caCertificatePem',\n  status: 'status',\n\n  // the properties below are optional\n  autoRegistrationStatus: 'autoRegistrationStatus',\n  certificateMode: 'certificateMode',\n  registrationConfig: {\n    roleArn: 'roleArn',\n    templateBody: 'templateBody',\n    templateName: 'templateName',\n  },\n  removeAutoRegistration: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  verificationCertificatePem: 'verificationCertificatePem',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCACertificateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCACertificateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCACertificateProps: iot.CfnCACertificateProps = {\n  caCertificatePem: 'caCertificatePem',\n  status: 'status',\n\n  // the properties below are optional\n  autoRegistrationStatus: 'autoRegistrationStatus',\n  certificateMode: 'certificateMode',\n  registrationConfig: {\n    roleArn: 'roleArn',\n    templateBody: 'templateBody',\n    templateName: 'templateName',\n  },\n  removeAutoRegistration: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  verificationCertificatePem: 'verificationCertificatePem',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 17,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "df1ffcf09391491117aed3a6d5f2fb6946434322fc2bedf67e8106427e980e12"
    },
    "9212411d13e5f699cd88374541586d7e10ce849c5324b0c9c8145f776a02ebd6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_certificate = iot.CfnCertificate(self, \"MyCfnCertificate\",\n    status=\"status\",\n\n    # the properties below are optional\n    ca_certificate_pem=\"caCertificatePem\",\n    certificate_mode=\"certificateMode\",\n    certificate_pem=\"certificatePem\",\n    certificate_signing_request=\"certificateSigningRequest\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnCertificate cfnCertificate = new CfnCertificate(this, \"MyCfnCertificate\", new CfnCertificateProps {\n    Status = \"status\",\n\n    // the properties below are optional\n    CaCertificatePem = \"caCertificatePem\",\n    CertificateMode = \"certificateMode\",\n    CertificatePem = \"certificatePem\",\n    CertificateSigningRequest = \"certificateSigningRequest\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnCertificate cfnCertificate = CfnCertificate.Builder.create(this, \"MyCfnCertificate\")\n        .status(\"status\")\n\n        // the properties below are optional\n        .caCertificatePem(\"caCertificatePem\")\n        .certificateMode(\"certificateMode\")\n        .certificatePem(\"certificatePem\")\n        .certificateSigningRequest(\"certificateSigningRequest\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnCertificate := iot.NewCfnCertificate(this, jsii.String(\"MyCfnCertificate\"), &cfnCertificateProps{\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\tcaCertificatePem: jsii.String(\"caCertificatePem\"),\n\tcertificateMode: jsii.String(\"certificateMode\"),\n\tcertificatePem: jsii.String(\"certificatePem\"),\n\tcertificateSigningRequest: jsii.String(\"certificateSigningRequest\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnCertificate = new iot.CfnCertificate(this, 'MyCfnCertificate', {\n  status: 'status',\n\n  // the properties below are optional\n  caCertificatePem: 'caCertificatePem',\n  certificateMode: 'certificateMode',\n  certificatePem: 'certificatePem',\n  certificateSigningRequest: 'certificateSigningRequest',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCertificate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCertificate",
        "@aws-cdk/aws-iot.CfnCertificateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificate = new iot.CfnCertificate(this, 'MyCfnCertificate', {\n  status: 'status',\n\n  // the properties below are optional\n  caCertificatePem: 'caCertificatePem',\n  certificateMode: 'certificateMode',\n  certificatePem: 'certificatePem',\n  certificateSigningRequest: 'certificateSigningRequest',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 9,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "6a4e5b1b125e6315e7877890b9af8a3465f076b2e1c7541ac80f9d6a122e39c8"
    },
    "904cdcca91af5ff3dc40a8004c313e758e3c02ed7a301b39e44191deae8439f1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_certificate_props = iot.CfnCertificateProps(\n    status=\"status\",\n\n    # the properties below are optional\n    ca_certificate_pem=\"caCertificatePem\",\n    certificate_mode=\"certificateMode\",\n    certificate_pem=\"certificatePem\",\n    certificate_signing_request=\"certificateSigningRequest\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnCertificateProps cfnCertificateProps = new CfnCertificateProps {\n    Status = \"status\",\n\n    // the properties below are optional\n    CaCertificatePem = \"caCertificatePem\",\n    CertificateMode = \"certificateMode\",\n    CertificatePem = \"certificatePem\",\n    CertificateSigningRequest = \"certificateSigningRequest\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnCertificateProps cfnCertificateProps = CfnCertificateProps.builder()\n        .status(\"status\")\n\n        // the properties below are optional\n        .caCertificatePem(\"caCertificatePem\")\n        .certificateMode(\"certificateMode\")\n        .certificatePem(\"certificatePem\")\n        .certificateSigningRequest(\"certificateSigningRequest\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnCertificateProps := &cfnCertificateProps{\n\tstatus: jsii.String(\"status\"),\n\n\t// the properties below are optional\n\tcaCertificatePem: jsii.String(\"caCertificatePem\"),\n\tcertificateMode: jsii.String(\"certificateMode\"),\n\tcertificatePem: jsii.String(\"certificatePem\"),\n\tcertificateSigningRequest: jsii.String(\"certificateSigningRequest\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnCertificateProps: iot.CfnCertificateProps = {\n  status: 'status',\n\n  // the properties below are optional\n  caCertificatePem: 'caCertificatePem',\n  certificateMode: 'certificateMode',\n  certificatePem: 'certificatePem',\n  certificateSigningRequest: 'certificateSigningRequest',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCertificateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCertificateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCertificateProps: iot.CfnCertificateProps = {\n  status: 'status',\n\n  // the properties below are optional\n  caCertificatePem: 'caCertificatePem',\n  certificateMode: 'certificateMode',\n  certificatePem: 'certificatePem',\n  certificateSigningRequest: 'certificateSigningRequest',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "63066417c9cee36c0751fe11baba4e5ffac1e67808047e9ac38372a07da84b88"
    },
    "3e52909cb61e364047a0937d4a61ee805230cca630e3eb8e87f03ad5d2a54c51": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_custom_metric = iot.CfnCustomMetric(self, \"MyCfnCustomMetric\",\n    metric_type=\"metricType\",\n\n    # the properties below are optional\n    display_name=\"displayName\",\n    metric_name=\"metricName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnCustomMetric cfnCustomMetric = new CfnCustomMetric(this, \"MyCfnCustomMetric\", new CfnCustomMetricProps {\n    MetricType = \"metricType\",\n\n    // the properties below are optional\n    DisplayName = \"displayName\",\n    MetricName = \"metricName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnCustomMetric cfnCustomMetric = CfnCustomMetric.Builder.create(this, \"MyCfnCustomMetric\")\n        .metricType(\"metricType\")\n\n        // the properties below are optional\n        .displayName(\"displayName\")\n        .metricName(\"metricName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnCustomMetric := iot.NewCfnCustomMetric(this, jsii.String(\"MyCfnCustomMetric\"), &cfnCustomMetricProps{\n\tmetricType: jsii.String(\"metricType\"),\n\n\t// the properties below are optional\n\tdisplayName: jsii.String(\"displayName\"),\n\tmetricName: jsii.String(\"metricName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnCustomMetric = new iot.CfnCustomMetric(this, 'MyCfnCustomMetric', {\n  metricType: 'metricType',\n\n  // the properties below are optional\n  displayName: 'displayName',\n  metricName: 'metricName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCustomMetric"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCustomMetric",
        "@aws-cdk/aws-iot.CfnCustomMetricProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCustomMetric = new iot.CfnCustomMetric(this, 'MyCfnCustomMetric', {\n  metricType: 'metricType',\n\n  // the properties below are optional\n  displayName: 'displayName',\n  metricName: 'metricName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "aa4aae7a9e91d3af5d1bf1af33467658349b6053f2cce78ce253bb07ce1e1244"
    },
    "e6dfa1b55c395710262743b631f9b57261b159312e958fca90dde2824d8b72d2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_custom_metric_props = iot.CfnCustomMetricProps(\n    metric_type=\"metricType\",\n\n    # the properties below are optional\n    display_name=\"displayName\",\n    metric_name=\"metricName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnCustomMetricProps cfnCustomMetricProps = new CfnCustomMetricProps {\n    MetricType = \"metricType\",\n\n    // the properties below are optional\n    DisplayName = \"displayName\",\n    MetricName = \"metricName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnCustomMetricProps cfnCustomMetricProps = CfnCustomMetricProps.builder()\n        .metricType(\"metricType\")\n\n        // the properties below are optional\n        .displayName(\"displayName\")\n        .metricName(\"metricName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnCustomMetricProps := &cfnCustomMetricProps{\n\tmetricType: jsii.String(\"metricType\"),\n\n\t// the properties below are optional\n\tdisplayName: jsii.String(\"displayName\"),\n\tmetricName: jsii.String(\"metricName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnCustomMetricProps: iot.CfnCustomMetricProps = {\n  metricType: 'metricType',\n\n  // the properties below are optional\n  displayName: 'displayName',\n  metricName: 'metricName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnCustomMetricProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnCustomMetricProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCustomMetricProps: iot.CfnCustomMetricProps = {\n  metricType: 'metricType',\n\n  // the properties below are optional\n  displayName: 'displayName',\n  metricName: 'metricName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4e10a3af4ef89fc361a590cf5bcb0dcbf1c285230eada2758d6232ec74480169"
    },
    "2eaa62441c91b15b235f2a96882d94177d8e5b82da1ad3e8e49dab3318af5532": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_dimension = iot.CfnDimension(self, \"MyCfnDimension\",\n    string_values=[\"stringValues\"],\n    type=\"type\",\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnDimension cfnDimension = new CfnDimension(this, \"MyCfnDimension\", new CfnDimensionProps {\n    StringValues = new [] { \"stringValues\" },\n    Type = \"type\",\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnDimension cfnDimension = CfnDimension.Builder.create(this, \"MyCfnDimension\")\n        .stringValues(List.of(\"stringValues\"))\n        .type(\"type\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnDimension := iot.NewCfnDimension(this, jsii.String(\"MyCfnDimension\"), &cfnDimensionProps{\n\tstringValues: []*string{\n\t\tjsii.String(\"stringValues\"),\n\t},\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnDimension = new iot.CfnDimension(this, 'MyCfnDimension', {\n  stringValues: ['stringValues'],\n  type: 'type',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnDimension"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnDimension",
        "@aws-cdk/aws-iot.CfnDimensionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDimension = new iot.CfnDimension(this, 'MyCfnDimension', {\n  stringValues: ['stringValues'],\n  type: 'type',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 10,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "8fbd866e6c29b71bac67d9c08be645f1bdce699fa4d3d4dc40b091e021e46ec1"
    },
    "51199920987b411f48be90a8b1c4312ee5e749dd52cbfbefa8022cc414feba58": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_dimension_props = iot.CfnDimensionProps(\n    string_values=[\"stringValues\"],\n    type=\"type\",\n\n    # the properties below are optional\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnDimensionProps cfnDimensionProps = new CfnDimensionProps {\n    StringValues = new [] { \"stringValues\" },\n    Type = \"type\",\n\n    // the properties below are optional\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnDimensionProps cfnDimensionProps = CfnDimensionProps.builder()\n        .stringValues(List.of(\"stringValues\"))\n        .type(\"type\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnDimensionProps := &cfnDimensionProps{\n\tstringValues: []*string{\n\t\tjsii.String(\"stringValues\"),\n\t},\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnDimensionProps: iot.CfnDimensionProps = {\n  stringValues: ['stringValues'],\n  type: 'type',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnDimensionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnDimensionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDimensionProps: iot.CfnDimensionProps = {\n  stringValues: ['stringValues'],\n  type: 'type',\n\n  // the properties below are optional\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "dc3f7254fd3c00659ee3a56e4a3deee18d7a85c0ad573697cda0ef3a3c560d06"
    },
    "168e344978c549f18ae488402497ac0285d36f9f8f6f4acabbfd9254775fc6e5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_domain_configuration = iot.CfnDomainConfiguration(self, \"MyCfnDomainConfiguration\",\n    authorizer_config=iot.CfnDomainConfiguration.AuthorizerConfigProperty(\n        allow_authorizer_override=False,\n        default_authorizer_name=\"defaultAuthorizerName\"\n    ),\n    domain_configuration_name=\"domainConfigurationName\",\n    domain_configuration_status=\"domainConfigurationStatus\",\n    domain_name=\"domainName\",\n    server_certificate_arns=[\"serverCertificateArns\"],\n    service_type=\"serviceType\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    validation_certificate_arn=\"validationCertificateArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnDomainConfiguration cfnDomainConfiguration = new CfnDomainConfiguration(this, \"MyCfnDomainConfiguration\", new CfnDomainConfigurationProps {\n    AuthorizerConfig = new AuthorizerConfigProperty {\n        AllowAuthorizerOverride = false,\n        DefaultAuthorizerName = \"defaultAuthorizerName\"\n    },\n    DomainConfigurationName = \"domainConfigurationName\",\n    DomainConfigurationStatus = \"domainConfigurationStatus\",\n    DomainName = \"domainName\",\n    ServerCertificateArns = new [] { \"serverCertificateArns\" },\n    ServiceType = \"serviceType\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    ValidationCertificateArn = \"validationCertificateArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnDomainConfiguration cfnDomainConfiguration = CfnDomainConfiguration.Builder.create(this, \"MyCfnDomainConfiguration\")\n        .authorizerConfig(AuthorizerConfigProperty.builder()\n                .allowAuthorizerOverride(false)\n                .defaultAuthorizerName(\"defaultAuthorizerName\")\n                .build())\n        .domainConfigurationName(\"domainConfigurationName\")\n        .domainConfigurationStatus(\"domainConfigurationStatus\")\n        .domainName(\"domainName\")\n        .serverCertificateArns(List.of(\"serverCertificateArns\"))\n        .serviceType(\"serviceType\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .validationCertificateArn(\"validationCertificateArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnDomainConfiguration := iot.NewCfnDomainConfiguration(this, jsii.String(\"MyCfnDomainConfiguration\"), &cfnDomainConfigurationProps{\n\tauthorizerConfig: &authorizerConfigProperty{\n\t\tallowAuthorizerOverride: jsii.Boolean(false),\n\t\tdefaultAuthorizerName: jsii.String(\"defaultAuthorizerName\"),\n\t},\n\tdomainConfigurationName: jsii.String(\"domainConfigurationName\"),\n\tdomainConfigurationStatus: jsii.String(\"domainConfigurationStatus\"),\n\tdomainName: jsii.String(\"domainName\"),\n\tserverCertificateArns: []*string{\n\t\tjsii.String(\"serverCertificateArns\"),\n\t},\n\tserviceType: jsii.String(\"serviceType\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvalidationCertificateArn: jsii.String(\"validationCertificateArn\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnDomainConfiguration = new iot.CfnDomainConfiguration(this, 'MyCfnDomainConfiguration', /* all optional props */ {\n  authorizerConfig: {\n    allowAuthorizerOverride: false,\n    defaultAuthorizerName: 'defaultAuthorizerName',\n  },\n  domainConfigurationName: 'domainConfigurationName',\n  domainConfigurationStatus: 'domainConfigurationStatus',\n  domainName: 'domainName',\n  serverCertificateArns: ['serverCertificateArns'],\n  serviceType: 'serviceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  validationCertificateArn: 'validationCertificateArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnDomainConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnDomainConfiguration",
        "@aws-cdk/aws-iot.CfnDomainConfigurationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomainConfiguration = new iot.CfnDomainConfiguration(this, 'MyCfnDomainConfiguration', /* all optional props */ {\n  authorizerConfig: {\n    allowAuthorizerOverride: false,\n    defaultAuthorizerName: 'defaultAuthorizerName',\n  },\n  domainConfigurationName: 'domainConfigurationName',\n  domainConfigurationStatus: 'domainConfigurationStatus',\n  domainName: 'domainName',\n  serverCertificateArns: ['serverCertificateArns'],\n  serviceType: 'serviceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  validationCertificateArn: 'validationCertificateArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 16,
        "91": 1,
        "104": 1,
        "192": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "9a981c03cebcb062f7e1f063438b8a4a8413ff9fb1349d8d0df74b00506e0534"
    },
    "75247e8b140730ab61b52de14486fc6a25ca399283f0357c88e47a485a8513ff": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nauthorizer_config_property = iot.CfnDomainConfiguration.AuthorizerConfigProperty(\n    allow_authorizer_override=False,\n    default_authorizer_name=\"defaultAuthorizerName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAuthorizerConfigProperty authorizerConfigProperty = new AuthorizerConfigProperty {\n    AllowAuthorizerOverride = false,\n    DefaultAuthorizerName = \"defaultAuthorizerName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAuthorizerConfigProperty authorizerConfigProperty = AuthorizerConfigProperty.builder()\n        .allowAuthorizerOverride(false)\n        .defaultAuthorizerName(\"defaultAuthorizerName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nauthorizerConfigProperty := &authorizerConfigProperty{\n\tallowAuthorizerOverride: jsii.Boolean(false),\n\tdefaultAuthorizerName: jsii.String(\"defaultAuthorizerName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst authorizerConfigProperty: iot.CfnDomainConfiguration.AuthorizerConfigProperty = {\n  allowAuthorizerOverride: false,\n  defaultAuthorizerName: 'defaultAuthorizerName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnDomainConfiguration.AuthorizerConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnDomainConfiguration.AuthorizerConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst authorizerConfigProperty: iot.CfnDomainConfiguration.AuthorizerConfigProperty = {\n  allowAuthorizerOverride: false,\n  defaultAuthorizerName: 'defaultAuthorizerName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "39b5b47cffd95017ca6dd411520e68e22e14c3d993a4f14c5e2dd2c972a434a5"
    },
    "612bfd203d73dd8f66d0ae865e23623106c7b2bc0a3b44aa23bacd456b9d962d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nserver_certificate_summary_property = iot.CfnDomainConfiguration.ServerCertificateSummaryProperty(\n    server_certificate_arn=\"serverCertificateArn\",\n    server_certificate_status=\"serverCertificateStatus\",\n    server_certificate_status_detail=\"serverCertificateStatusDetail\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nServerCertificateSummaryProperty serverCertificateSummaryProperty = new ServerCertificateSummaryProperty {\n    ServerCertificateArn = \"serverCertificateArn\",\n    ServerCertificateStatus = \"serverCertificateStatus\",\n    ServerCertificateStatusDetail = \"serverCertificateStatusDetail\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nServerCertificateSummaryProperty serverCertificateSummaryProperty = ServerCertificateSummaryProperty.builder()\n        .serverCertificateArn(\"serverCertificateArn\")\n        .serverCertificateStatus(\"serverCertificateStatus\")\n        .serverCertificateStatusDetail(\"serverCertificateStatusDetail\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nserverCertificateSummaryProperty := &serverCertificateSummaryProperty{\n\tserverCertificateArn: jsii.String(\"serverCertificateArn\"),\n\tserverCertificateStatus: jsii.String(\"serverCertificateStatus\"),\n\tserverCertificateStatusDetail: jsii.String(\"serverCertificateStatusDetail\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst serverCertificateSummaryProperty: iot.CfnDomainConfiguration.ServerCertificateSummaryProperty = {\n  serverCertificateArn: 'serverCertificateArn',\n  serverCertificateStatus: 'serverCertificateStatus',\n  serverCertificateStatusDetail: 'serverCertificateStatusDetail',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnDomainConfiguration.ServerCertificateSummaryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnDomainConfiguration.ServerCertificateSummaryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serverCertificateSummaryProperty: iot.CfnDomainConfiguration.ServerCertificateSummaryProperty = {\n  serverCertificateArn: 'serverCertificateArn',\n  serverCertificateStatus: 'serverCertificateStatus',\n  serverCertificateStatusDetail: 'serverCertificateStatusDetail',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "37914f06b1032287a5b50b8201ba74919d508fb091cc72a1aea295a259a89c45"
    },
    "f0a1714d1ea18895f2ad966d3b53f51691e6894d5f74cb9e54b2121bf0868de7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_domain_configuration_props = iot.CfnDomainConfigurationProps(\n    authorizer_config=iot.CfnDomainConfiguration.AuthorizerConfigProperty(\n        allow_authorizer_override=False,\n        default_authorizer_name=\"defaultAuthorizerName\"\n    ),\n    domain_configuration_name=\"domainConfigurationName\",\n    domain_configuration_status=\"domainConfigurationStatus\",\n    domain_name=\"domainName\",\n    server_certificate_arns=[\"serverCertificateArns\"],\n    service_type=\"serviceType\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    validation_certificate_arn=\"validationCertificateArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnDomainConfigurationProps cfnDomainConfigurationProps = new CfnDomainConfigurationProps {\n    AuthorizerConfig = new AuthorizerConfigProperty {\n        AllowAuthorizerOverride = false,\n        DefaultAuthorizerName = \"defaultAuthorizerName\"\n    },\n    DomainConfigurationName = \"domainConfigurationName\",\n    DomainConfigurationStatus = \"domainConfigurationStatus\",\n    DomainName = \"domainName\",\n    ServerCertificateArns = new [] { \"serverCertificateArns\" },\n    ServiceType = \"serviceType\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    ValidationCertificateArn = \"validationCertificateArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnDomainConfigurationProps cfnDomainConfigurationProps = CfnDomainConfigurationProps.builder()\n        .authorizerConfig(AuthorizerConfigProperty.builder()\n                .allowAuthorizerOverride(false)\n                .defaultAuthorizerName(\"defaultAuthorizerName\")\n                .build())\n        .domainConfigurationName(\"domainConfigurationName\")\n        .domainConfigurationStatus(\"domainConfigurationStatus\")\n        .domainName(\"domainName\")\n        .serverCertificateArns(List.of(\"serverCertificateArns\"))\n        .serviceType(\"serviceType\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .validationCertificateArn(\"validationCertificateArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnDomainConfigurationProps := &cfnDomainConfigurationProps{\n\tauthorizerConfig: &authorizerConfigProperty{\n\t\tallowAuthorizerOverride: jsii.Boolean(false),\n\t\tdefaultAuthorizerName: jsii.String(\"defaultAuthorizerName\"),\n\t},\n\tdomainConfigurationName: jsii.String(\"domainConfigurationName\"),\n\tdomainConfigurationStatus: jsii.String(\"domainConfigurationStatus\"),\n\tdomainName: jsii.String(\"domainName\"),\n\tserverCertificateArns: []*string{\n\t\tjsii.String(\"serverCertificateArns\"),\n\t},\n\tserviceType: jsii.String(\"serviceType\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tvalidationCertificateArn: jsii.String(\"validationCertificateArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnDomainConfigurationProps: iot.CfnDomainConfigurationProps = {\n  authorizerConfig: {\n    allowAuthorizerOverride: false,\n    defaultAuthorizerName: 'defaultAuthorizerName',\n  },\n  domainConfigurationName: 'domainConfigurationName',\n  domainConfigurationStatus: 'domainConfigurationStatus',\n  domainName: 'domainName',\n  serverCertificateArns: ['serverCertificateArns'],\n  serviceType: 'serviceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  validationCertificateArn: 'validationCertificateArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnDomainConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnDomainConfigurationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomainConfigurationProps: iot.CfnDomainConfigurationProps = {\n  authorizerConfig: {\n    allowAuthorizerOverride: false,\n    defaultAuthorizerName: 'defaultAuthorizerName',\n  },\n  domainConfigurationName: 'domainConfigurationName',\n  domainConfigurationStatus: 'domainConfigurationStatus',\n  domainName: 'domainName',\n  serverCertificateArns: ['serverCertificateArns'],\n  serviceType: 'serviceType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  validationCertificateArn: 'validationCertificateArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 16,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "7a79d793bff4b72b45aaa4ce3cc77d03c2adc0401295c57bc11a48eab23dcaee"
    },
    "54d3bc37239fc26b4222846cb2634ff7a84554b91ce68b4b60a50a08c2bc0850": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_fleet_metric = iot.CfnFleetMetric(self, \"MyCfnFleetMetric\",\n    metric_name=\"metricName\",\n\n    # the properties below are optional\n    aggregation_field=\"aggregationField\",\n    aggregation_type=iot.CfnFleetMetric.AggregationTypeProperty(\n        name=\"name\",\n        values=[\"values\"]\n    ),\n    description=\"description\",\n    index_name=\"indexName\",\n    period=123,\n    query_string=\"queryString\",\n    query_version=\"queryVersion\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    unit=\"unit\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnFleetMetric cfnFleetMetric = new CfnFleetMetric(this, \"MyCfnFleetMetric\", new CfnFleetMetricProps {\n    MetricName = \"metricName\",\n\n    // the properties below are optional\n    AggregationField = \"aggregationField\",\n    AggregationType = new AggregationTypeProperty {\n        Name = \"name\",\n        Values = new [] { \"values\" }\n    },\n    Description = \"description\",\n    IndexName = \"indexName\",\n    Period = 123,\n    QueryString = \"queryString\",\n    QueryVersion = \"queryVersion\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Unit = \"unit\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnFleetMetric cfnFleetMetric = CfnFleetMetric.Builder.create(this, \"MyCfnFleetMetric\")\n        .metricName(\"metricName\")\n\n        // the properties below are optional\n        .aggregationField(\"aggregationField\")\n        .aggregationType(AggregationTypeProperty.builder()\n                .name(\"name\")\n                .values(List.of(\"values\"))\n                .build())\n        .description(\"description\")\n        .indexName(\"indexName\")\n        .period(123)\n        .queryString(\"queryString\")\n        .queryVersion(\"queryVersion\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .unit(\"unit\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnFleetMetric := iot.NewCfnFleetMetric(this, jsii.String(\"MyCfnFleetMetric\"), &cfnFleetMetricProps{\n\tmetricName: jsii.String(\"metricName\"),\n\n\t// the properties below are optional\n\taggregationField: jsii.String(\"aggregationField\"),\n\taggregationType: &aggregationTypeProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tindexName: jsii.String(\"indexName\"),\n\tperiod: jsii.Number(123),\n\tqueryString: jsii.String(\"queryString\"),\n\tqueryVersion: jsii.String(\"queryVersion\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tunit: jsii.String(\"unit\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnFleetMetric = new iot.CfnFleetMetric(this, 'MyCfnFleetMetric', {\n  metricName: 'metricName',\n\n  // the properties below are optional\n  aggregationField: 'aggregationField',\n  aggregationType: {\n    name: 'name',\n    values: ['values'],\n  },\n  description: 'description',\n  indexName: 'indexName',\n  period: 123,\n  queryString: 'queryString',\n  queryVersion: 'queryVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  unit: 'unit',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnFleetMetric"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnFleetMetric",
        "@aws-cdk/aws-iot.CfnFleetMetricProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFleetMetric = new iot.CfnFleetMetric(this, 'MyCfnFleetMetric', {\n  metricName: 'metricName',\n\n  // the properties below are optional\n  aggregationField: 'aggregationField',\n  aggregationType: {\n    name: 'name',\n    values: ['values'],\n  },\n  description: 'description',\n  indexName: 'indexName',\n  period: 123,\n  queryString: 'queryString',\n  queryVersion: 'queryVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  unit: 'unit',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 13,
        "75": 18,
        "104": 1,
        "192": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "108d76ed765945c379fbd5184027a3dd526e5b15974ce2342dd91c76acc95ffe"
    },
    "41c9643bbbf6d2ca1c9296fd5ed998b8da5ad938c2f9c29d02d1ee2ed13700e6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naggregation_type_property = iot.CfnFleetMetric.AggregationTypeProperty(\n    name=\"name\",\n    values=[\"values\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAggregationTypeProperty aggregationTypeProperty = new AggregationTypeProperty {\n    Name = \"name\",\n    Values = new [] { \"values\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAggregationTypeProperty aggregationTypeProperty = AggregationTypeProperty.builder()\n        .name(\"name\")\n        .values(List.of(\"values\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\naggregationTypeProperty := &aggregationTypeProperty{\n\tname: jsii.String(\"name\"),\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst aggregationTypeProperty: iot.CfnFleetMetric.AggregationTypeProperty = {\n  name: 'name',\n  values: ['values'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnFleetMetric.AggregationTypeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnFleetMetric.AggregationTypeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst aggregationTypeProperty: iot.CfnFleetMetric.AggregationTypeProperty = {\n  name: 'name',\n  values: ['values'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d204c70b504862872c6cdefe06d6f1a075c4634bb94f2241877794d4664fb064"
    },
    "d4e66a66e6c03fadf30ef2675790fc8541222f8460c08e9352323e028ddb9140": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_fleet_metric_props = iot.CfnFleetMetricProps(\n    metric_name=\"metricName\",\n\n    # the properties below are optional\n    aggregation_field=\"aggregationField\",\n    aggregation_type=iot.CfnFleetMetric.AggregationTypeProperty(\n        name=\"name\",\n        values=[\"values\"]\n    ),\n    description=\"description\",\n    index_name=\"indexName\",\n    period=123,\n    query_string=\"queryString\",\n    query_version=\"queryVersion\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    unit=\"unit\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnFleetMetricProps cfnFleetMetricProps = new CfnFleetMetricProps {\n    MetricName = \"metricName\",\n\n    // the properties below are optional\n    AggregationField = \"aggregationField\",\n    AggregationType = new AggregationTypeProperty {\n        Name = \"name\",\n        Values = new [] { \"values\" }\n    },\n    Description = \"description\",\n    IndexName = \"indexName\",\n    Period = 123,\n    QueryString = \"queryString\",\n    QueryVersion = \"queryVersion\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    Unit = \"unit\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnFleetMetricProps cfnFleetMetricProps = CfnFleetMetricProps.builder()\n        .metricName(\"metricName\")\n\n        // the properties below are optional\n        .aggregationField(\"aggregationField\")\n        .aggregationType(AggregationTypeProperty.builder()\n                .name(\"name\")\n                .values(List.of(\"values\"))\n                .build())\n        .description(\"description\")\n        .indexName(\"indexName\")\n        .period(123)\n        .queryString(\"queryString\")\n        .queryVersion(\"queryVersion\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .unit(\"unit\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnFleetMetricProps := &cfnFleetMetricProps{\n\tmetricName: jsii.String(\"metricName\"),\n\n\t// the properties below are optional\n\taggregationField: jsii.String(\"aggregationField\"),\n\taggregationType: &aggregationTypeProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tindexName: jsii.String(\"indexName\"),\n\tperiod: jsii.Number(123),\n\tqueryString: jsii.String(\"queryString\"),\n\tqueryVersion: jsii.String(\"queryVersion\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tunit: jsii.String(\"unit\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnFleetMetricProps: iot.CfnFleetMetricProps = {\n  metricName: 'metricName',\n\n  // the properties below are optional\n  aggregationField: 'aggregationField',\n  aggregationType: {\n    name: 'name',\n    values: ['values'],\n  },\n  description: 'description',\n  indexName: 'indexName',\n  period: 123,\n  queryString: 'queryString',\n  queryVersion: 'queryVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  unit: 'unit',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnFleetMetricProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnFleetMetricProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFleetMetricProps: iot.CfnFleetMetricProps = {\n  metricName: 'metricName',\n\n  // the properties below are optional\n  aggregationField: 'aggregationField',\n  aggregationType: {\n    name: 'name',\n    values: ['values'],\n  },\n  description: 'description',\n  indexName: 'indexName',\n  period: 123,\n  queryString: 'queryString',\n  queryVersion: 'queryVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  unit: 'unit',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 12,
        "75": 18,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "ebf111c9e21e3a53193fcfe1bfc6a9316b71adf13917544bd487adb278967415"
    },
    "4250214066ac65850a3f1615e5505b36a43c891853b2483122b77e18bf4af3f4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\n# abort_config: Any\n# job_executions_rollout_config: Any\n# presigned_url_config: Any\n# timeout_config: Any\n\ncfn_job_template = iot.CfnJobTemplate(self, \"MyCfnJobTemplate\",\n    description=\"description\",\n    job_template_id=\"jobTemplateId\",\n\n    # the properties below are optional\n    abort_config=abort_config,\n    document=\"document\",\n    document_source=\"documentSource\",\n    job_arn=\"jobArn\",\n    job_executions_retry_config=iot.CfnJobTemplate.JobExecutionsRetryConfigProperty(\n        retry_criteria_list=[iot.CfnJobTemplate.RetryCriteriaProperty(\n            failure_type=\"failureType\",\n            number_of_retries=123\n        )]\n    ),\n    job_executions_rollout_config=job_executions_rollout_config,\n    presigned_url_config=presigned_url_config,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    timeout_config=timeout_config\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nvar abortConfig;\nvar jobExecutionsRolloutConfig;\nvar presignedUrlConfig;\nvar timeoutConfig;\n\nCfnJobTemplate cfnJobTemplate = new CfnJobTemplate(this, \"MyCfnJobTemplate\", new CfnJobTemplateProps {\n    Description = \"description\",\n    JobTemplateId = \"jobTemplateId\",\n\n    // the properties below are optional\n    AbortConfig = abortConfig,\n    Document = \"document\",\n    DocumentSource = \"documentSource\",\n    JobArn = \"jobArn\",\n    JobExecutionsRetryConfig = new JobExecutionsRetryConfigProperty {\n        RetryCriteriaList = new [] { new RetryCriteriaProperty {\n            FailureType = \"failureType\",\n            NumberOfRetries = 123\n        } }\n    },\n    JobExecutionsRolloutConfig = jobExecutionsRolloutConfig,\n    PresignedUrlConfig = presignedUrlConfig,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TimeoutConfig = timeoutConfig\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nObject abortConfig;\nObject jobExecutionsRolloutConfig;\nObject presignedUrlConfig;\nObject timeoutConfig;\n\nCfnJobTemplate cfnJobTemplate = CfnJobTemplate.Builder.create(this, \"MyCfnJobTemplate\")\n        .description(\"description\")\n        .jobTemplateId(\"jobTemplateId\")\n\n        // the properties below are optional\n        .abortConfig(abortConfig)\n        .document(\"document\")\n        .documentSource(\"documentSource\")\n        .jobArn(\"jobArn\")\n        .jobExecutionsRetryConfig(JobExecutionsRetryConfigProperty.builder()\n                .retryCriteriaList(List.of(RetryCriteriaProperty.builder()\n                        .failureType(\"failureType\")\n                        .numberOfRetries(123)\n                        .build()))\n                .build())\n        .jobExecutionsRolloutConfig(jobExecutionsRolloutConfig)\n        .presignedUrlConfig(presignedUrlConfig)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .timeoutConfig(timeoutConfig)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nvar abortConfig interface{}\nvar jobExecutionsRolloutConfig interface{}\nvar presignedUrlConfig interface{}\nvar timeoutConfig interface{}\n\ncfnJobTemplate := iot.NewCfnJobTemplate(this, jsii.String(\"MyCfnJobTemplate\"), &cfnJobTemplateProps{\n\tdescription: jsii.String(\"description\"),\n\tjobTemplateId: jsii.String(\"jobTemplateId\"),\n\n\t// the properties below are optional\n\tabortConfig: abortConfig,\n\tdocument: jsii.String(\"document\"),\n\tdocumentSource: jsii.String(\"documentSource\"),\n\tjobArn: jsii.String(\"jobArn\"),\n\tjobExecutionsRetryConfig: &jobExecutionsRetryConfigProperty{\n\t\tretryCriteriaList: []interface{}{\n\t\t\t&retryCriteriaProperty{\n\t\t\t\tfailureType: jsii.String(\"failureType\"),\n\t\t\t\tnumberOfRetries: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tjobExecutionsRolloutConfig: jobExecutionsRolloutConfig,\n\tpresignedUrlConfig: presignedUrlConfig,\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttimeoutConfig: timeoutConfig,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const abortConfig: any;\ndeclare const jobExecutionsRolloutConfig: any;\ndeclare const presignedUrlConfig: any;\ndeclare const timeoutConfig: any;\nconst cfnJobTemplate = new iot.CfnJobTemplate(this, 'MyCfnJobTemplate', {\n  description: 'description',\n  jobTemplateId: 'jobTemplateId',\n\n  // the properties below are optional\n  abortConfig: abortConfig,\n  document: 'document',\n  documentSource: 'documentSource',\n  jobArn: 'jobArn',\n  jobExecutionsRetryConfig: {\n    retryCriteriaList: [{\n      failureType: 'failureType',\n      numberOfRetries: 123,\n    }],\n  },\n  jobExecutionsRolloutConfig: jobExecutionsRolloutConfig,\n  presignedUrlConfig: presignedUrlConfig,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeoutConfig: timeoutConfig,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate",
        "@aws-cdk/aws-iot.CfnJobTemplateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const abortConfig: any;\ndeclare const jobExecutionsRolloutConfig: any;\ndeclare const presignedUrlConfig: any;\ndeclare const timeoutConfig: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnJobTemplate = new iot.CfnJobTemplate(this, 'MyCfnJobTemplate', {\n  description: 'description',\n  jobTemplateId: 'jobTemplateId',\n\n  // the properties below are optional\n  abortConfig: abortConfig,\n  document: 'document',\n  documentSource: 'documentSource',\n  jobArn: 'jobArn',\n  jobExecutionsRetryConfig: {\n    retryCriteriaList: [{\n      failureType: 'failureType',\n      numberOfRetries: 123,\n    }],\n  },\n  jobExecutionsRolloutConfig: jobExecutionsRolloutConfig,\n  presignedUrlConfig: presignedUrlConfig,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeoutConfig: timeoutConfig,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 28,
        "104": 1,
        "125": 4,
        "130": 4,
        "192": 2,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 16,
        "290": 1
      },
      "fqnsFingerprint": "dee4a1e3a40163e7606990566882a23815d0c246fd96c157f40b311612e1d491"
    },
    "a622db00537adc1dd018c2fbb2f598c75d0cc7be66ad13c59bcaeece596c6b12": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nabort_config_property = iot.CfnJobTemplate.AbortConfigProperty(\n    criteria_list=[iot.CfnJobTemplate.AbortCriteriaProperty(\n        action=\"action\",\n        failure_type=\"failureType\",\n        min_number_of_executed_things=123,\n        threshold_percentage=123\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAbortConfigProperty abortConfigProperty = new AbortConfigProperty {\n    CriteriaList = new [] { new AbortCriteriaProperty {\n        Action = \"action\",\n        FailureType = \"failureType\",\n        MinNumberOfExecutedThings = 123,\n        ThresholdPercentage = 123\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAbortConfigProperty abortConfigProperty = AbortConfigProperty.builder()\n        .criteriaList(List.of(AbortCriteriaProperty.builder()\n                .action(\"action\")\n                .failureType(\"failureType\")\n                .minNumberOfExecutedThings(123)\n                .thresholdPercentage(123)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nabortConfigProperty := &abortConfigProperty{\n\tcriteriaList: []interface{}{\n\t\t&abortCriteriaProperty{\n\t\t\taction: jsii.String(\"action\"),\n\t\t\tfailureType: jsii.String(\"failureType\"),\n\t\t\tminNumberOfExecutedThings: jsii.Number(123),\n\t\t\tthresholdPercentage: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst abortConfigProperty: iot.CfnJobTemplate.AbortConfigProperty = {\n  criteriaList: [{\n    action: 'action',\n    failureType: 'failureType',\n    minNumberOfExecutedThings: 123,\n    thresholdPercentage: 123,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.AbortConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.AbortConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst abortConfigProperty: iot.CfnJobTemplate.AbortConfigProperty = {\n  criteriaList: [{\n    action: 'action',\n    failureType: 'failureType',\n    minNumberOfExecutedThings: 123,\n    thresholdPercentage: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e4f6627a06897b06496f76ea9cb2839fcce029d8c5cd861f2406ff28f2e58a9c"
    },
    "a2b4def7b4abc3d7e3bd72062a05a76ac2d3c10aad01a642c9419806c0eba1c6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nabort_criteria_property = iot.CfnJobTemplate.AbortCriteriaProperty(\n    action=\"action\",\n    failure_type=\"failureType\",\n    min_number_of_executed_things=123,\n    threshold_percentage=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAbortCriteriaProperty abortCriteriaProperty = new AbortCriteriaProperty {\n    Action = \"action\",\n    FailureType = \"failureType\",\n    MinNumberOfExecutedThings = 123,\n    ThresholdPercentage = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAbortCriteriaProperty abortCriteriaProperty = AbortCriteriaProperty.builder()\n        .action(\"action\")\n        .failureType(\"failureType\")\n        .minNumberOfExecutedThings(123)\n        .thresholdPercentage(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nabortCriteriaProperty := &abortCriteriaProperty{\n\taction: jsii.String(\"action\"),\n\tfailureType: jsii.String(\"failureType\"),\n\tminNumberOfExecutedThings: jsii.Number(123),\n\tthresholdPercentage: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst abortCriteriaProperty: iot.CfnJobTemplate.AbortCriteriaProperty = {\n  action: 'action',\n  failureType: 'failureType',\n  minNumberOfExecutedThings: 123,\n  thresholdPercentage: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.AbortCriteriaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.AbortCriteriaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst abortCriteriaProperty: iot.CfnJobTemplate.AbortCriteriaProperty = {\n  action: 'action',\n  failureType: 'failureType',\n  minNumberOfExecutedThings: 123,\n  thresholdPercentage: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "c51551b01105658460baeb6bc8df9b8ce22aafce9392fa4dd7985499b91a5e11"
    },
    "cf8215b98d2d21646fc68bc68fcf6862a8474d4a64015302c492f854b57989e6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nexponential_rollout_rate_property = iot.CfnJobTemplate.ExponentialRolloutRateProperty(\n    base_rate_per_minute=123,\n    increment_factor=123,\n    rate_increase_criteria=iot.CfnJobTemplate.RateIncreaseCriteriaProperty(\n        number_of_notified_things=123,\n        number_of_succeeded_things=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nExponentialRolloutRateProperty exponentialRolloutRateProperty = new ExponentialRolloutRateProperty {\n    BaseRatePerMinute = 123,\n    IncrementFactor = 123,\n    RateIncreaseCriteria = new RateIncreaseCriteriaProperty {\n        NumberOfNotifiedThings = 123,\n        NumberOfSucceededThings = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nExponentialRolloutRateProperty exponentialRolloutRateProperty = ExponentialRolloutRateProperty.builder()\n        .baseRatePerMinute(123)\n        .incrementFactor(123)\n        .rateIncreaseCriteria(RateIncreaseCriteriaProperty.builder()\n                .numberOfNotifiedThings(123)\n                .numberOfSucceededThings(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nexponentialRolloutRateProperty := &exponentialRolloutRateProperty{\n\tbaseRatePerMinute: jsii.Number(123),\n\tincrementFactor: jsii.Number(123),\n\trateIncreaseCriteria: &rateIncreaseCriteriaProperty{\n\t\tnumberOfNotifiedThings: jsii.Number(123),\n\t\tnumberOfSucceededThings: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst exponentialRolloutRateProperty: iot.CfnJobTemplate.ExponentialRolloutRateProperty = {\n  baseRatePerMinute: 123,\n  incrementFactor: 123,\n  rateIncreaseCriteria: {\n    numberOfNotifiedThings: 123,\n    numberOfSucceededThings: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.ExponentialRolloutRateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.ExponentialRolloutRateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst exponentialRolloutRateProperty: iot.CfnJobTemplate.ExponentialRolloutRateProperty = {\n  baseRatePerMinute: 123,\n  incrementFactor: 123,\n  rateIncreaseCriteria: {\n    numberOfNotifiedThings: 123,\n    numberOfSucceededThings: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "acd8e44f2c423b6a42de0e4e95ecec47ab9e5cbe5277f9acad32c6572c6df713"
    },
    "e23923125ccba3f1293dc5b1e6dc8b12f8dad07df568a6b4ad10e993b53bc963": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\njob_executions_retry_config_property = iot.CfnJobTemplate.JobExecutionsRetryConfigProperty(\n    retry_criteria_list=[iot.CfnJobTemplate.RetryCriteriaProperty(\n        failure_type=\"failureType\",\n        number_of_retries=123\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nJobExecutionsRetryConfigProperty jobExecutionsRetryConfigProperty = new JobExecutionsRetryConfigProperty {\n    RetryCriteriaList = new [] { new RetryCriteriaProperty {\n        FailureType = \"failureType\",\n        NumberOfRetries = 123\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nJobExecutionsRetryConfigProperty jobExecutionsRetryConfigProperty = JobExecutionsRetryConfigProperty.builder()\n        .retryCriteriaList(List.of(RetryCriteriaProperty.builder()\n                .failureType(\"failureType\")\n                .numberOfRetries(123)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\njobExecutionsRetryConfigProperty := &jobExecutionsRetryConfigProperty{\n\tretryCriteriaList: []interface{}{\n\t\t&retryCriteriaProperty{\n\t\t\tfailureType: jsii.String(\"failureType\"),\n\t\t\tnumberOfRetries: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst jobExecutionsRetryConfigProperty: iot.CfnJobTemplate.JobExecutionsRetryConfigProperty = {\n  retryCriteriaList: [{\n    failureType: 'failureType',\n    numberOfRetries: 123,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.JobExecutionsRetryConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.JobExecutionsRetryConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobExecutionsRetryConfigProperty: iot.CfnJobTemplate.JobExecutionsRetryConfigProperty = {\n  retryCriteriaList: [{\n    failureType: 'failureType',\n    numberOfRetries: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "6d43f6a5d4495babc46045baae67a3dc4e949b385233029cf126378b8a87581d"
    },
    "624293280ed9aff5fa2902c557790cc356159b4cfe792ee5f40d0a167ad20937": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\njob_executions_rollout_config_property = iot.CfnJobTemplate.JobExecutionsRolloutConfigProperty(\n    exponential_rollout_rate=iot.CfnJobTemplate.ExponentialRolloutRateProperty(\n        base_rate_per_minute=123,\n        increment_factor=123,\n        rate_increase_criteria=iot.CfnJobTemplate.RateIncreaseCriteriaProperty(\n            number_of_notified_things=123,\n            number_of_succeeded_things=123\n        )\n    ),\n    maximum_per_minute=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nJobExecutionsRolloutConfigProperty jobExecutionsRolloutConfigProperty = new JobExecutionsRolloutConfigProperty {\n    ExponentialRolloutRate = new ExponentialRolloutRateProperty {\n        BaseRatePerMinute = 123,\n        IncrementFactor = 123,\n        RateIncreaseCriteria = new RateIncreaseCriteriaProperty {\n            NumberOfNotifiedThings = 123,\n            NumberOfSucceededThings = 123\n        }\n    },\n    MaximumPerMinute = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nJobExecutionsRolloutConfigProperty jobExecutionsRolloutConfigProperty = JobExecutionsRolloutConfigProperty.builder()\n        .exponentialRolloutRate(ExponentialRolloutRateProperty.builder()\n                .baseRatePerMinute(123)\n                .incrementFactor(123)\n                .rateIncreaseCriteria(RateIncreaseCriteriaProperty.builder()\n                        .numberOfNotifiedThings(123)\n                        .numberOfSucceededThings(123)\n                        .build())\n                .build())\n        .maximumPerMinute(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\njobExecutionsRolloutConfigProperty := &jobExecutionsRolloutConfigProperty{\n\texponentialRolloutRate: &exponentialRolloutRateProperty{\n\t\tbaseRatePerMinute: jsii.Number(123),\n\t\tincrementFactor: jsii.Number(123),\n\t\trateIncreaseCriteria: &rateIncreaseCriteriaProperty{\n\t\t\tnumberOfNotifiedThings: jsii.Number(123),\n\t\t\tnumberOfSucceededThings: jsii.Number(123),\n\t\t},\n\t},\n\tmaximumPerMinute: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst jobExecutionsRolloutConfigProperty: iot.CfnJobTemplate.JobExecutionsRolloutConfigProperty = {\n  exponentialRolloutRate: {\n    baseRatePerMinute: 123,\n    incrementFactor: 123,\n    rateIncreaseCriteria: {\n      numberOfNotifiedThings: 123,\n      numberOfSucceededThings: 123,\n    },\n  },\n  maximumPerMinute: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.JobExecutionsRolloutConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.JobExecutionsRolloutConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobExecutionsRolloutConfigProperty: iot.CfnJobTemplate.JobExecutionsRolloutConfigProperty = {\n  exponentialRolloutRate: {\n    baseRatePerMinute: 123,\n    incrementFactor: 123,\n    rateIncreaseCriteria: {\n      numberOfNotifiedThings: 123,\n      numberOfSucceededThings: 123,\n    },\n  },\n  maximumPerMinute: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 1,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "7cf2a00c7d409df8d1091919cb6da3314cc929003338461e6e4a3e5228fd52bd"
    },
    "ae0953a55f58d4b3c0cde633337cd13d195fb0d1edaae56a2628dfdd269904ea": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\npresigned_url_config_property = iot.CfnJobTemplate.PresignedUrlConfigProperty(\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    expires_in_sec=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nPresignedUrlConfigProperty presignedUrlConfigProperty = new PresignedUrlConfigProperty {\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    ExpiresInSec = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nPresignedUrlConfigProperty presignedUrlConfigProperty = PresignedUrlConfigProperty.builder()\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .expiresInSec(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\npresignedUrlConfigProperty := &presignedUrlConfigProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\texpiresInSec: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst presignedUrlConfigProperty: iot.CfnJobTemplate.PresignedUrlConfigProperty = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  expiresInSec: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.PresignedUrlConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.PresignedUrlConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst presignedUrlConfigProperty: iot.CfnJobTemplate.PresignedUrlConfigProperty = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  expiresInSec: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "0b046cae6378af32c5d9638ee119f9e2cddcdc4e3002f65525dff564af25ce3f"
    },
    "c018532aae05c220b6d696155aa3d2a1458f213f0ae814641591db619bb7374d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nrate_increase_criteria_property = iot.CfnJobTemplate.RateIncreaseCriteriaProperty(\n    number_of_notified_things=123,\n    number_of_succeeded_things=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nRateIncreaseCriteriaProperty rateIncreaseCriteriaProperty = new RateIncreaseCriteriaProperty {\n    NumberOfNotifiedThings = 123,\n    NumberOfSucceededThings = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nRateIncreaseCriteriaProperty rateIncreaseCriteriaProperty = RateIncreaseCriteriaProperty.builder()\n        .numberOfNotifiedThings(123)\n        .numberOfSucceededThings(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nrateIncreaseCriteriaProperty := &rateIncreaseCriteriaProperty{\n\tnumberOfNotifiedThings: jsii.Number(123),\n\tnumberOfSucceededThings: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst rateIncreaseCriteriaProperty: iot.CfnJobTemplate.RateIncreaseCriteriaProperty = {\n  numberOfNotifiedThings: 123,\n  numberOfSucceededThings: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.RateIncreaseCriteriaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.RateIncreaseCriteriaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rateIncreaseCriteriaProperty: iot.CfnJobTemplate.RateIncreaseCriteriaProperty = {\n  numberOfNotifiedThings: 123,\n  numberOfSucceededThings: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8c062b76665dd06451c933990b7401dc7dd6cd189ce64412be729e5267344feb"
    },
    "43b93dbbf1379891c60e1f5f20166c61dc8d1db7152bafbbed5579e36b466f3d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nretry_criteria_property = iot.CfnJobTemplate.RetryCriteriaProperty(\n    failure_type=\"failureType\",\n    number_of_retries=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nRetryCriteriaProperty retryCriteriaProperty = new RetryCriteriaProperty {\n    FailureType = \"failureType\",\n    NumberOfRetries = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nRetryCriteriaProperty retryCriteriaProperty = RetryCriteriaProperty.builder()\n        .failureType(\"failureType\")\n        .numberOfRetries(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nretryCriteriaProperty := &retryCriteriaProperty{\n\tfailureType: jsii.String(\"failureType\"),\n\tnumberOfRetries: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst retryCriteriaProperty: iot.CfnJobTemplate.RetryCriteriaProperty = {\n  failureType: 'failureType',\n  numberOfRetries: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.RetryCriteriaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.RetryCriteriaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst retryCriteriaProperty: iot.CfnJobTemplate.RetryCriteriaProperty = {\n  failureType: 'failureType',\n  numberOfRetries: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d2eb3b4e13d7ba916b9ee30b240d19ef041a465a75522be74b3bacbe7fcc9bfd"
    },
    "29d69aa185cd525c190b1a6911b7a14a7daa721ffe01ed966fe301a0934529ec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ntimeout_config_property = iot.CfnJobTemplate.TimeoutConfigProperty(\n    in_progress_timeout_in_minutes=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nTimeoutConfigProperty timeoutConfigProperty = new TimeoutConfigProperty {\n    InProgressTimeoutInMinutes = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nTimeoutConfigProperty timeoutConfigProperty = TimeoutConfigProperty.builder()\n        .inProgressTimeoutInMinutes(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ntimeoutConfigProperty := &timeoutConfigProperty{\n\tinProgressTimeoutInMinutes: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst timeoutConfigProperty: iot.CfnJobTemplate.TimeoutConfigProperty = {\n  inProgressTimeoutInMinutes: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplate.TimeoutConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplate.TimeoutConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timeoutConfigProperty: iot.CfnJobTemplate.TimeoutConfigProperty = {\n  inProgressTimeoutInMinutes: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "6011f075b1d16a8c3ffb72b2fb7ba3bb4814f5074f40f281bc29a9236385977d"
    },
    "4ca8461af6eeae55020dd0114169e313e310955eb94ed157ffeb8041c19f112d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\n# abort_config: Any\n# job_executions_rollout_config: Any\n# presigned_url_config: Any\n# timeout_config: Any\n\ncfn_job_template_props = iot.CfnJobTemplateProps(\n    description=\"description\",\n    job_template_id=\"jobTemplateId\",\n\n    # the properties below are optional\n    abort_config=abort_config,\n    document=\"document\",\n    document_source=\"documentSource\",\n    job_arn=\"jobArn\",\n    job_executions_retry_config=iot.CfnJobTemplate.JobExecutionsRetryConfigProperty(\n        retry_criteria_list=[iot.CfnJobTemplate.RetryCriteriaProperty(\n            failure_type=\"failureType\",\n            number_of_retries=123\n        )]\n    ),\n    job_executions_rollout_config=job_executions_rollout_config,\n    presigned_url_config=presigned_url_config,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    timeout_config=timeout_config\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nvar abortConfig;\nvar jobExecutionsRolloutConfig;\nvar presignedUrlConfig;\nvar timeoutConfig;\n\nCfnJobTemplateProps cfnJobTemplateProps = new CfnJobTemplateProps {\n    Description = \"description\",\n    JobTemplateId = \"jobTemplateId\",\n\n    // the properties below are optional\n    AbortConfig = abortConfig,\n    Document = \"document\",\n    DocumentSource = \"documentSource\",\n    JobArn = \"jobArn\",\n    JobExecutionsRetryConfig = new JobExecutionsRetryConfigProperty {\n        RetryCriteriaList = new [] { new RetryCriteriaProperty {\n            FailureType = \"failureType\",\n            NumberOfRetries = 123\n        } }\n    },\n    JobExecutionsRolloutConfig = jobExecutionsRolloutConfig,\n    PresignedUrlConfig = presignedUrlConfig,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TimeoutConfig = timeoutConfig\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nObject abortConfig;\nObject jobExecutionsRolloutConfig;\nObject presignedUrlConfig;\nObject timeoutConfig;\n\nCfnJobTemplateProps cfnJobTemplateProps = CfnJobTemplateProps.builder()\n        .description(\"description\")\n        .jobTemplateId(\"jobTemplateId\")\n\n        // the properties below are optional\n        .abortConfig(abortConfig)\n        .document(\"document\")\n        .documentSource(\"documentSource\")\n        .jobArn(\"jobArn\")\n        .jobExecutionsRetryConfig(JobExecutionsRetryConfigProperty.builder()\n                .retryCriteriaList(List.of(RetryCriteriaProperty.builder()\n                        .failureType(\"failureType\")\n                        .numberOfRetries(123)\n                        .build()))\n                .build())\n        .jobExecutionsRolloutConfig(jobExecutionsRolloutConfig)\n        .presignedUrlConfig(presignedUrlConfig)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .timeoutConfig(timeoutConfig)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nvar abortConfig interface{}\nvar jobExecutionsRolloutConfig interface{}\nvar presignedUrlConfig interface{}\nvar timeoutConfig interface{}\n\ncfnJobTemplateProps := &cfnJobTemplateProps{\n\tdescription: jsii.String(\"description\"),\n\tjobTemplateId: jsii.String(\"jobTemplateId\"),\n\n\t// the properties below are optional\n\tabortConfig: abortConfig,\n\tdocument: jsii.String(\"document\"),\n\tdocumentSource: jsii.String(\"documentSource\"),\n\tjobArn: jsii.String(\"jobArn\"),\n\tjobExecutionsRetryConfig: &jobExecutionsRetryConfigProperty{\n\t\tretryCriteriaList: []interface{}{\n\t\t\t&retryCriteriaProperty{\n\t\t\t\tfailureType: jsii.String(\"failureType\"),\n\t\t\t\tnumberOfRetries: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\tjobExecutionsRolloutConfig: jobExecutionsRolloutConfig,\n\tpresignedUrlConfig: presignedUrlConfig,\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttimeoutConfig: timeoutConfig,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const abortConfig: any;\ndeclare const jobExecutionsRolloutConfig: any;\ndeclare const presignedUrlConfig: any;\ndeclare const timeoutConfig: any;\nconst cfnJobTemplateProps: iot.CfnJobTemplateProps = {\n  description: 'description',\n  jobTemplateId: 'jobTemplateId',\n\n  // the properties below are optional\n  abortConfig: abortConfig,\n  document: 'document',\n  documentSource: 'documentSource',\n  jobArn: 'jobArn',\n  jobExecutionsRetryConfig: {\n    retryCriteriaList: [{\n      failureType: 'failureType',\n      numberOfRetries: 123,\n    }],\n  },\n  jobExecutionsRolloutConfig: jobExecutionsRolloutConfig,\n  presignedUrlConfig: presignedUrlConfig,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeoutConfig: timeoutConfig,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnJobTemplateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnJobTemplateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const abortConfig: any;\ndeclare const jobExecutionsRolloutConfig: any;\ndeclare const presignedUrlConfig: any;\ndeclare const timeoutConfig: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnJobTemplateProps: iot.CfnJobTemplateProps = {\n  description: 'description',\n  jobTemplateId: 'jobTemplateId',\n\n  // the properties below are optional\n  abortConfig: abortConfig,\n  document: 'document',\n  documentSource: 'documentSource',\n  jobArn: 'jobArn',\n  jobExecutionsRetryConfig: {\n    retryCriteriaList: [{\n      failureType: 'failureType',\n      numberOfRetries: 123,\n    }],\n  },\n  jobExecutionsRolloutConfig: jobExecutionsRolloutConfig,\n  presignedUrlConfig: presignedUrlConfig,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeoutConfig: timeoutConfig,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 9,
        "75": 28,
        "125": 4,
        "130": 4,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 16,
        "290": 1
      },
      "fqnsFingerprint": "dde4bc418748437c16b5941ac1a1c2f414e896fd7c045f75fb0d850e1ba101a6"
    },
    "e55e7d3de704e0dd23da1eba7ebc5e12f071717c572343204ecc6245cfccd7ac": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_logging = iot.CfnLogging(self, \"MyCfnLogging\",\n    account_id=\"accountId\",\n    default_log_level=\"defaultLogLevel\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnLogging cfnLogging = new CfnLogging(this, \"MyCfnLogging\", new CfnLoggingProps {\n    AccountId = \"accountId\",\n    DefaultLogLevel = \"defaultLogLevel\",\n    RoleArn = \"roleArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnLogging cfnLogging = CfnLogging.Builder.create(this, \"MyCfnLogging\")\n        .accountId(\"accountId\")\n        .defaultLogLevel(\"defaultLogLevel\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnLogging := iot.NewCfnLogging(this, jsii.String(\"MyCfnLogging\"), &cfnLoggingProps{\n\taccountId: jsii.String(\"accountId\"),\n\tdefaultLogLevel: jsii.String(\"defaultLogLevel\"),\n\troleArn: jsii.String(\"roleArn\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnLogging = new iot.CfnLogging(this, 'MyCfnLogging', {\n  accountId: 'accountId',\n  defaultLogLevel: 'defaultLogLevel',\n  roleArn: 'roleArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnLogging"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnLogging",
        "@aws-cdk/aws-iot.CfnLoggingProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLogging = new iot.CfnLogging(this, 'MyCfnLogging', {\n  accountId: 'accountId',\n  defaultLogLevel: 'defaultLogLevel',\n  roleArn: 'roleArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "7a75656b461c673a4f399cc14584e3479734fb5e06220e3c0b4457fd215daa9a"
    },
    "97b66e24526f576b2dfe65868cd7adb731c8d79b11389fc284d2de65632c9b81": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_logging_props = iot.CfnLoggingProps(\n    account_id=\"accountId\",\n    default_log_level=\"defaultLogLevel\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnLoggingProps cfnLoggingProps = new CfnLoggingProps {\n    AccountId = \"accountId\",\n    DefaultLogLevel = \"defaultLogLevel\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnLoggingProps cfnLoggingProps = CfnLoggingProps.builder()\n        .accountId(\"accountId\")\n        .defaultLogLevel(\"defaultLogLevel\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnLoggingProps := &cfnLoggingProps{\n\taccountId: jsii.String(\"accountId\"),\n\tdefaultLogLevel: jsii.String(\"defaultLogLevel\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnLoggingProps: iot.CfnLoggingProps = {\n  accountId: 'accountId',\n  defaultLogLevel: 'defaultLogLevel',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnLoggingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnLoggingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLoggingProps: iot.CfnLoggingProps = {\n  accountId: 'accountId',\n  defaultLogLevel: 'defaultLogLevel',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "dc25fbb9a6d507f8ff13cce3a94f1aacfca7ff62762d5fc67e3fdd1fb6501751"
    },
    "3ee487e22b67610a43e1274e6e3c0aa78574153548eb4e651d889f35e776d1c5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_mitigation_action = iot.CfnMitigationAction(self, \"MyCfnMitigationAction\",\n    action_params=iot.CfnMitigationAction.ActionParamsProperty(\n        add_things_to_thing_group_params=iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty(\n            thing_group_names=[\"thingGroupNames\"],\n\n            # the properties below are optional\n            override_dynamic_groups=False\n        ),\n        enable_io_tLogging_params=iot.CfnMitigationAction.EnableIoTLoggingParamsProperty(\n            log_level=\"logLevel\",\n            role_arn_for_logging=\"roleArnForLogging\"\n        ),\n        publish_finding_to_sns_params=iot.CfnMitigationAction.PublishFindingToSnsParamsProperty(\n            topic_arn=\"topicArn\"\n        ),\n        replace_default_policy_version_params=iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty(\n            template_name=\"templateName\"\n        ),\n        update_ca_certificate_params=iot.CfnMitigationAction.UpdateCACertificateParamsProperty(\n            action=\"action\"\n        ),\n        update_device_certificate_params=iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty(\n            action=\"action\"\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    action_name=\"actionName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnMitigationAction cfnMitigationAction = new CfnMitigationAction(this, \"MyCfnMitigationAction\", new CfnMitigationActionProps {\n    ActionParams = new ActionParamsProperty {\n        AddThingsToThingGroupParams = new AddThingsToThingGroupParamsProperty {\n            ThingGroupNames = new [] { \"thingGroupNames\" },\n\n            // the properties below are optional\n            OverrideDynamicGroups = false\n        },\n        EnableIoTLoggingParams = new EnableIoTLoggingParamsProperty {\n            LogLevel = \"logLevel\",\n            RoleArnForLogging = \"roleArnForLogging\"\n        },\n        PublishFindingToSnsParams = new PublishFindingToSnsParamsProperty {\n            TopicArn = \"topicArn\"\n        },\n        ReplaceDefaultPolicyVersionParams = new ReplaceDefaultPolicyVersionParamsProperty {\n            TemplateName = \"templateName\"\n        },\n        UpdateCaCertificateParams = new UpdateCACertificateParamsProperty {\n            Action = \"action\"\n        },\n        UpdateDeviceCertificateParams = new UpdateDeviceCertificateParamsProperty {\n            Action = \"action\"\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    ActionName = \"actionName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnMitigationAction cfnMitigationAction = CfnMitigationAction.Builder.create(this, \"MyCfnMitigationAction\")\n        .actionParams(ActionParamsProperty.builder()\n                .addThingsToThingGroupParams(AddThingsToThingGroupParamsProperty.builder()\n                        .thingGroupNames(List.of(\"thingGroupNames\"))\n\n                        // the properties below are optional\n                        .overrideDynamicGroups(false)\n                        .build())\n                .enableIoTLoggingParams(EnableIoTLoggingParamsProperty.builder()\n                        .logLevel(\"logLevel\")\n                        .roleArnForLogging(\"roleArnForLogging\")\n                        .build())\n                .publishFindingToSnsParams(PublishFindingToSnsParamsProperty.builder()\n                        .topicArn(\"topicArn\")\n                        .build())\n                .replaceDefaultPolicyVersionParams(ReplaceDefaultPolicyVersionParamsProperty.builder()\n                        .templateName(\"templateName\")\n                        .build())\n                .updateCaCertificateParams(UpdateCACertificateParamsProperty.builder()\n                        .action(\"action\")\n                        .build())\n                .updateDeviceCertificateParams(UpdateDeviceCertificateParamsProperty.builder()\n                        .action(\"action\")\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .actionName(\"actionName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnMitigationAction := iot.NewCfnMitigationAction(this, jsii.String(\"MyCfnMitigationAction\"), &cfnMitigationActionProps{\n\tactionParams: &actionParamsProperty{\n\t\taddThingsToThingGroupParams: &addThingsToThingGroupParamsProperty{\n\t\t\tthingGroupNames: []*string{\n\t\t\t\tjsii.String(\"thingGroupNames\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\toverrideDynamicGroups: jsii.Boolean(false),\n\t\t},\n\t\tenableIoTLoggingParams: &enableIoTLoggingParamsProperty{\n\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\troleArnForLogging: jsii.String(\"roleArnForLogging\"),\n\t\t},\n\t\tpublishFindingToSnsParams: &publishFindingToSnsParamsProperty{\n\t\t\ttopicArn: jsii.String(\"topicArn\"),\n\t\t},\n\t\treplaceDefaultPolicyVersionParams: &replaceDefaultPolicyVersionParamsProperty{\n\t\t\ttemplateName: jsii.String(\"templateName\"),\n\t\t},\n\t\tupdateCaCertificateParams: &updateCACertificateParamsProperty{\n\t\t\taction: jsii.String(\"action\"),\n\t\t},\n\t\tupdateDeviceCertificateParams: &updateDeviceCertificateParamsProperty{\n\t\t\taction: jsii.String(\"action\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tactionName: jsii.String(\"actionName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnMitigationAction = new iot.CfnMitigationAction(this, 'MyCfnMitigationAction', {\n  actionParams: {\n    addThingsToThingGroupParams: {\n      thingGroupNames: ['thingGroupNames'],\n\n      // the properties below are optional\n      overrideDynamicGroups: false,\n    },\n    enableIoTLoggingParams: {\n      logLevel: 'logLevel',\n      roleArnForLogging: 'roleArnForLogging',\n    },\n    publishFindingToSnsParams: {\n      topicArn: 'topicArn',\n    },\n    replaceDefaultPolicyVersionParams: {\n      templateName: 'templateName',\n    },\n    updateCaCertificateParams: {\n      action: 'action',\n    },\n    updateDeviceCertificateParams: {\n      action: 'action',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  actionName: 'actionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction",
        "@aws-cdk/aws-iot.CfnMitigationActionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMitigationAction = new iot.CfnMitigationAction(this, 'MyCfnMitigationAction', {\n  actionParams: {\n    addThingsToThingGroupParams: {\n      thingGroupNames: ['thingGroupNames'],\n\n      // the properties below are optional\n      overrideDynamicGroups: false,\n    },\n    enableIoTLoggingParams: {\n      logLevel: 'logLevel',\n      roleArnForLogging: 'roleArnForLogging',\n    },\n    publishFindingToSnsParams: {\n      topicArn: 'topicArn',\n    },\n    replaceDefaultPolicyVersionParams: {\n      templateName: 'templateName',\n    },\n    updateCaCertificateParams: {\n      action: 'action',\n    },\n    updateDeviceCertificateParams: {\n      action: 'action',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  actionName: 'actionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 24,
        "91": 1,
        "104": 1,
        "192": 2,
        "193": 9,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "f5ec724cf7cbc95bb2e5f2f5f23b942d32a8ef1f3490b9501e0397b2cf92a648"
    },
    "0059c0d8a26b4d4c3b2553faa7fa4de4ca2f3d7ed64a1e642b1ee3a8d674d9ac": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naction_params_property = iot.CfnMitigationAction.ActionParamsProperty(\n    add_things_to_thing_group_params=iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty(\n        thing_group_names=[\"thingGroupNames\"],\n\n        # the properties below are optional\n        override_dynamic_groups=False\n    ),\n    enable_io_tLogging_params=iot.CfnMitigationAction.EnableIoTLoggingParamsProperty(\n        log_level=\"logLevel\",\n        role_arn_for_logging=\"roleArnForLogging\"\n    ),\n    publish_finding_to_sns_params=iot.CfnMitigationAction.PublishFindingToSnsParamsProperty(\n        topic_arn=\"topicArn\"\n    ),\n    replace_default_policy_version_params=iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty(\n        template_name=\"templateName\"\n    ),\n    update_ca_certificate_params=iot.CfnMitigationAction.UpdateCACertificateParamsProperty(\n        action=\"action\"\n    ),\n    update_device_certificate_params=iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty(\n        action=\"action\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nActionParamsProperty actionParamsProperty = new ActionParamsProperty {\n    AddThingsToThingGroupParams = new AddThingsToThingGroupParamsProperty {\n        ThingGroupNames = new [] { \"thingGroupNames\" },\n\n        // the properties below are optional\n        OverrideDynamicGroups = false\n    },\n    EnableIoTLoggingParams = new EnableIoTLoggingParamsProperty {\n        LogLevel = \"logLevel\",\n        RoleArnForLogging = \"roleArnForLogging\"\n    },\n    PublishFindingToSnsParams = new PublishFindingToSnsParamsProperty {\n        TopicArn = \"topicArn\"\n    },\n    ReplaceDefaultPolicyVersionParams = new ReplaceDefaultPolicyVersionParamsProperty {\n        TemplateName = \"templateName\"\n    },\n    UpdateCaCertificateParams = new UpdateCACertificateParamsProperty {\n        Action = \"action\"\n    },\n    UpdateDeviceCertificateParams = new UpdateDeviceCertificateParamsProperty {\n        Action = \"action\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nActionParamsProperty actionParamsProperty = ActionParamsProperty.builder()\n        .addThingsToThingGroupParams(AddThingsToThingGroupParamsProperty.builder()\n                .thingGroupNames(List.of(\"thingGroupNames\"))\n\n                // the properties below are optional\n                .overrideDynamicGroups(false)\n                .build())\n        .enableIoTLoggingParams(EnableIoTLoggingParamsProperty.builder()\n                .logLevel(\"logLevel\")\n                .roleArnForLogging(\"roleArnForLogging\")\n                .build())\n        .publishFindingToSnsParams(PublishFindingToSnsParamsProperty.builder()\n                .topicArn(\"topicArn\")\n                .build())\n        .replaceDefaultPolicyVersionParams(ReplaceDefaultPolicyVersionParamsProperty.builder()\n                .templateName(\"templateName\")\n                .build())\n        .updateCaCertificateParams(UpdateCACertificateParamsProperty.builder()\n                .action(\"action\")\n                .build())\n        .updateDeviceCertificateParams(UpdateDeviceCertificateParamsProperty.builder()\n                .action(\"action\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nactionParamsProperty := &actionParamsProperty{\n\taddThingsToThingGroupParams: &addThingsToThingGroupParamsProperty{\n\t\tthingGroupNames: []*string{\n\t\t\tjsii.String(\"thingGroupNames\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\toverrideDynamicGroups: jsii.Boolean(false),\n\t},\n\tenableIoTLoggingParams: &enableIoTLoggingParamsProperty{\n\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\troleArnForLogging: jsii.String(\"roleArnForLogging\"),\n\t},\n\tpublishFindingToSnsParams: &publishFindingToSnsParamsProperty{\n\t\ttopicArn: jsii.String(\"topicArn\"),\n\t},\n\treplaceDefaultPolicyVersionParams: &replaceDefaultPolicyVersionParamsProperty{\n\t\ttemplateName: jsii.String(\"templateName\"),\n\t},\n\tupdateCaCertificateParams: &updateCACertificateParamsProperty{\n\t\taction: jsii.String(\"action\"),\n\t},\n\tupdateDeviceCertificateParams: &updateDeviceCertificateParamsProperty{\n\t\taction: jsii.String(\"action\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst actionParamsProperty: iot.CfnMitigationAction.ActionParamsProperty = {\n  addThingsToThingGroupParams: {\n    thingGroupNames: ['thingGroupNames'],\n\n    // the properties below are optional\n    overrideDynamicGroups: false,\n  },\n  enableIoTLoggingParams: {\n    logLevel: 'logLevel',\n    roleArnForLogging: 'roleArnForLogging',\n  },\n  publishFindingToSnsParams: {\n    topicArn: 'topicArn',\n  },\n  replaceDefaultPolicyVersionParams: {\n    templateName: 'templateName',\n  },\n  updateCaCertificateParams: {\n    action: 'action',\n  },\n  updateDeviceCertificateParams: {\n    action: 'action',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.ActionParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.ActionParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionParamsProperty: iot.CfnMitigationAction.ActionParamsProperty = {\n  addThingsToThingGroupParams: {\n    thingGroupNames: ['thingGroupNames'],\n\n    // the properties below are optional\n    overrideDynamicGroups: false,\n  },\n  enableIoTLoggingParams: {\n    logLevel: 'logLevel',\n    roleArnForLogging: 'roleArnForLogging',\n  },\n  publishFindingToSnsParams: {\n    topicArn: 'topicArn',\n  },\n  replaceDefaultPolicyVersionParams: {\n    templateName: 'templateName',\n  },\n  updateCaCertificateParams: {\n    action: 'action',\n  },\n  updateDeviceCertificateParams: {\n    action: 'action',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 19,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 7,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "da8dcab9bd84dded2a296b813f57ceb48472efdbe3162d1d1ec2871d3404dd3c"
    },
    "248da17c6b085a6af4ef03205078e5f1651d7c50929191b11959390521e52afb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nadd_things_to_thing_group_params_property = iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty(\n    thing_group_names=[\"thingGroupNames\"],\n\n    # the properties below are optional\n    override_dynamic_groups=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAddThingsToThingGroupParamsProperty addThingsToThingGroupParamsProperty = new AddThingsToThingGroupParamsProperty {\n    ThingGroupNames = new [] { \"thingGroupNames\" },\n\n    // the properties below are optional\n    OverrideDynamicGroups = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAddThingsToThingGroupParamsProperty addThingsToThingGroupParamsProperty = AddThingsToThingGroupParamsProperty.builder()\n        .thingGroupNames(List.of(\"thingGroupNames\"))\n\n        // the properties below are optional\n        .overrideDynamicGroups(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\naddThingsToThingGroupParamsProperty := &addThingsToThingGroupParamsProperty{\n\tthingGroupNames: []*string{\n\t\tjsii.String(\"thingGroupNames\"),\n\t},\n\n\t// the properties below are optional\n\toverrideDynamicGroups: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst addThingsToThingGroupParamsProperty: iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty = {\n  thingGroupNames: ['thingGroupNames'],\n\n  // the properties below are optional\n  overrideDynamicGroups: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst addThingsToThingGroupParamsProperty: iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty = {\n  thingGroupNames: ['thingGroupNames'],\n\n  // the properties below are optional\n  overrideDynamicGroups: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "f0321fe79ffcf78dc2702100b7e640722d301c5acca573f14a6a82a9a6de202a"
    },
    "46afdaf287258bf7042856604242f65bb28ed2751d7e91d122cdd3f137da1b8b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nenable_io_tLogging_params_property = iot.CfnMitigationAction.EnableIoTLoggingParamsProperty(\n    log_level=\"logLevel\",\n    role_arn_for_logging=\"roleArnForLogging\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nEnableIoTLoggingParamsProperty enableIoTLoggingParamsProperty = new EnableIoTLoggingParamsProperty {\n    LogLevel = \"logLevel\",\n    RoleArnForLogging = \"roleArnForLogging\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nEnableIoTLoggingParamsProperty enableIoTLoggingParamsProperty = EnableIoTLoggingParamsProperty.builder()\n        .logLevel(\"logLevel\")\n        .roleArnForLogging(\"roleArnForLogging\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nenableIoTLoggingParamsProperty := &enableIoTLoggingParamsProperty{\n\tlogLevel: jsii.String(\"logLevel\"),\n\troleArnForLogging: jsii.String(\"roleArnForLogging\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst enableIoTLoggingParamsProperty: iot.CfnMitigationAction.EnableIoTLoggingParamsProperty = {\n  logLevel: 'logLevel',\n  roleArnForLogging: 'roleArnForLogging',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.EnableIoTLoggingParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.EnableIoTLoggingParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst enableIoTLoggingParamsProperty: iot.CfnMitigationAction.EnableIoTLoggingParamsProperty = {\n  logLevel: 'logLevel',\n  roleArnForLogging: 'roleArnForLogging',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6248da0946301d31689bc107671a3ba22b09d5f8b5d36fdab0f162b2db3bc9da"
    },
    "9395e2e588141700938b2ac5897da1c31e07c972a8499554bc1bfa428aa132cd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\npublish_finding_to_sns_params_property = iot.CfnMitigationAction.PublishFindingToSnsParamsProperty(\n    topic_arn=\"topicArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nPublishFindingToSnsParamsProperty publishFindingToSnsParamsProperty = new PublishFindingToSnsParamsProperty {\n    TopicArn = \"topicArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nPublishFindingToSnsParamsProperty publishFindingToSnsParamsProperty = PublishFindingToSnsParamsProperty.builder()\n        .topicArn(\"topicArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\npublishFindingToSnsParamsProperty := &publishFindingToSnsParamsProperty{\n\ttopicArn: jsii.String(\"topicArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst publishFindingToSnsParamsProperty: iot.CfnMitigationAction.PublishFindingToSnsParamsProperty = {\n  topicArn: 'topicArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.PublishFindingToSnsParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.PublishFindingToSnsParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst publishFindingToSnsParamsProperty: iot.CfnMitigationAction.PublishFindingToSnsParamsProperty = {\n  topicArn: 'topicArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "e83d587cf6eebc7880b499a36684192363efcc8e15a82a1133fa332aaa590ab6"
    },
    "38442a701cd5ea3aaaf6b5e05b63a71f8301fd36fdab286e1af1d73e0909ed59": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nreplace_default_policy_version_params_property = iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty(\n    template_name=\"templateName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nReplaceDefaultPolicyVersionParamsProperty replaceDefaultPolicyVersionParamsProperty = new ReplaceDefaultPolicyVersionParamsProperty {\n    TemplateName = \"templateName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nReplaceDefaultPolicyVersionParamsProperty replaceDefaultPolicyVersionParamsProperty = ReplaceDefaultPolicyVersionParamsProperty.builder()\n        .templateName(\"templateName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nreplaceDefaultPolicyVersionParamsProperty := &replaceDefaultPolicyVersionParamsProperty{\n\ttemplateName: jsii.String(\"templateName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst replaceDefaultPolicyVersionParamsProperty: iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty = {\n  templateName: 'templateName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst replaceDefaultPolicyVersionParamsProperty: iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty = {\n  templateName: 'templateName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "3e3d5f341f5919a41e56f77a97e45650af0cb27288994e5c41fcbb0bfca5f09d"
    },
    "917b4e7c7ce4f42cb6becc2b62a0275fa97c4d65a623d3d4be80a51438843a53": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nupdate_cACertificate_params_property = iot.CfnMitigationAction.UpdateCACertificateParamsProperty(\n    action=\"action\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nUpdateCACertificateParamsProperty updateCACertificateParamsProperty = new UpdateCACertificateParamsProperty {\n    Action = \"action\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nUpdateCACertificateParamsProperty updateCACertificateParamsProperty = UpdateCACertificateParamsProperty.builder()\n        .action(\"action\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nupdateCACertificateParamsProperty := &updateCACertificateParamsProperty{\n\taction: jsii.String(\"action\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst updateCACertificateParamsProperty: iot.CfnMitigationAction.UpdateCACertificateParamsProperty = {\n  action: 'action',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.UpdateCACertificateParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.UpdateCACertificateParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst updateCACertificateParamsProperty: iot.CfnMitigationAction.UpdateCACertificateParamsProperty = {\n  action: 'action',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "39e324ce12b1cd4a489bade720f7e4be4e7196a37623518d7fa5a54f0b6e167d"
    },
    "16f525ba3677b78fb17d5d0dd31034ab7823571f8918223cbf8178378dbda8b9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nupdate_device_certificate_params_property = iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty(\n    action=\"action\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nUpdateDeviceCertificateParamsProperty updateDeviceCertificateParamsProperty = new UpdateDeviceCertificateParamsProperty {\n    Action = \"action\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nUpdateDeviceCertificateParamsProperty updateDeviceCertificateParamsProperty = UpdateDeviceCertificateParamsProperty.builder()\n        .action(\"action\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nupdateDeviceCertificateParamsProperty := &updateDeviceCertificateParamsProperty{\n\taction: jsii.String(\"action\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst updateDeviceCertificateParamsProperty: iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty = {\n  action: 'action',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst updateDeviceCertificateParamsProperty: iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty = {\n  action: 'action',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a971dd0933d85b00d24b0690444beb7edce1eca403b6fe2464740010d96e17bc"
    },
    "9da0054cad5f6d84f361491232d99e2e997e884f2baa9f50349bfb321455bb27": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_mitigation_action_props = iot.CfnMitigationActionProps(\n    action_params=iot.CfnMitigationAction.ActionParamsProperty(\n        add_things_to_thing_group_params=iot.CfnMitigationAction.AddThingsToThingGroupParamsProperty(\n            thing_group_names=[\"thingGroupNames\"],\n\n            # the properties below are optional\n            override_dynamic_groups=False\n        ),\n        enable_io_tLogging_params=iot.CfnMitigationAction.EnableIoTLoggingParamsProperty(\n            log_level=\"logLevel\",\n            role_arn_for_logging=\"roleArnForLogging\"\n        ),\n        publish_finding_to_sns_params=iot.CfnMitigationAction.PublishFindingToSnsParamsProperty(\n            topic_arn=\"topicArn\"\n        ),\n        replace_default_policy_version_params=iot.CfnMitigationAction.ReplaceDefaultPolicyVersionParamsProperty(\n            template_name=\"templateName\"\n        ),\n        update_ca_certificate_params=iot.CfnMitigationAction.UpdateCACertificateParamsProperty(\n            action=\"action\"\n        ),\n        update_device_certificate_params=iot.CfnMitigationAction.UpdateDeviceCertificateParamsProperty(\n            action=\"action\"\n        )\n    ),\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    action_name=\"actionName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnMitigationActionProps cfnMitigationActionProps = new CfnMitigationActionProps {\n    ActionParams = new ActionParamsProperty {\n        AddThingsToThingGroupParams = new AddThingsToThingGroupParamsProperty {\n            ThingGroupNames = new [] { \"thingGroupNames\" },\n\n            // the properties below are optional\n            OverrideDynamicGroups = false\n        },\n        EnableIoTLoggingParams = new EnableIoTLoggingParamsProperty {\n            LogLevel = \"logLevel\",\n            RoleArnForLogging = \"roleArnForLogging\"\n        },\n        PublishFindingToSnsParams = new PublishFindingToSnsParamsProperty {\n            TopicArn = \"topicArn\"\n        },\n        ReplaceDefaultPolicyVersionParams = new ReplaceDefaultPolicyVersionParamsProperty {\n            TemplateName = \"templateName\"\n        },\n        UpdateCaCertificateParams = new UpdateCACertificateParamsProperty {\n            Action = \"action\"\n        },\n        UpdateDeviceCertificateParams = new UpdateDeviceCertificateParamsProperty {\n            Action = \"action\"\n        }\n    },\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    ActionName = \"actionName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnMitigationActionProps cfnMitigationActionProps = CfnMitigationActionProps.builder()\n        .actionParams(ActionParamsProperty.builder()\n                .addThingsToThingGroupParams(AddThingsToThingGroupParamsProperty.builder()\n                        .thingGroupNames(List.of(\"thingGroupNames\"))\n\n                        // the properties below are optional\n                        .overrideDynamicGroups(false)\n                        .build())\n                .enableIoTLoggingParams(EnableIoTLoggingParamsProperty.builder()\n                        .logLevel(\"logLevel\")\n                        .roleArnForLogging(\"roleArnForLogging\")\n                        .build())\n                .publishFindingToSnsParams(PublishFindingToSnsParamsProperty.builder()\n                        .topicArn(\"topicArn\")\n                        .build())\n                .replaceDefaultPolicyVersionParams(ReplaceDefaultPolicyVersionParamsProperty.builder()\n                        .templateName(\"templateName\")\n                        .build())\n                .updateCaCertificateParams(UpdateCACertificateParamsProperty.builder()\n                        .action(\"action\")\n                        .build())\n                .updateDeviceCertificateParams(UpdateDeviceCertificateParamsProperty.builder()\n                        .action(\"action\")\n                        .build())\n                .build())\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .actionName(\"actionName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnMitigationActionProps := &cfnMitigationActionProps{\n\tactionParams: &actionParamsProperty{\n\t\taddThingsToThingGroupParams: &addThingsToThingGroupParamsProperty{\n\t\t\tthingGroupNames: []*string{\n\t\t\t\tjsii.String(\"thingGroupNames\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\toverrideDynamicGroups: jsii.Boolean(false),\n\t\t},\n\t\tenableIoTLoggingParams: &enableIoTLoggingParamsProperty{\n\t\t\tlogLevel: jsii.String(\"logLevel\"),\n\t\t\troleArnForLogging: jsii.String(\"roleArnForLogging\"),\n\t\t},\n\t\tpublishFindingToSnsParams: &publishFindingToSnsParamsProperty{\n\t\t\ttopicArn: jsii.String(\"topicArn\"),\n\t\t},\n\t\treplaceDefaultPolicyVersionParams: &replaceDefaultPolicyVersionParamsProperty{\n\t\t\ttemplateName: jsii.String(\"templateName\"),\n\t\t},\n\t\tupdateCaCertificateParams: &updateCACertificateParamsProperty{\n\t\t\taction: jsii.String(\"action\"),\n\t\t},\n\t\tupdateDeviceCertificateParams: &updateDeviceCertificateParamsProperty{\n\t\t\taction: jsii.String(\"action\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tactionName: jsii.String(\"actionName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnMitigationActionProps: iot.CfnMitigationActionProps = {\n  actionParams: {\n    addThingsToThingGroupParams: {\n      thingGroupNames: ['thingGroupNames'],\n\n      // the properties below are optional\n      overrideDynamicGroups: false,\n    },\n    enableIoTLoggingParams: {\n      logLevel: 'logLevel',\n      roleArnForLogging: 'roleArnForLogging',\n    },\n    publishFindingToSnsParams: {\n      topicArn: 'topicArn',\n    },\n    replaceDefaultPolicyVersionParams: {\n      templateName: 'templateName',\n    },\n    updateCaCertificateParams: {\n      action: 'action',\n    },\n    updateDeviceCertificateParams: {\n      action: 'action',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  actionName: 'actionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnMitigationActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnMitigationActionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMitigationActionProps: iot.CfnMitigationActionProps = {\n  actionParams: {\n    addThingsToThingGroupParams: {\n      thingGroupNames: ['thingGroupNames'],\n\n      // the properties below are optional\n      overrideDynamicGroups: false,\n    },\n    enableIoTLoggingParams: {\n      logLevel: 'logLevel',\n      roleArnForLogging: 'roleArnForLogging',\n    },\n    publishFindingToSnsParams: {\n      topicArn: 'topicArn',\n    },\n    replaceDefaultPolicyVersionParams: {\n      templateName: 'templateName',\n    },\n    updateCaCertificateParams: {\n      action: 'action',\n    },\n    updateDeviceCertificateParams: {\n      action: 'action',\n    },\n  },\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  actionName: 'actionName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 24,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 9,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "47a5e94cd4c620fdd583b054c256ee42d1759edbd8608c17d27ebefc69a594eb"
    },
    "9d064ec05cd7f94eef78fa3ec65b9d50b0409897f46560f58c3275c78b0e8899": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\n# policy_document: Any\n\ncfn_policy = iot.CfnPolicy(self, \"MyCfnPolicy\",\n    policy_document=policy_document,\n\n    # the properties below are optional\n    policy_name=\"policyName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nvar policyDocument;\n\nCfnPolicy cfnPolicy = new CfnPolicy(this, \"MyCfnPolicy\", new CfnPolicyProps {\n    PolicyDocument = policyDocument,\n\n    // the properties below are optional\n    PolicyName = \"policyName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nObject policyDocument;\n\nCfnPolicy cfnPolicy = CfnPolicy.Builder.create(this, \"MyCfnPolicy\")\n        .policyDocument(policyDocument)\n\n        // the properties below are optional\n        .policyName(\"policyName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nvar policyDocument interface{}\n\ncfnPolicy := iot.NewCfnPolicy(this, jsii.String(\"MyCfnPolicy\"), &cfnPolicyProps{\n\tpolicyDocument: policyDocument,\n\n\t// the properties below are optional\n\tpolicyName: jsii.String(\"policyName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const policyDocument: any;\nconst cfnPolicy = new iot.CfnPolicy(this, 'MyCfnPolicy', {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  policyName: 'policyName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnPolicy",
        "@aws-cdk/aws-iot.CfnPolicyProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPolicy = new iot.CfnPolicy(this, 'MyCfnPolicy', {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  policyName: 'policyName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "104": 1,
        "125": 1,
        "130": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "93815471a75688e5e30e9b66792a3044a7a77f6be050fb108fa5f043ebfb3826"
    },
    "05c6c33d674a1908c1c64c2b0ab1860785a4724bbacd39c461b0e877df65622b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_policy_principal_attachment = iot.CfnPolicyPrincipalAttachment(self, \"MyCfnPolicyPrincipalAttachment\",\n    policy_name=\"policyName\",\n    principal=\"principal\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnPolicyPrincipalAttachment cfnPolicyPrincipalAttachment = new CfnPolicyPrincipalAttachment(this, \"MyCfnPolicyPrincipalAttachment\", new CfnPolicyPrincipalAttachmentProps {\n    PolicyName = \"policyName\",\n    Principal = \"principal\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnPolicyPrincipalAttachment cfnPolicyPrincipalAttachment = CfnPolicyPrincipalAttachment.Builder.create(this, \"MyCfnPolicyPrincipalAttachment\")\n        .policyName(\"policyName\")\n        .principal(\"principal\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnPolicyPrincipalAttachment := iot.NewCfnPolicyPrincipalAttachment(this, jsii.String(\"MyCfnPolicyPrincipalAttachment\"), &cfnPolicyPrincipalAttachmentProps{\n\tpolicyName: jsii.String(\"policyName\"),\n\tprincipal: jsii.String(\"principal\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnPolicyPrincipalAttachment = new iot.CfnPolicyPrincipalAttachment(this, 'MyCfnPolicyPrincipalAttachment', {\n  policyName: 'policyName',\n  principal: 'principal',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnPolicyPrincipalAttachment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnPolicyPrincipalAttachment",
        "@aws-cdk/aws-iot.CfnPolicyPrincipalAttachmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPolicyPrincipalAttachment = new iot.CfnPolicyPrincipalAttachment(this, 'MyCfnPolicyPrincipalAttachment', {\n  policyName: 'policyName',\n  principal: 'principal',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "bbee964ff17f3ee92f809612009257af2791b332c5b53f1b8a8e3eaae9d2630b"
    },
    "dd973cce719d978444b92c6c43d17d6c707a85e79459b0317f7525e74c76536b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_policy_principal_attachment_props = iot.CfnPolicyPrincipalAttachmentProps(\n    policy_name=\"policyName\",\n    principal=\"principal\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnPolicyPrincipalAttachmentProps cfnPolicyPrincipalAttachmentProps = new CfnPolicyPrincipalAttachmentProps {\n    PolicyName = \"policyName\",\n    Principal = \"principal\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnPolicyPrincipalAttachmentProps cfnPolicyPrincipalAttachmentProps = CfnPolicyPrincipalAttachmentProps.builder()\n        .policyName(\"policyName\")\n        .principal(\"principal\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnPolicyPrincipalAttachmentProps := &cfnPolicyPrincipalAttachmentProps{\n\tpolicyName: jsii.String(\"policyName\"),\n\tprincipal: jsii.String(\"principal\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnPolicyPrincipalAttachmentProps: iot.CfnPolicyPrincipalAttachmentProps = {\n  policyName: 'policyName',\n  principal: 'principal',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnPolicyPrincipalAttachmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnPolicyPrincipalAttachmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPolicyPrincipalAttachmentProps: iot.CfnPolicyPrincipalAttachmentProps = {\n  policyName: 'policyName',\n  principal: 'principal',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e241297a9e52c0649b8ea9baed6f760a16b882e27090d7d392090d3fe4248eb1"
    },
    "81057efd9c324020e4c1a90af4da4320eedbdeb5a8d872fdcaa84a28e669dc83": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\n# policy_document: Any\n\ncfn_policy_props = iot.CfnPolicyProps(\n    policy_document=policy_document,\n\n    # the properties below are optional\n    policy_name=\"policyName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nvar policyDocument;\n\nCfnPolicyProps cfnPolicyProps = new CfnPolicyProps {\n    PolicyDocument = policyDocument,\n\n    // the properties below are optional\n    PolicyName = \"policyName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nObject policyDocument;\n\nCfnPolicyProps cfnPolicyProps = CfnPolicyProps.builder()\n        .policyDocument(policyDocument)\n\n        // the properties below are optional\n        .policyName(\"policyName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nvar policyDocument interface{}\n\ncfnPolicyProps := &cfnPolicyProps{\n\tpolicyDocument: policyDocument,\n\n\t// the properties below are optional\n\tpolicyName: jsii.String(\"policyName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const policyDocument: any;\nconst cfnPolicyProps: iot.CfnPolicyProps = {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  policyName: 'policyName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnPolicyProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n\ndeclare const policyDocument: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPolicyProps: iot.CfnPolicyProps = {\n  policyDocument: policyDocument,\n\n  // the properties below are optional\n  policyName: 'policyName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 8,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "14ef1a9e802f166f95dc91e9027702d612a47ed52a9fdc0cdd13b1e37274e18b"
    },
    "ef0eed378f65048da14595c5ef80635c9638dd0fa7e8bf11917ab6b7219061b4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_provisioning_template = iot.CfnProvisioningTemplate(self, \"MyCfnProvisioningTemplate\",\n    provisioning_role_arn=\"provisioningRoleArn\",\n    template_body=\"templateBody\",\n\n    # the properties below are optional\n    description=\"description\",\n    enabled=False,\n    pre_provisioning_hook=iot.CfnProvisioningTemplate.ProvisioningHookProperty(\n        payload_version=\"payloadVersion\",\n        target_arn=\"targetArn\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    template_name=\"templateName\",\n    template_type=\"templateType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnProvisioningTemplate cfnProvisioningTemplate = new CfnProvisioningTemplate(this, \"MyCfnProvisioningTemplate\", new CfnProvisioningTemplateProps {\n    ProvisioningRoleArn = \"provisioningRoleArn\",\n    TemplateBody = \"templateBody\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Enabled = false,\n    PreProvisioningHook = new ProvisioningHookProperty {\n        PayloadVersion = \"payloadVersion\",\n        TargetArn = \"targetArn\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TemplateName = \"templateName\",\n    TemplateType = \"templateType\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnProvisioningTemplate cfnProvisioningTemplate = CfnProvisioningTemplate.Builder.create(this, \"MyCfnProvisioningTemplate\")\n        .provisioningRoleArn(\"provisioningRoleArn\")\n        .templateBody(\"templateBody\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .enabled(false)\n        .preProvisioningHook(ProvisioningHookProperty.builder()\n                .payloadVersion(\"payloadVersion\")\n                .targetArn(\"targetArn\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .templateName(\"templateName\")\n        .templateType(\"templateType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnProvisioningTemplate := iot.NewCfnProvisioningTemplate(this, jsii.String(\"MyCfnProvisioningTemplate\"), &cfnProvisioningTemplateProps{\n\tprovisioningRoleArn: jsii.String(\"provisioningRoleArn\"),\n\ttemplateBody: jsii.String(\"templateBody\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tenabled: jsii.Boolean(false),\n\tpreProvisioningHook: &provisioningHookProperty{\n\t\tpayloadVersion: jsii.String(\"payloadVersion\"),\n\t\ttargetArn: jsii.String(\"targetArn\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttemplateName: jsii.String(\"templateName\"),\n\ttemplateType: jsii.String(\"templateType\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnProvisioningTemplate = new iot.CfnProvisioningTemplate(this, 'MyCfnProvisioningTemplate', {\n  provisioningRoleArn: 'provisioningRoleArn',\n  templateBody: 'templateBody',\n\n  // the properties below are optional\n  description: 'description',\n  enabled: false,\n  preProvisioningHook: {\n    payloadVersion: 'payloadVersion',\n    targetArn: 'targetArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  templateType: 'templateType',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnProvisioningTemplate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnProvisioningTemplate",
        "@aws-cdk/aws-iot.CfnProvisioningTemplateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnProvisioningTemplate = new iot.CfnProvisioningTemplate(this, 'MyCfnProvisioningTemplate', {\n  provisioningRoleArn: 'provisioningRoleArn',\n  templateBody: 'templateBody',\n\n  // the properties below are optional\n  description: 'description',\n  enabled: false,\n  preProvisioningHook: {\n    payloadVersion: 'payloadVersion',\n    targetArn: 'targetArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  templateType: 'templateType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 11,
        "75": 16,
        "91": 1,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "670ad2e5185b1d7d006168e2954d7421c225523ce6d2f838166e5a0d0c60d3ca"
    },
    "82897dd99c44130e96aece00968066848c4916f2941cac0ae190e3f799c8b743": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nprovisioning_hook_property = iot.CfnProvisioningTemplate.ProvisioningHookProperty(\n    payload_version=\"payloadVersion\",\n    target_arn=\"targetArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nProvisioningHookProperty provisioningHookProperty = new ProvisioningHookProperty {\n    PayloadVersion = \"payloadVersion\",\n    TargetArn = \"targetArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nProvisioningHookProperty provisioningHookProperty = ProvisioningHookProperty.builder()\n        .payloadVersion(\"payloadVersion\")\n        .targetArn(\"targetArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nprovisioningHookProperty := &provisioningHookProperty{\n\tpayloadVersion: jsii.String(\"payloadVersion\"),\n\ttargetArn: jsii.String(\"targetArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst provisioningHookProperty: iot.CfnProvisioningTemplate.ProvisioningHookProperty = {\n  payloadVersion: 'payloadVersion',\n  targetArn: 'targetArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnProvisioningTemplate.ProvisioningHookProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnProvisioningTemplate.ProvisioningHookProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst provisioningHookProperty: iot.CfnProvisioningTemplate.ProvisioningHookProperty = {\n  payloadVersion: 'payloadVersion',\n  targetArn: 'targetArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "903732f9846717222cd94bca3bcccac2280d869ba8193d647fecf56d865c0c83"
    },
    "5aa5297d354e9914da3d8cf0e9bac2e3346a0966de339944949c973fe6503349": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_provisioning_template_props = iot.CfnProvisioningTemplateProps(\n    provisioning_role_arn=\"provisioningRoleArn\",\n    template_body=\"templateBody\",\n\n    # the properties below are optional\n    description=\"description\",\n    enabled=False,\n    pre_provisioning_hook=iot.CfnProvisioningTemplate.ProvisioningHookProperty(\n        payload_version=\"payloadVersion\",\n        target_arn=\"targetArn\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    template_name=\"templateName\",\n    template_type=\"templateType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnProvisioningTemplateProps cfnProvisioningTemplateProps = new CfnProvisioningTemplateProps {\n    ProvisioningRoleArn = \"provisioningRoleArn\",\n    TemplateBody = \"templateBody\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Enabled = false,\n    PreProvisioningHook = new ProvisioningHookProperty {\n        PayloadVersion = \"payloadVersion\",\n        TargetArn = \"targetArn\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TemplateName = \"templateName\",\n    TemplateType = \"templateType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnProvisioningTemplateProps cfnProvisioningTemplateProps = CfnProvisioningTemplateProps.builder()\n        .provisioningRoleArn(\"provisioningRoleArn\")\n        .templateBody(\"templateBody\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .enabled(false)\n        .preProvisioningHook(ProvisioningHookProperty.builder()\n                .payloadVersion(\"payloadVersion\")\n                .targetArn(\"targetArn\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .templateName(\"templateName\")\n        .templateType(\"templateType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnProvisioningTemplateProps := &cfnProvisioningTemplateProps{\n\tprovisioningRoleArn: jsii.String(\"provisioningRoleArn\"),\n\ttemplateBody: jsii.String(\"templateBody\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tenabled: jsii.Boolean(false),\n\tpreProvisioningHook: &provisioningHookProperty{\n\t\tpayloadVersion: jsii.String(\"payloadVersion\"),\n\t\ttargetArn: jsii.String(\"targetArn\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttemplateName: jsii.String(\"templateName\"),\n\ttemplateType: jsii.String(\"templateType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnProvisioningTemplateProps: iot.CfnProvisioningTemplateProps = {\n  provisioningRoleArn: 'provisioningRoleArn',\n  templateBody: 'templateBody',\n\n  // the properties below are optional\n  description: 'description',\n  enabled: false,\n  preProvisioningHook: {\n    payloadVersion: 'payloadVersion',\n    targetArn: 'targetArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  templateType: 'templateType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnProvisioningTemplateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnProvisioningTemplateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnProvisioningTemplateProps: iot.CfnProvisioningTemplateProps = {\n  provisioningRoleArn: 'provisioningRoleArn',\n  templateBody: 'templateBody',\n\n  // the properties below are optional\n  description: 'description',\n  enabled: false,\n  preProvisioningHook: {\n    payloadVersion: 'payloadVersion',\n    targetArn: 'targetArn',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  templateType: 'templateType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 16,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "873ad67fea1e16cb1005dafaf81f3a1d1eb6982d16b9d52a1fae40987235b04f"
    },
    "3230750cc1fcc83f7cac9101aab93ed561d11c9daea22ee59e6f168dca14672b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_resource_specific_logging = iot.CfnResourceSpecificLogging(self, \"MyCfnResourceSpecificLogging\",\n    log_level=\"logLevel\",\n    target_name=\"targetName\",\n    target_type=\"targetType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnResourceSpecificLogging cfnResourceSpecificLogging = new CfnResourceSpecificLogging(this, \"MyCfnResourceSpecificLogging\", new CfnResourceSpecificLoggingProps {\n    LogLevel = \"logLevel\",\n    TargetName = \"targetName\",\n    TargetType = \"targetType\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnResourceSpecificLogging cfnResourceSpecificLogging = CfnResourceSpecificLogging.Builder.create(this, \"MyCfnResourceSpecificLogging\")\n        .logLevel(\"logLevel\")\n        .targetName(\"targetName\")\n        .targetType(\"targetType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnResourceSpecificLogging := iot.NewCfnResourceSpecificLogging(this, jsii.String(\"MyCfnResourceSpecificLogging\"), &cfnResourceSpecificLoggingProps{\n\tlogLevel: jsii.String(\"logLevel\"),\n\ttargetName: jsii.String(\"targetName\"),\n\ttargetType: jsii.String(\"targetType\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnResourceSpecificLogging = new iot.CfnResourceSpecificLogging(this, 'MyCfnResourceSpecificLogging', {\n  logLevel: 'logLevel',\n  targetName: 'targetName',\n  targetType: 'targetType',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnResourceSpecificLogging"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnResourceSpecificLogging",
        "@aws-cdk/aws-iot.CfnResourceSpecificLoggingProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourceSpecificLogging = new iot.CfnResourceSpecificLogging(this, 'MyCfnResourceSpecificLogging', {\n  logLevel: 'logLevel',\n  targetName: 'targetName',\n  targetType: 'targetType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "812b17f8be3358435636213dcf2282eb3f929e7f2faf0f662dfba51ecc545706"
    },
    "d04c06ce5e3555c0bdd6e5ba2ddda9c17b7fc75f7cbfacc5856b7a4c6e119140": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_resource_specific_logging_props = iot.CfnResourceSpecificLoggingProps(\n    log_level=\"logLevel\",\n    target_name=\"targetName\",\n    target_type=\"targetType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnResourceSpecificLoggingProps cfnResourceSpecificLoggingProps = new CfnResourceSpecificLoggingProps {\n    LogLevel = \"logLevel\",\n    TargetName = \"targetName\",\n    TargetType = \"targetType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnResourceSpecificLoggingProps cfnResourceSpecificLoggingProps = CfnResourceSpecificLoggingProps.builder()\n        .logLevel(\"logLevel\")\n        .targetName(\"targetName\")\n        .targetType(\"targetType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnResourceSpecificLoggingProps := &cfnResourceSpecificLoggingProps{\n\tlogLevel: jsii.String(\"logLevel\"),\n\ttargetName: jsii.String(\"targetName\"),\n\ttargetType: jsii.String(\"targetType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnResourceSpecificLoggingProps: iot.CfnResourceSpecificLoggingProps = {\n  logLevel: 'logLevel',\n  targetName: 'targetName',\n  targetType: 'targetType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnResourceSpecificLoggingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnResourceSpecificLoggingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResourceSpecificLoggingProps: iot.CfnResourceSpecificLoggingProps = {\n  logLevel: 'logLevel',\n  targetName: 'targetName',\n  targetType: 'targetType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "99d054abc03927918deb5f65dc26d6ce406938587df03ec053400685f501f9cd"
    },
    "34246e333f1a1871425a1a4890a8f28ba315cfdc0ea1564629b53d97a8b32c63": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_role_alias = iot.CfnRoleAlias(self, \"MyCfnRoleAlias\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    credential_duration_seconds=123,\n    role_alias=\"roleAlias\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnRoleAlias cfnRoleAlias = new CfnRoleAlias(this, \"MyCfnRoleAlias\", new CfnRoleAliasProps {\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    CredentialDurationSeconds = 123,\n    RoleAlias = \"roleAlias\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnRoleAlias cfnRoleAlias = CfnRoleAlias.Builder.create(this, \"MyCfnRoleAlias\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .credentialDurationSeconds(123)\n        .roleAlias(\"roleAlias\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnRoleAlias := iot.NewCfnRoleAlias(this, jsii.String(\"MyCfnRoleAlias\"), &cfnRoleAliasProps{\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tcredentialDurationSeconds: jsii.Number(123),\n\troleAlias: jsii.String(\"roleAlias\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnRoleAlias = new iot.CfnRoleAlias(this, 'MyCfnRoleAlias', {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  credentialDurationSeconds: 123,\n  roleAlias: 'roleAlias',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnRoleAlias"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnRoleAlias",
        "@aws-cdk/aws-iot.CfnRoleAliasProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRoleAlias = new iot.CfnRoleAlias(this, 'MyCfnRoleAlias', {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  credentialDurationSeconds: 123,\n  roleAlias: 'roleAlias',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 10,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "0887626a64d9002e42b8f73cdf667b00a6c416a26b35c446ee576893e2d18ea8"
    },
    "cecbe652674d523df85d2522558b8832fd1f393c2f0e25783648c4b7ef11b48f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_role_alias_props = iot.CfnRoleAliasProps(\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    credential_duration_seconds=123,\n    role_alias=\"roleAlias\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnRoleAliasProps cfnRoleAliasProps = new CfnRoleAliasProps {\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    CredentialDurationSeconds = 123,\n    RoleAlias = \"roleAlias\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnRoleAliasProps cfnRoleAliasProps = CfnRoleAliasProps.builder()\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .credentialDurationSeconds(123)\n        .roleAlias(\"roleAlias\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnRoleAliasProps := &cfnRoleAliasProps{\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tcredentialDurationSeconds: jsii.Number(123),\n\troleAlias: jsii.String(\"roleAlias\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnRoleAliasProps: iot.CfnRoleAliasProps = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  credentialDurationSeconds: 123,\n  roleAlias: 'roleAlias',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnRoleAliasProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnRoleAliasProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRoleAliasProps: iot.CfnRoleAliasProps = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  credentialDurationSeconds: 123,\n  roleAlias: 'roleAlias',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 10,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "50ab3a7b442c120c19bd8e595e2448ef85e4515de1e57992562a05af95a47eef"
    },
    "cd6a5e60637664f715d5d35e9b774bc100d2ec1528e33c2e01d785014922bee5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_scheduled_audit = iot.CfnScheduledAudit(self, \"MyCfnScheduledAudit\",\n    frequency=\"frequency\",\n    target_check_names=[\"targetCheckNames\"],\n\n    # the properties below are optional\n    day_of_month=\"dayOfMonth\",\n    day_of_week=\"dayOfWeek\",\n    scheduled_audit_name=\"scheduledAuditName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnScheduledAudit cfnScheduledAudit = new CfnScheduledAudit(this, \"MyCfnScheduledAudit\", new CfnScheduledAuditProps {\n    Frequency = \"frequency\",\n    TargetCheckNames = new [] { \"targetCheckNames\" },\n\n    // the properties below are optional\n    DayOfMonth = \"dayOfMonth\",\n    DayOfWeek = \"dayOfWeek\",\n    ScheduledAuditName = \"scheduledAuditName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnScheduledAudit cfnScheduledAudit = CfnScheduledAudit.Builder.create(this, \"MyCfnScheduledAudit\")\n        .frequency(\"frequency\")\n        .targetCheckNames(List.of(\"targetCheckNames\"))\n\n        // the properties below are optional\n        .dayOfMonth(\"dayOfMonth\")\n        .dayOfWeek(\"dayOfWeek\")\n        .scheduledAuditName(\"scheduledAuditName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnScheduledAudit := iot.NewCfnScheduledAudit(this, jsii.String(\"MyCfnScheduledAudit\"), &cfnScheduledAuditProps{\n\tfrequency: jsii.String(\"frequency\"),\n\ttargetCheckNames: []*string{\n\t\tjsii.String(\"targetCheckNames\"),\n\t},\n\n\t// the properties below are optional\n\tdayOfMonth: jsii.String(\"dayOfMonth\"),\n\tdayOfWeek: jsii.String(\"dayOfWeek\"),\n\tscheduledAuditName: jsii.String(\"scheduledAuditName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnScheduledAudit = new iot.CfnScheduledAudit(this, 'MyCfnScheduledAudit', {\n  frequency: 'frequency',\n  targetCheckNames: ['targetCheckNames'],\n\n  // the properties below are optional\n  dayOfMonth: 'dayOfMonth',\n  dayOfWeek: 'dayOfWeek',\n  scheduledAuditName: 'scheduledAuditName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnScheduledAudit"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnScheduledAudit",
        "@aws-cdk/aws-iot.CfnScheduledAuditProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScheduledAudit = new iot.CfnScheduledAudit(this, 'MyCfnScheduledAudit', {\n  frequency: 'frequency',\n  targetCheckNames: ['targetCheckNames'],\n\n  // the properties below are optional\n  dayOfMonth: 'dayOfMonth',\n  dayOfWeek: 'dayOfWeek',\n  scheduledAuditName: 'scheduledAuditName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 12,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "c1661466528dc28ed6c32bddfa0fae9b2979e7b07fcaab303be38ab8b1ecd530"
    },
    "44c9cc51f5d61465a86cd2380d6bca5f1436417e671138b6e93f1ead9d9248e8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_scheduled_audit_props = iot.CfnScheduledAuditProps(\n    frequency=\"frequency\",\n    target_check_names=[\"targetCheckNames\"],\n\n    # the properties below are optional\n    day_of_month=\"dayOfMonth\",\n    day_of_week=\"dayOfWeek\",\n    scheduled_audit_name=\"scheduledAuditName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnScheduledAuditProps cfnScheduledAuditProps = new CfnScheduledAuditProps {\n    Frequency = \"frequency\",\n    TargetCheckNames = new [] { \"targetCheckNames\" },\n\n    // the properties below are optional\n    DayOfMonth = \"dayOfMonth\",\n    DayOfWeek = \"dayOfWeek\",\n    ScheduledAuditName = \"scheduledAuditName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnScheduledAuditProps cfnScheduledAuditProps = CfnScheduledAuditProps.builder()\n        .frequency(\"frequency\")\n        .targetCheckNames(List.of(\"targetCheckNames\"))\n\n        // the properties below are optional\n        .dayOfMonth(\"dayOfMonth\")\n        .dayOfWeek(\"dayOfWeek\")\n        .scheduledAuditName(\"scheduledAuditName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnScheduledAuditProps := &cfnScheduledAuditProps{\n\tfrequency: jsii.String(\"frequency\"),\n\ttargetCheckNames: []*string{\n\t\tjsii.String(\"targetCheckNames\"),\n\t},\n\n\t// the properties below are optional\n\tdayOfMonth: jsii.String(\"dayOfMonth\"),\n\tdayOfWeek: jsii.String(\"dayOfWeek\"),\n\tscheduledAuditName: jsii.String(\"scheduledAuditName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnScheduledAuditProps: iot.CfnScheduledAuditProps = {\n  frequency: 'frequency',\n  targetCheckNames: ['targetCheckNames'],\n\n  // the properties below are optional\n  dayOfMonth: 'dayOfMonth',\n  dayOfWeek: 'dayOfWeek',\n  scheduledAuditName: 'scheduledAuditName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnScheduledAuditProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnScheduledAuditProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScheduledAuditProps: iot.CfnScheduledAuditProps = {\n  frequency: 'frequency',\n  targetCheckNames: ['targetCheckNames'],\n\n  // the properties below are optional\n  dayOfMonth: 'dayOfMonth',\n  dayOfWeek: 'dayOfWeek',\n  scheduledAuditName: 'scheduledAuditName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "d93b72d20bd6a1ace88450e649086f0b561dd9e1a2a6e70f77c98aee4bb3898a"
    },
    "3c440c2109acc31360460b5162c1499efda3dce815064bc12d01e9fb9e223690": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_security_profile = iot.CfnSecurityProfile(self, \"MyCfnSecurityProfile\",\n    additional_metrics_to_retain_v2=[iot.CfnSecurityProfile.MetricToRetainProperty(\n        metric=\"metric\",\n\n        # the properties below are optional\n        metric_dimension=iot.CfnSecurityProfile.MetricDimensionProperty(\n            dimension_name=\"dimensionName\",\n\n            # the properties below are optional\n            operator=\"operator\"\n        )\n    )],\n    alert_targets={\n        \"alert_targets_key\": iot.CfnSecurityProfile.AlertTargetProperty(\n            alert_target_arn=\"alertTargetArn\",\n            role_arn=\"roleArn\"\n        )\n    },\n    behaviors=[iot.CfnSecurityProfile.BehaviorProperty(\n        name=\"name\",\n\n        # the properties below are optional\n        criteria=iot.CfnSecurityProfile.BehaviorCriteriaProperty(\n            comparison_operator=\"comparisonOperator\",\n            consecutive_datapoints_to_alarm=123,\n            consecutive_datapoints_to_clear=123,\n            duration_seconds=123,\n            ml_detection_config=iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty(\n                confidence_level=\"confidenceLevel\"\n            ),\n            statistical_threshold=iot.CfnSecurityProfile.StatisticalThresholdProperty(\n                statistic=\"statistic\"\n            ),\n            value=iot.CfnSecurityProfile.MetricValueProperty(\n                cidrs=[\"cidrs\"],\n                count=\"count\",\n                number=123,\n                numbers=[123],\n                ports=[123],\n                strings=[\"strings\"]\n            )\n        ),\n        metric=\"metric\",\n        metric_dimension=iot.CfnSecurityProfile.MetricDimensionProperty(\n            dimension_name=\"dimensionName\",\n\n            # the properties below are optional\n            operator=\"operator\"\n        ),\n        suppress_alerts=False\n    )],\n    security_profile_description=\"securityProfileDescription\",\n    security_profile_name=\"securityProfileName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_arns=[\"targetArns\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnSecurityProfile cfnSecurityProfile = new CfnSecurityProfile(this, \"MyCfnSecurityProfile\", new CfnSecurityProfileProps {\n    AdditionalMetricsToRetainV2 = new [] { new MetricToRetainProperty {\n        Metric = \"metric\",\n\n        // the properties below are optional\n        MetricDimension = new MetricDimensionProperty {\n            DimensionName = \"dimensionName\",\n\n            // the properties below are optional\n            Operator = \"operator\"\n        }\n    } },\n    AlertTargets = new Dictionary<string, object> {\n        { \"alertTargetsKey\", new AlertTargetProperty {\n            AlertTargetArn = \"alertTargetArn\",\n            RoleArn = \"roleArn\"\n        } }\n    },\n    Behaviors = new [] { new BehaviorProperty {\n        Name = \"name\",\n\n        // the properties below are optional\n        Criteria = new BehaviorCriteriaProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            ConsecutiveDatapointsToAlarm = 123,\n            ConsecutiveDatapointsToClear = 123,\n            DurationSeconds = 123,\n            MlDetectionConfig = new MachineLearningDetectionConfigProperty {\n                ConfidenceLevel = \"confidenceLevel\"\n            },\n            StatisticalThreshold = new StatisticalThresholdProperty {\n                Statistic = \"statistic\"\n            },\n            Value = new MetricValueProperty {\n                Cidrs = new [] { \"cidrs\" },\n                Count = \"count\",\n                Number = 123,\n                Numbers = new [] { 123 },\n                Ports = new [] { 123 },\n                Strings = new [] { \"strings\" }\n            }\n        },\n        Metric = \"metric\",\n        MetricDimension = new MetricDimensionProperty {\n            DimensionName = \"dimensionName\",\n\n            // the properties below are optional\n            Operator = \"operator\"\n        },\n        SuppressAlerts = false\n    } },\n    SecurityProfileDescription = \"securityProfileDescription\",\n    SecurityProfileName = \"securityProfileName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetArns = new [] { \"targetArns\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnSecurityProfile cfnSecurityProfile = CfnSecurityProfile.Builder.create(this, \"MyCfnSecurityProfile\")\n        .additionalMetricsToRetainV2(List.of(MetricToRetainProperty.builder()\n                .metric(\"metric\")\n\n                // the properties below are optional\n                .metricDimension(MetricDimensionProperty.builder()\n                        .dimensionName(\"dimensionName\")\n\n                        // the properties below are optional\n                        .operator(\"operator\")\n                        .build())\n                .build()))\n        .alertTargets(Map.of(\n                \"alertTargetsKey\", AlertTargetProperty.builder()\n                        .alertTargetArn(\"alertTargetArn\")\n                        .roleArn(\"roleArn\")\n                        .build()))\n        .behaviors(List.of(BehaviorProperty.builder()\n                .name(\"name\")\n\n                // the properties below are optional\n                .criteria(BehaviorCriteriaProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .consecutiveDatapointsToAlarm(123)\n                        .consecutiveDatapointsToClear(123)\n                        .durationSeconds(123)\n                        .mlDetectionConfig(MachineLearningDetectionConfigProperty.builder()\n                                .confidenceLevel(\"confidenceLevel\")\n                                .build())\n                        .statisticalThreshold(StatisticalThresholdProperty.builder()\n                                .statistic(\"statistic\")\n                                .build())\n                        .value(MetricValueProperty.builder()\n                                .cidrs(List.of(\"cidrs\"))\n                                .count(\"count\")\n                                .number(123)\n                                .numbers(List.of(123))\n                                .ports(List.of(123))\n                                .strings(List.of(\"strings\"))\n                                .build())\n                        .build())\n                .metric(\"metric\")\n                .metricDimension(MetricDimensionProperty.builder()\n                        .dimensionName(\"dimensionName\")\n\n                        // the properties below are optional\n                        .operator(\"operator\")\n                        .build())\n                .suppressAlerts(false)\n                .build()))\n        .securityProfileDescription(\"securityProfileDescription\")\n        .securityProfileName(\"securityProfileName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetArns(List.of(\"targetArns\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnSecurityProfile := iot.NewCfnSecurityProfile(this, jsii.String(\"MyCfnSecurityProfile\"), &cfnSecurityProfileProps{\n\tadditionalMetricsToRetainV2: []interface{}{\n\t\t&metricToRetainProperty{\n\t\t\tmetric: jsii.String(\"metric\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmetricDimension: &metricDimensionProperty{\n\t\t\t\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\toperator: jsii.String(\"operator\"),\n\t\t\t},\n\t\t},\n\t},\n\talertTargets: map[string]interface{}{\n\t\t\"alertTargetsKey\": &AlertTargetProperty{\n\t\t\t\"alertTargetArn\": jsii.String(\"alertTargetArn\"),\n\t\t\t\"roleArn\": jsii.String(\"roleArn\"),\n\t\t},\n\t},\n\tbehaviors: []interface{}{\n\t\t&behaviorProperty{\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcriteria: &behaviorCriteriaProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tconsecutiveDatapointsToAlarm: jsii.Number(123),\n\t\t\t\tconsecutiveDatapointsToClear: jsii.Number(123),\n\t\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\t\tmlDetectionConfig: &machineLearningDetectionConfigProperty{\n\t\t\t\t\tconfidenceLevel: jsii.String(\"confidenceLevel\"),\n\t\t\t\t},\n\t\t\t\tstatisticalThreshold: &statisticalThresholdProperty{\n\t\t\t\t\tstatistic: jsii.String(\"statistic\"),\n\t\t\t\t},\n\t\t\t\tvalue: &metricValueProperty{\n\t\t\t\t\tcidrs: []*string{\n\t\t\t\t\t\tjsii.String(\"cidrs\"),\n\t\t\t\t\t},\n\t\t\t\t\tcount: jsii.String(\"count\"),\n\t\t\t\t\tnumber: jsii.Number(123),\n\t\t\t\t\tnumbers: []interface{}{\n\t\t\t\t\t\tjsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tports: []interface{}{\n\t\t\t\t\t\tjsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tstrings: []*string{\n\t\t\t\t\t\tjsii.String(\"strings\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmetric: jsii.String(\"metric\"),\n\t\t\tmetricDimension: &metricDimensionProperty{\n\t\t\t\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\toperator: jsii.String(\"operator\"),\n\t\t\t},\n\t\t\tsuppressAlerts: jsii.Boolean(false),\n\t\t},\n\t},\n\tsecurityProfileDescription: jsii.String(\"securityProfileDescription\"),\n\tsecurityProfileName: jsii.String(\"securityProfileName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetArns: []*string{\n\t\tjsii.String(\"targetArns\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnSecurityProfile = new iot.CfnSecurityProfile(this, 'MyCfnSecurityProfile', /* all optional props */ {\n  additionalMetricsToRetainV2: [{\n    metric: 'metric',\n\n    // the properties below are optional\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n  }],\n  alertTargets: {\n    alertTargetsKey: {\n      alertTargetArn: 'alertTargetArn',\n      roleArn: 'roleArn',\n    },\n  },\n  behaviors: [{\n    name: 'name',\n\n    // the properties below are optional\n    criteria: {\n      comparisonOperator: 'comparisonOperator',\n      consecutiveDatapointsToAlarm: 123,\n      consecutiveDatapointsToClear: 123,\n      durationSeconds: 123,\n      mlDetectionConfig: {\n        confidenceLevel: 'confidenceLevel',\n      },\n      statisticalThreshold: {\n        statistic: 'statistic',\n      },\n      value: {\n        cidrs: ['cidrs'],\n        count: 'count',\n        number: 123,\n        numbers: [123],\n        ports: [123],\n        strings: ['strings'],\n      },\n    },\n    metric: 'metric',\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n    suppressAlerts: false,\n  }],\n  securityProfileDescription: 'securityProfileDescription',\n  securityProfileName: 'securityProfileName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetArns: ['targetArns'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile",
        "@aws-cdk/aws-iot.CfnSecurityProfileProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityProfile = new iot.CfnSecurityProfile(this, 'MyCfnSecurityProfile', /* all optional props */ {\n  additionalMetricsToRetainV2: [{\n    metric: 'metric',\n\n    // the properties below are optional\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n  }],\n  alertTargets: {\n    alertTargetsKey: {\n      alertTargetArn: 'alertTargetArn',\n      roleArn: 'roleArn',\n    },\n  },\n  behaviors: [{\n    name: 'name',\n\n    // the properties below are optional\n    criteria: {\n      comparisonOperator: 'comparisonOperator',\n      consecutiveDatapointsToAlarm: 123,\n      consecutiveDatapointsToClear: 123,\n      durationSeconds: 123,\n      mlDetectionConfig: {\n        confidenceLevel: 'confidenceLevel',\n      },\n      statisticalThreshold: {\n        statistic: 'statistic',\n      },\n      value: {\n        cidrs: ['cidrs'],\n        count: 'count',\n        number: 123,\n        numbers: [123],\n        ports: [123],\n        strings: ['strings'],\n      },\n    },\n    metric: 'metric',\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n    suppressAlerts: false,\n  }],\n  securityProfileDescription: 'securityProfileDescription',\n  securityProfileName: 'securityProfileName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetArns: ['targetArns'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 22,
        "75": 42,
        "91": 1,
        "104": 1,
        "192": 8,
        "193": 12,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 38,
        "290": 1
      },
      "fqnsFingerprint": "879effd05f7eba942d4d13778ad72df504c593789812a1ac93794cb8c63ae7cd"
    },
    "fd10c46e15652ef1d5daa2aa48850450d2ff1482feca37dfe650d959a1c71ca8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nalert_target_property = iot.CfnSecurityProfile.AlertTargetProperty(\n    alert_target_arn=\"alertTargetArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAlertTargetProperty alertTargetProperty = new AlertTargetProperty {\n    AlertTargetArn = \"alertTargetArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAlertTargetProperty alertTargetProperty = AlertTargetProperty.builder()\n        .alertTargetArn(\"alertTargetArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nalertTargetProperty := &alertTargetProperty{\n\talertTargetArn: jsii.String(\"alertTargetArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst alertTargetProperty: iot.CfnSecurityProfile.AlertTargetProperty = {\n  alertTargetArn: 'alertTargetArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.AlertTargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.AlertTargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst alertTargetProperty: iot.CfnSecurityProfile.AlertTargetProperty = {\n  alertTargetArn: 'alertTargetArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1ae20bdfd11c22a92d5ea991a18581de8cbbe22a7f8976bc435c874fdbf8446c"
    },
    "2ec3eb28592207b20dbfde539f6906de8c0ee7e6b5a72affca25ccd9b2bf181c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nbehavior_criteria_property = iot.CfnSecurityProfile.BehaviorCriteriaProperty(\n    comparison_operator=\"comparisonOperator\",\n    consecutive_datapoints_to_alarm=123,\n    consecutive_datapoints_to_clear=123,\n    duration_seconds=123,\n    ml_detection_config=iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty(\n        confidence_level=\"confidenceLevel\"\n    ),\n    statistical_threshold=iot.CfnSecurityProfile.StatisticalThresholdProperty(\n        statistic=\"statistic\"\n    ),\n    value=iot.CfnSecurityProfile.MetricValueProperty(\n        cidrs=[\"cidrs\"],\n        count=\"count\",\n        number=123,\n        numbers=[123],\n        ports=[123],\n        strings=[\"strings\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nBehaviorCriteriaProperty behaviorCriteriaProperty = new BehaviorCriteriaProperty {\n    ComparisonOperator = \"comparisonOperator\",\n    ConsecutiveDatapointsToAlarm = 123,\n    ConsecutiveDatapointsToClear = 123,\n    DurationSeconds = 123,\n    MlDetectionConfig = new MachineLearningDetectionConfigProperty {\n        ConfidenceLevel = \"confidenceLevel\"\n    },\n    StatisticalThreshold = new StatisticalThresholdProperty {\n        Statistic = \"statistic\"\n    },\n    Value = new MetricValueProperty {\n        Cidrs = new [] { \"cidrs\" },\n        Count = \"count\",\n        Number = 123,\n        Numbers = new [] { 123 },\n        Ports = new [] { 123 },\n        Strings = new [] { \"strings\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nBehaviorCriteriaProperty behaviorCriteriaProperty = BehaviorCriteriaProperty.builder()\n        .comparisonOperator(\"comparisonOperator\")\n        .consecutiveDatapointsToAlarm(123)\n        .consecutiveDatapointsToClear(123)\n        .durationSeconds(123)\n        .mlDetectionConfig(MachineLearningDetectionConfigProperty.builder()\n                .confidenceLevel(\"confidenceLevel\")\n                .build())\n        .statisticalThreshold(StatisticalThresholdProperty.builder()\n                .statistic(\"statistic\")\n                .build())\n        .value(MetricValueProperty.builder()\n                .cidrs(List.of(\"cidrs\"))\n                .count(\"count\")\n                .number(123)\n                .numbers(List.of(123))\n                .ports(List.of(123))\n                .strings(List.of(\"strings\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nbehaviorCriteriaProperty := &behaviorCriteriaProperty{\n\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\tconsecutiveDatapointsToAlarm: jsii.Number(123),\n\tconsecutiveDatapointsToClear: jsii.Number(123),\n\tdurationSeconds: jsii.Number(123),\n\tmlDetectionConfig: &machineLearningDetectionConfigProperty{\n\t\tconfidenceLevel: jsii.String(\"confidenceLevel\"),\n\t},\n\tstatisticalThreshold: &statisticalThresholdProperty{\n\t\tstatistic: jsii.String(\"statistic\"),\n\t},\n\tvalue: &metricValueProperty{\n\t\tcidrs: []*string{\n\t\t\tjsii.String(\"cidrs\"),\n\t\t},\n\t\tcount: jsii.String(\"count\"),\n\t\tnumber: jsii.Number(123),\n\t\tnumbers: []interface{}{\n\t\t\tjsii.Number(123),\n\t\t},\n\t\tports: []interface{}{\n\t\t\tjsii.Number(123),\n\t\t},\n\t\tstrings: []*string{\n\t\t\tjsii.String(\"strings\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst behaviorCriteriaProperty: iot.CfnSecurityProfile.BehaviorCriteriaProperty = {\n  comparisonOperator: 'comparisonOperator',\n  consecutiveDatapointsToAlarm: 123,\n  consecutiveDatapointsToClear: 123,\n  durationSeconds: 123,\n  mlDetectionConfig: {\n    confidenceLevel: 'confidenceLevel',\n  },\n  statisticalThreshold: {\n    statistic: 'statistic',\n  },\n  value: {\n    cidrs: ['cidrs'],\n    count: 'count',\n    number: 123,\n    numbers: [123],\n    ports: [123],\n    strings: ['strings'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.BehaviorCriteriaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.BehaviorCriteriaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst behaviorCriteriaProperty: iot.CfnSecurityProfile.BehaviorCriteriaProperty = {\n  comparisonOperator: 'comparisonOperator',\n  consecutiveDatapointsToAlarm: 123,\n  consecutiveDatapointsToClear: 123,\n  durationSeconds: 123,\n  mlDetectionConfig: {\n    confidenceLevel: 'confidenceLevel',\n  },\n  statisticalThreshold: {\n    statistic: 'statistic',\n  },\n  value: {\n    cidrs: ['cidrs'],\n    count: 'count',\n    number: 123,\n    numbers: [123],\n    ports: [123],\n    strings: ['strings'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 7,
        "75": 20,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "de65724a8caaaf8231c650123adc6e245a9a7d5b253208d12bd500f6e5fe5dd7"
    },
    "29eab02d08de6647fb6ec26022ae4faa894b86db2ae22465b7ff5544d4a0dfb0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nbehavior_property = iot.CfnSecurityProfile.BehaviorProperty(\n    name=\"name\",\n\n    # the properties below are optional\n    criteria=iot.CfnSecurityProfile.BehaviorCriteriaProperty(\n        comparison_operator=\"comparisonOperator\",\n        consecutive_datapoints_to_alarm=123,\n        consecutive_datapoints_to_clear=123,\n        duration_seconds=123,\n        ml_detection_config=iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty(\n            confidence_level=\"confidenceLevel\"\n        ),\n        statistical_threshold=iot.CfnSecurityProfile.StatisticalThresholdProperty(\n            statistic=\"statistic\"\n        ),\n        value=iot.CfnSecurityProfile.MetricValueProperty(\n            cidrs=[\"cidrs\"],\n            count=\"count\",\n            number=123,\n            numbers=[123],\n            ports=[123],\n            strings=[\"strings\"]\n        )\n    ),\n    metric=\"metric\",\n    metric_dimension=iot.CfnSecurityProfile.MetricDimensionProperty(\n        dimension_name=\"dimensionName\",\n\n        # the properties below are optional\n        operator=\"operator\"\n    ),\n    suppress_alerts=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nBehaviorProperty behaviorProperty = new BehaviorProperty {\n    Name = \"name\",\n\n    // the properties below are optional\n    Criteria = new BehaviorCriteriaProperty {\n        ComparisonOperator = \"comparisonOperator\",\n        ConsecutiveDatapointsToAlarm = 123,\n        ConsecutiveDatapointsToClear = 123,\n        DurationSeconds = 123,\n        MlDetectionConfig = new MachineLearningDetectionConfigProperty {\n            ConfidenceLevel = \"confidenceLevel\"\n        },\n        StatisticalThreshold = new StatisticalThresholdProperty {\n            Statistic = \"statistic\"\n        },\n        Value = new MetricValueProperty {\n            Cidrs = new [] { \"cidrs\" },\n            Count = \"count\",\n            Number = 123,\n            Numbers = new [] { 123 },\n            Ports = new [] { 123 },\n            Strings = new [] { \"strings\" }\n        }\n    },\n    Metric = \"metric\",\n    MetricDimension = new MetricDimensionProperty {\n        DimensionName = \"dimensionName\",\n\n        // the properties below are optional\n        Operator = \"operator\"\n    },\n    SuppressAlerts = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nBehaviorProperty behaviorProperty = BehaviorProperty.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .criteria(BehaviorCriteriaProperty.builder()\n                .comparisonOperator(\"comparisonOperator\")\n                .consecutiveDatapointsToAlarm(123)\n                .consecutiveDatapointsToClear(123)\n                .durationSeconds(123)\n                .mlDetectionConfig(MachineLearningDetectionConfigProperty.builder()\n                        .confidenceLevel(\"confidenceLevel\")\n                        .build())\n                .statisticalThreshold(StatisticalThresholdProperty.builder()\n                        .statistic(\"statistic\")\n                        .build())\n                .value(MetricValueProperty.builder()\n                        .cidrs(List.of(\"cidrs\"))\n                        .count(\"count\")\n                        .number(123)\n                        .numbers(List.of(123))\n                        .ports(List.of(123))\n                        .strings(List.of(\"strings\"))\n                        .build())\n                .build())\n        .metric(\"metric\")\n        .metricDimension(MetricDimensionProperty.builder()\n                .dimensionName(\"dimensionName\")\n\n                // the properties below are optional\n                .operator(\"operator\")\n                .build())\n        .suppressAlerts(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nbehaviorProperty := &behaviorProperty{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tcriteria: &behaviorCriteriaProperty{\n\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\tconsecutiveDatapointsToAlarm: jsii.Number(123),\n\t\tconsecutiveDatapointsToClear: jsii.Number(123),\n\t\tdurationSeconds: jsii.Number(123),\n\t\tmlDetectionConfig: &machineLearningDetectionConfigProperty{\n\t\t\tconfidenceLevel: jsii.String(\"confidenceLevel\"),\n\t\t},\n\t\tstatisticalThreshold: &statisticalThresholdProperty{\n\t\t\tstatistic: jsii.String(\"statistic\"),\n\t\t},\n\t\tvalue: &metricValueProperty{\n\t\t\tcidrs: []*string{\n\t\t\t\tjsii.String(\"cidrs\"),\n\t\t\t},\n\t\t\tcount: jsii.String(\"count\"),\n\t\t\tnumber: jsii.Number(123),\n\t\t\tnumbers: []interface{}{\n\t\t\t\tjsii.Number(123),\n\t\t\t},\n\t\t\tports: []interface{}{\n\t\t\t\tjsii.Number(123),\n\t\t\t},\n\t\t\tstrings: []*string{\n\t\t\t\tjsii.String(\"strings\"),\n\t\t\t},\n\t\t},\n\t},\n\tmetric: jsii.String(\"metric\"),\n\tmetricDimension: &metricDimensionProperty{\n\t\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t\t// the properties below are optional\n\t\toperator: jsii.String(\"operator\"),\n\t},\n\tsuppressAlerts: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst behaviorProperty: iot.CfnSecurityProfile.BehaviorProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  criteria: {\n    comparisonOperator: 'comparisonOperator',\n    consecutiveDatapointsToAlarm: 123,\n    consecutiveDatapointsToClear: 123,\n    durationSeconds: 123,\n    mlDetectionConfig: {\n      confidenceLevel: 'confidenceLevel',\n    },\n    statisticalThreshold: {\n      statistic: 'statistic',\n    },\n    value: {\n      cidrs: ['cidrs'],\n      count: 'count',\n      number: 123,\n      numbers: [123],\n      ports: [123],\n      strings: ['strings'],\n    },\n  },\n  metric: 'metric',\n  metricDimension: {\n    dimensionName: 'dimensionName',\n\n    // the properties below are optional\n    operator: 'operator',\n  },\n  suppressAlerts: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.BehaviorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.BehaviorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst behaviorProperty: iot.CfnSecurityProfile.BehaviorProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  criteria: {\n    comparisonOperator: 'comparisonOperator',\n    consecutiveDatapointsToAlarm: 123,\n    consecutiveDatapointsToClear: 123,\n    durationSeconds: 123,\n    mlDetectionConfig: {\n      confidenceLevel: 'confidenceLevel',\n    },\n    statisticalThreshold: {\n      statistic: 'statistic',\n    },\n    value: {\n      cidrs: ['cidrs'],\n      count: 'count',\n      number: 123,\n      numbers: [123],\n      ports: [123],\n      strings: ['strings'],\n    },\n  },\n  metric: 'metric',\n  metricDimension: {\n    dimensionName: 'dimensionName',\n\n    // the properties below are optional\n    operator: 'operator',\n  },\n  suppressAlerts: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 11,
        "75": 27,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 22,
        "290": 1
      },
      "fqnsFingerprint": "af2016027b87e81e56428d09ef231b485fe669cc8ae1eb48065c3c8db0ea6ce2"
    },
    "f4d81149fb90d6454543e9020a57808c3afa7589f4a104aab402884dc97e5b2b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nmachine_learning_detection_config_property = iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty(\n    confidence_level=\"confidenceLevel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nMachineLearningDetectionConfigProperty machineLearningDetectionConfigProperty = new MachineLearningDetectionConfigProperty {\n    ConfidenceLevel = \"confidenceLevel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nMachineLearningDetectionConfigProperty machineLearningDetectionConfigProperty = MachineLearningDetectionConfigProperty.builder()\n        .confidenceLevel(\"confidenceLevel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nmachineLearningDetectionConfigProperty := &machineLearningDetectionConfigProperty{\n\tconfidenceLevel: jsii.String(\"confidenceLevel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst machineLearningDetectionConfigProperty: iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty = {\n  confidenceLevel: 'confidenceLevel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst machineLearningDetectionConfigProperty: iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty = {\n  confidenceLevel: 'confidenceLevel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "9eecbae3ebacada0038cb2afe962d5d81dd09a8e5b205eb34bef90dff0ef6ed4"
    },
    "3f8c5febb945221d1ec1fe189aa09655a601f93a37f6e532e9f58c9dabe3911f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nmetric_dimension_property = iot.CfnSecurityProfile.MetricDimensionProperty(\n    dimension_name=\"dimensionName\",\n\n    # the properties below are optional\n    operator=\"operator\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nMetricDimensionProperty metricDimensionProperty = new MetricDimensionProperty {\n    DimensionName = \"dimensionName\",\n\n    // the properties below are optional\n    Operator = \"operator\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nMetricDimensionProperty metricDimensionProperty = MetricDimensionProperty.builder()\n        .dimensionName(\"dimensionName\")\n\n        // the properties below are optional\n        .operator(\"operator\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nmetricDimensionProperty := &metricDimensionProperty{\n\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t// the properties below are optional\n\toperator: jsii.String(\"operator\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst metricDimensionProperty: iot.CfnSecurityProfile.MetricDimensionProperty = {\n  dimensionName: 'dimensionName',\n\n  // the properties below are optional\n  operator: 'operator',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.MetricDimensionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.MetricDimensionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricDimensionProperty: iot.CfnSecurityProfile.MetricDimensionProperty = {\n  dimensionName: 'dimensionName',\n\n  // the properties below are optional\n  operator: 'operator',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "455238f23bf713c8b4e6f0374779528d7c6f8ddebb3a0250cee5fe603ffd6d27"
    },
    "290db46e0e6c0cecac3fd88752008b37f200bb7121f7a7e56ebabbe964d55834": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nmetric_to_retain_property = iot.CfnSecurityProfile.MetricToRetainProperty(\n    metric=\"metric\",\n\n    # the properties below are optional\n    metric_dimension=iot.CfnSecurityProfile.MetricDimensionProperty(\n        dimension_name=\"dimensionName\",\n\n        # the properties below are optional\n        operator=\"operator\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nMetricToRetainProperty metricToRetainProperty = new MetricToRetainProperty {\n    Metric = \"metric\",\n\n    // the properties below are optional\n    MetricDimension = new MetricDimensionProperty {\n        DimensionName = \"dimensionName\",\n\n        // the properties below are optional\n        Operator = \"operator\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nMetricToRetainProperty metricToRetainProperty = MetricToRetainProperty.builder()\n        .metric(\"metric\")\n\n        // the properties below are optional\n        .metricDimension(MetricDimensionProperty.builder()\n                .dimensionName(\"dimensionName\")\n\n                // the properties below are optional\n                .operator(\"operator\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nmetricToRetainProperty := &metricToRetainProperty{\n\tmetric: jsii.String(\"metric\"),\n\n\t// the properties below are optional\n\tmetricDimension: &metricDimensionProperty{\n\t\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t\t// the properties below are optional\n\t\toperator: jsii.String(\"operator\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst metricToRetainProperty: iot.CfnSecurityProfile.MetricToRetainProperty = {\n  metric: 'metric',\n\n  // the properties below are optional\n  metricDimension: {\n    dimensionName: 'dimensionName',\n\n    // the properties below are optional\n    operator: 'operator',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.MetricToRetainProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.MetricToRetainProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricToRetainProperty: iot.CfnSecurityProfile.MetricToRetainProperty = {\n  metric: 'metric',\n\n  // the properties below are optional\n  metricDimension: {\n    dimensionName: 'dimensionName',\n\n    // the properties below are optional\n    operator: 'operator',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "4e338319d1a5c56ac72cede19faab0e3bf2ef2209d8f66144f3c1405018853de"
    },
    "f49c5fc9691a60a6bb60333a9f72d2d4c83531753a01bb152bbfb0b65e530ed2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nmetric_value_property = iot.CfnSecurityProfile.MetricValueProperty(\n    cidrs=[\"cidrs\"],\n    count=\"count\",\n    number=123,\n    numbers=[123],\n    ports=[123],\n    strings=[\"strings\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nMetricValueProperty metricValueProperty = new MetricValueProperty {\n    Cidrs = new [] { \"cidrs\" },\n    Count = \"count\",\n    Number = 123,\n    Numbers = new [] { 123 },\n    Ports = new [] { 123 },\n    Strings = new [] { \"strings\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nMetricValueProperty metricValueProperty = MetricValueProperty.builder()\n        .cidrs(List.of(\"cidrs\"))\n        .count(\"count\")\n        .number(123)\n        .numbers(List.of(123))\n        .ports(List.of(123))\n        .strings(List.of(\"strings\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nmetricValueProperty := &metricValueProperty{\n\tcidrs: []*string{\n\t\tjsii.String(\"cidrs\"),\n\t},\n\tcount: jsii.String(\"count\"),\n\tnumber: jsii.Number(123),\n\tnumbers: []interface{}{\n\t\tjsii.Number(123),\n\t},\n\tports: []interface{}{\n\t\tjsii.Number(123),\n\t},\n\tstrings: []*string{\n\t\tjsii.String(\"strings\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst metricValueProperty: iot.CfnSecurityProfile.MetricValueProperty = {\n  cidrs: ['cidrs'],\n  count: 'count',\n  number: 123,\n  numbers: [123],\n  ports: [123],\n  strings: ['strings'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.MetricValueProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.MetricValueProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricValueProperty: iot.CfnSecurityProfile.MetricValueProperty = {\n  cidrs: ['cidrs'],\n  count: 'count',\n  number: 123,\n  numbers: [123],\n  ports: [123],\n  strings: ['strings'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "37aae8dd071c1b25ffbac0f2c4bd86a1d06ab8c253cf3f9414c28f1c2e22772c"
    },
    "71ed6a1da24e92cd278fdd4526e369420659783106edd97118f6de62075c3128": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nstatistical_threshold_property = iot.CfnSecurityProfile.StatisticalThresholdProperty(\n    statistic=\"statistic\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nStatisticalThresholdProperty statisticalThresholdProperty = new StatisticalThresholdProperty {\n    Statistic = \"statistic\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nStatisticalThresholdProperty statisticalThresholdProperty = StatisticalThresholdProperty.builder()\n        .statistic(\"statistic\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nstatisticalThresholdProperty := &statisticalThresholdProperty{\n\tstatistic: jsii.String(\"statistic\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst statisticalThresholdProperty: iot.CfnSecurityProfile.StatisticalThresholdProperty = {\n  statistic: 'statistic',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfile.StatisticalThresholdProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfile.StatisticalThresholdProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst statisticalThresholdProperty: iot.CfnSecurityProfile.StatisticalThresholdProperty = {\n  statistic: 'statistic',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "4fe4d7561025e8e0314a4e8372eb6e92cc8dc1deb4c0759eb4392a629e169d95"
    },
    "0c57620703a1025c0b566cf49b81393c1fa416bea2121151d1f943eb2b383305": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_security_profile_props = iot.CfnSecurityProfileProps(\n    additional_metrics_to_retain_v2=[iot.CfnSecurityProfile.MetricToRetainProperty(\n        metric=\"metric\",\n\n        # the properties below are optional\n        metric_dimension=iot.CfnSecurityProfile.MetricDimensionProperty(\n            dimension_name=\"dimensionName\",\n\n            # the properties below are optional\n            operator=\"operator\"\n        )\n    )],\n    alert_targets={\n        \"alert_targets_key\": iot.CfnSecurityProfile.AlertTargetProperty(\n            alert_target_arn=\"alertTargetArn\",\n            role_arn=\"roleArn\"\n        )\n    },\n    behaviors=[iot.CfnSecurityProfile.BehaviorProperty(\n        name=\"name\",\n\n        # the properties below are optional\n        criteria=iot.CfnSecurityProfile.BehaviorCriteriaProperty(\n            comparison_operator=\"comparisonOperator\",\n            consecutive_datapoints_to_alarm=123,\n            consecutive_datapoints_to_clear=123,\n            duration_seconds=123,\n            ml_detection_config=iot.CfnSecurityProfile.MachineLearningDetectionConfigProperty(\n                confidence_level=\"confidenceLevel\"\n            ),\n            statistical_threshold=iot.CfnSecurityProfile.StatisticalThresholdProperty(\n                statistic=\"statistic\"\n            ),\n            value=iot.CfnSecurityProfile.MetricValueProperty(\n                cidrs=[\"cidrs\"],\n                count=\"count\",\n                number=123,\n                numbers=[123],\n                ports=[123],\n                strings=[\"strings\"]\n            )\n        ),\n        metric=\"metric\",\n        metric_dimension=iot.CfnSecurityProfile.MetricDimensionProperty(\n            dimension_name=\"dimensionName\",\n\n            # the properties below are optional\n            operator=\"operator\"\n        ),\n        suppress_alerts=False\n    )],\n    security_profile_description=\"securityProfileDescription\",\n    security_profile_name=\"securityProfileName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_arns=[\"targetArns\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnSecurityProfileProps cfnSecurityProfileProps = new CfnSecurityProfileProps {\n    AdditionalMetricsToRetainV2 = new [] { new MetricToRetainProperty {\n        Metric = \"metric\",\n\n        // the properties below are optional\n        MetricDimension = new MetricDimensionProperty {\n            DimensionName = \"dimensionName\",\n\n            // the properties below are optional\n            Operator = \"operator\"\n        }\n    } },\n    AlertTargets = new Dictionary<string, object> {\n        { \"alertTargetsKey\", new AlertTargetProperty {\n            AlertTargetArn = \"alertTargetArn\",\n            RoleArn = \"roleArn\"\n        } }\n    },\n    Behaviors = new [] { new BehaviorProperty {\n        Name = \"name\",\n\n        // the properties below are optional\n        Criteria = new BehaviorCriteriaProperty {\n            ComparisonOperator = \"comparisonOperator\",\n            ConsecutiveDatapointsToAlarm = 123,\n            ConsecutiveDatapointsToClear = 123,\n            DurationSeconds = 123,\n            MlDetectionConfig = new MachineLearningDetectionConfigProperty {\n                ConfidenceLevel = \"confidenceLevel\"\n            },\n            StatisticalThreshold = new StatisticalThresholdProperty {\n                Statistic = \"statistic\"\n            },\n            Value = new MetricValueProperty {\n                Cidrs = new [] { \"cidrs\" },\n                Count = \"count\",\n                Number = 123,\n                Numbers = new [] { 123 },\n                Ports = new [] { 123 },\n                Strings = new [] { \"strings\" }\n            }\n        },\n        Metric = \"metric\",\n        MetricDimension = new MetricDimensionProperty {\n            DimensionName = \"dimensionName\",\n\n            // the properties below are optional\n            Operator = \"operator\"\n        },\n        SuppressAlerts = false\n    } },\n    SecurityProfileDescription = \"securityProfileDescription\",\n    SecurityProfileName = \"securityProfileName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetArns = new [] { \"targetArns\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnSecurityProfileProps cfnSecurityProfileProps = CfnSecurityProfileProps.builder()\n        .additionalMetricsToRetainV2(List.of(MetricToRetainProperty.builder()\n                .metric(\"metric\")\n\n                // the properties below are optional\n                .metricDimension(MetricDimensionProperty.builder()\n                        .dimensionName(\"dimensionName\")\n\n                        // the properties below are optional\n                        .operator(\"operator\")\n                        .build())\n                .build()))\n        .alertTargets(Map.of(\n                \"alertTargetsKey\", AlertTargetProperty.builder()\n                        .alertTargetArn(\"alertTargetArn\")\n                        .roleArn(\"roleArn\")\n                        .build()))\n        .behaviors(List.of(BehaviorProperty.builder()\n                .name(\"name\")\n\n                // the properties below are optional\n                .criteria(BehaviorCriteriaProperty.builder()\n                        .comparisonOperator(\"comparisonOperator\")\n                        .consecutiveDatapointsToAlarm(123)\n                        .consecutiveDatapointsToClear(123)\n                        .durationSeconds(123)\n                        .mlDetectionConfig(MachineLearningDetectionConfigProperty.builder()\n                                .confidenceLevel(\"confidenceLevel\")\n                                .build())\n                        .statisticalThreshold(StatisticalThresholdProperty.builder()\n                                .statistic(\"statistic\")\n                                .build())\n                        .value(MetricValueProperty.builder()\n                                .cidrs(List.of(\"cidrs\"))\n                                .count(\"count\")\n                                .number(123)\n                                .numbers(List.of(123))\n                                .ports(List.of(123))\n                                .strings(List.of(\"strings\"))\n                                .build())\n                        .build())\n                .metric(\"metric\")\n                .metricDimension(MetricDimensionProperty.builder()\n                        .dimensionName(\"dimensionName\")\n\n                        // the properties below are optional\n                        .operator(\"operator\")\n                        .build())\n                .suppressAlerts(false)\n                .build()))\n        .securityProfileDescription(\"securityProfileDescription\")\n        .securityProfileName(\"securityProfileName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetArns(List.of(\"targetArns\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnSecurityProfileProps := &cfnSecurityProfileProps{\n\tadditionalMetricsToRetainV2: []interface{}{\n\t\t&metricToRetainProperty{\n\t\t\tmetric: jsii.String(\"metric\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmetricDimension: &metricDimensionProperty{\n\t\t\t\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\toperator: jsii.String(\"operator\"),\n\t\t\t},\n\t\t},\n\t},\n\talertTargets: map[string]interface{}{\n\t\t\"alertTargetsKey\": &AlertTargetProperty{\n\t\t\t\"alertTargetArn\": jsii.String(\"alertTargetArn\"),\n\t\t\t\"roleArn\": jsii.String(\"roleArn\"),\n\t\t},\n\t},\n\tbehaviors: []interface{}{\n\t\t&behaviorProperty{\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcriteria: &behaviorCriteriaProperty{\n\t\t\t\tcomparisonOperator: jsii.String(\"comparisonOperator\"),\n\t\t\t\tconsecutiveDatapointsToAlarm: jsii.Number(123),\n\t\t\t\tconsecutiveDatapointsToClear: jsii.Number(123),\n\t\t\t\tdurationSeconds: jsii.Number(123),\n\t\t\t\tmlDetectionConfig: &machineLearningDetectionConfigProperty{\n\t\t\t\t\tconfidenceLevel: jsii.String(\"confidenceLevel\"),\n\t\t\t\t},\n\t\t\t\tstatisticalThreshold: &statisticalThresholdProperty{\n\t\t\t\t\tstatistic: jsii.String(\"statistic\"),\n\t\t\t\t},\n\t\t\t\tvalue: &metricValueProperty{\n\t\t\t\t\tcidrs: []*string{\n\t\t\t\t\t\tjsii.String(\"cidrs\"),\n\t\t\t\t\t},\n\t\t\t\t\tcount: jsii.String(\"count\"),\n\t\t\t\t\tnumber: jsii.Number(123),\n\t\t\t\t\tnumbers: []interface{}{\n\t\t\t\t\t\tjsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tports: []interface{}{\n\t\t\t\t\t\tjsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tstrings: []*string{\n\t\t\t\t\t\tjsii.String(\"strings\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmetric: jsii.String(\"metric\"),\n\t\t\tmetricDimension: &metricDimensionProperty{\n\t\t\t\tdimensionName: jsii.String(\"dimensionName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\toperator: jsii.String(\"operator\"),\n\t\t\t},\n\t\t\tsuppressAlerts: jsii.Boolean(false),\n\t\t},\n\t},\n\tsecurityProfileDescription: jsii.String(\"securityProfileDescription\"),\n\tsecurityProfileName: jsii.String(\"securityProfileName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetArns: []*string{\n\t\tjsii.String(\"targetArns\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnSecurityProfileProps: iot.CfnSecurityProfileProps = {\n  additionalMetricsToRetainV2: [{\n    metric: 'metric',\n\n    // the properties below are optional\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n  }],\n  alertTargets: {\n    alertTargetsKey: {\n      alertTargetArn: 'alertTargetArn',\n      roleArn: 'roleArn',\n    },\n  },\n  behaviors: [{\n    name: 'name',\n\n    // the properties below are optional\n    criteria: {\n      comparisonOperator: 'comparisonOperator',\n      consecutiveDatapointsToAlarm: 123,\n      consecutiveDatapointsToClear: 123,\n      durationSeconds: 123,\n      mlDetectionConfig: {\n        confidenceLevel: 'confidenceLevel',\n      },\n      statisticalThreshold: {\n        statistic: 'statistic',\n      },\n      value: {\n        cidrs: ['cidrs'],\n        count: 'count',\n        number: 123,\n        numbers: [123],\n        ports: [123],\n        strings: ['strings'],\n      },\n    },\n    metric: 'metric',\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n    suppressAlerts: false,\n  }],\n  securityProfileDescription: 'securityProfileDescription',\n  securityProfileName: 'securityProfileName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetArns: ['targetArns'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnSecurityProfileProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnSecurityProfileProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityProfileProps: iot.CfnSecurityProfileProps = {\n  additionalMetricsToRetainV2: [{\n    metric: 'metric',\n\n    // the properties below are optional\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n  }],\n  alertTargets: {\n    alertTargetsKey: {\n      alertTargetArn: 'alertTargetArn',\n      roleArn: 'roleArn',\n    },\n  },\n  behaviors: [{\n    name: 'name',\n\n    // the properties below are optional\n    criteria: {\n      comparisonOperator: 'comparisonOperator',\n      consecutiveDatapointsToAlarm: 123,\n      consecutiveDatapointsToClear: 123,\n      durationSeconds: 123,\n      mlDetectionConfig: {\n        confidenceLevel: 'confidenceLevel',\n      },\n      statisticalThreshold: {\n        statistic: 'statistic',\n      },\n      value: {\n        cidrs: ['cidrs'],\n        count: 'count',\n        number: 123,\n        numbers: [123],\n        ports: [123],\n        strings: ['strings'],\n      },\n    },\n    metric: 'metric',\n    metricDimension: {\n      dimensionName: 'dimensionName',\n\n      // the properties below are optional\n      operator: 'operator',\n    },\n    suppressAlerts: false,\n  }],\n  securityProfileDescription: 'securityProfileDescription',\n  securityProfileName: 'securityProfileName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetArns: ['targetArns'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 21,
        "75": 42,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 8,
        "193": 12,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 38,
        "290": 1
      },
      "fqnsFingerprint": "3252ccc4c683a75c2c62a02aa637a1452e891ae100324dc5d4fa6dfac7ce32a9"
    },
    "4471e9034d1fd02e75c21f54a56e759dfdcea297ae4fd5492dbe8cde2494943c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_thing = iot.CfnThing(self, \"MyCfnThing\",\n    attribute_payload=iot.CfnThing.AttributePayloadProperty(\n        attributes={\n            \"attributes_key\": \"attributes\"\n        }\n    ),\n    thing_name=\"thingName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnThing cfnThing = new CfnThing(this, \"MyCfnThing\", new CfnThingProps {\n    AttributePayload = new AttributePayloadProperty {\n        Attributes = new Dictionary<string, string> {\n            { \"attributesKey\", \"attributes\" }\n        }\n    },\n    ThingName = \"thingName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnThing cfnThing = CfnThing.Builder.create(this, \"MyCfnThing\")\n        .attributePayload(AttributePayloadProperty.builder()\n                .attributes(Map.of(\n                        \"attributesKey\", \"attributes\"))\n                .build())\n        .thingName(\"thingName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnThing := iot.NewCfnThing(this, jsii.String(\"MyCfnThing\"), &cfnThingProps{\n\tattributePayload: &attributePayloadProperty{\n\t\tattributes: map[string]*string{\n\t\t\t\"attributesKey\": jsii.String(\"attributes\"),\n\t\t},\n\t},\n\tthingName: jsii.String(\"thingName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnThing = new iot.CfnThing(this, 'MyCfnThing', /* all optional props */ {\n  attributePayload: {\n    attributes: {\n      attributesKey: 'attributes',\n    },\n  },\n  thingName: 'thingName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnThing"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnThing",
        "@aws-cdk/aws-iot.CfnThingProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnThing = new iot.CfnThing(this, 'MyCfnThing', /* all optional props */ {\n  attributePayload: {\n    attributes: {\n      attributesKey: 'attributes',\n    },\n  },\n  thingName: 'thingName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "104": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "632e72cd7c57032e8cdaee190159e6500d9fd34bed796c91837e293f473b1c7d"
    },
    "ac907bdb076a2ab81c57aa39b6c66539d5c76402eb4bd31a67177621313485c9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nattribute_payload_property = iot.CfnThing.AttributePayloadProperty(\n    attributes={\n        \"attributes_key\": \"attributes\"\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAttributePayloadProperty attributePayloadProperty = new AttributePayloadProperty {\n    Attributes = new Dictionary<string, string> {\n        { \"attributesKey\", \"attributes\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAttributePayloadProperty attributePayloadProperty = AttributePayloadProperty.builder()\n        .attributes(Map.of(\n                \"attributesKey\", \"attributes\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nattributePayloadProperty := &attributePayloadProperty{\n\tattributes: map[string]*string{\n\t\t\"attributesKey\": jsii.String(\"attributes\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst attributePayloadProperty: iot.CfnThing.AttributePayloadProperty = {\n  attributes: {\n    attributesKey: 'attributes',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnThing.AttributePayloadProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnThing.AttributePayloadProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst attributePayloadProperty: iot.CfnThing.AttributePayloadProperty = {\n  attributes: {\n    attributesKey: 'attributes',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "9fa7a018235d5ef129260bac19e66d0267f6ca3f76beb6a0c75401b314411019"
    },
    "6e6b127e82d600477560c8720298074456d8587a3c3790af299e6b442548a7bc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_thing_principal_attachment = iot.CfnThingPrincipalAttachment(self, \"MyCfnThingPrincipalAttachment\",\n    principal=\"principal\",\n    thing_name=\"thingName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnThingPrincipalAttachment cfnThingPrincipalAttachment = new CfnThingPrincipalAttachment(this, \"MyCfnThingPrincipalAttachment\", new CfnThingPrincipalAttachmentProps {\n    Principal = \"principal\",\n    ThingName = \"thingName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnThingPrincipalAttachment cfnThingPrincipalAttachment = CfnThingPrincipalAttachment.Builder.create(this, \"MyCfnThingPrincipalAttachment\")\n        .principal(\"principal\")\n        .thingName(\"thingName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnThingPrincipalAttachment := iot.NewCfnThingPrincipalAttachment(this, jsii.String(\"MyCfnThingPrincipalAttachment\"), &cfnThingPrincipalAttachmentProps{\n\tprincipal: jsii.String(\"principal\"),\n\tthingName: jsii.String(\"thingName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnThingPrincipalAttachment = new iot.CfnThingPrincipalAttachment(this, 'MyCfnThingPrincipalAttachment', {\n  principal: 'principal',\n  thingName: 'thingName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnThingPrincipalAttachment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnThingPrincipalAttachment",
        "@aws-cdk/aws-iot.CfnThingPrincipalAttachmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnThingPrincipalAttachment = new iot.CfnThingPrincipalAttachment(this, 'MyCfnThingPrincipalAttachment', {\n  principal: 'principal',\n  thingName: 'thingName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7196226a9406f739d715d4c2316472711ec757c4a86fc89a1e247b897335b809"
    },
    "5df0fdcd86880619b73102e49355b8408a216b4234948939496162b5e1202779": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_thing_principal_attachment_props = iot.CfnThingPrincipalAttachmentProps(\n    principal=\"principal\",\n    thing_name=\"thingName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnThingPrincipalAttachmentProps cfnThingPrincipalAttachmentProps = new CfnThingPrincipalAttachmentProps {\n    Principal = \"principal\",\n    ThingName = \"thingName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnThingPrincipalAttachmentProps cfnThingPrincipalAttachmentProps = CfnThingPrincipalAttachmentProps.builder()\n        .principal(\"principal\")\n        .thingName(\"thingName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnThingPrincipalAttachmentProps := &cfnThingPrincipalAttachmentProps{\n\tprincipal: jsii.String(\"principal\"),\n\tthingName: jsii.String(\"thingName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnThingPrincipalAttachmentProps: iot.CfnThingPrincipalAttachmentProps = {\n  principal: 'principal',\n  thingName: 'thingName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnThingPrincipalAttachmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnThingPrincipalAttachmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnThingPrincipalAttachmentProps: iot.CfnThingPrincipalAttachmentProps = {\n  principal: 'principal',\n  thingName: 'thingName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2d67a970088b4521717d53154709018c82829331875dc320c1a8dba95c8b4cd2"
    },
    "10f6ba31bd1d5901b14539b3ac0668d2253c27a6c2edeb7b04d9675124b03ef8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_thing_props = iot.CfnThingProps(\n    attribute_payload=iot.CfnThing.AttributePayloadProperty(\n        attributes={\n            \"attributes_key\": \"attributes\"\n        }\n    ),\n    thing_name=\"thingName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnThingProps cfnThingProps = new CfnThingProps {\n    AttributePayload = new AttributePayloadProperty {\n        Attributes = new Dictionary<string, string> {\n            { \"attributesKey\", \"attributes\" }\n        }\n    },\n    ThingName = \"thingName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnThingProps cfnThingProps = CfnThingProps.builder()\n        .attributePayload(AttributePayloadProperty.builder()\n                .attributes(Map.of(\n                        \"attributesKey\", \"attributes\"))\n                .build())\n        .thingName(\"thingName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnThingProps := &cfnThingProps{\n\tattributePayload: &attributePayloadProperty{\n\t\tattributes: map[string]*string{\n\t\t\t\"attributesKey\": jsii.String(\"attributes\"),\n\t\t},\n\t},\n\tthingName: jsii.String(\"thingName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnThingProps: iot.CfnThingProps = {\n  attributePayload: {\n    attributes: {\n      attributesKey: 'attributes',\n    },\n  },\n  thingName: 'thingName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnThingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnThingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnThingProps: iot.CfnThingProps = {\n  attributePayload: {\n    attributes: {\n      attributesKey: 'attributes',\n    },\n  },\n  thingName: 'thingName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8bf216f852b8a9ed856fe56ee345ecf9a0ecd6e2b0e578967d5f6f0b38e415a2"
    },
    "a046d908552c62e81c92cc59fc14fc4af1fee877df326db75959ed48b084ba21": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_topic_rule = iot.CfnTopicRule(self, \"MyCfnTopicRule\",\n    topic_rule_payload=iot.CfnTopicRule.TopicRulePayloadProperty(\n        actions=[iot.CfnTopicRule.ActionProperty(\n            cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n                alarm_name=\"alarmName\",\n                role_arn=\"roleArn\",\n                state_reason=\"stateReason\",\n                state_value=\"stateValue\"\n            ),\n            cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n                log_group_name=\"logGroupName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n                metric_name=\"metricName\",\n                metric_namespace=\"metricNamespace\",\n                metric_unit=\"metricUnit\",\n                metric_value=\"metricValue\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                metric_timestamp=\"metricTimestamp\"\n            ),\n            dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n                hash_key_field=\"hashKeyField\",\n                hash_key_value=\"hashKeyValue\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                hash_key_type=\"hashKeyType\",\n                payload_field=\"payloadField\",\n                range_key_field=\"rangeKeyField\",\n                range_key_type=\"rangeKeyType\",\n                range_key_value=\"rangeKeyValue\"\n            ),\n            dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n                put_item=iot.CfnTopicRule.PutItemInputProperty(\n                    table_name=\"tableName\"\n                ),\n                role_arn=\"roleArn\"\n            ),\n            elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            firehose=iot.CfnTopicRule.FirehoseActionProperty(\n                delivery_stream_name=\"deliveryStreamName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                separator=\"separator\"\n            ),\n            http=iot.CfnTopicRule.HttpActionProperty(\n                url=\"url\",\n\n                # the properties below are optional\n                auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                    sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                        role_arn=\"roleArn\",\n                        service_name=\"serviceName\",\n                        signing_region=\"signingRegion\"\n                    )\n                ),\n                confirmation_url=\"confirmationUrl\",\n                headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n                channel_name=\"channelName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n                input_name=\"inputName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                message_id=\"messageId\"\n            ),\n            iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n                put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                    property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                        timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                            time_in_seconds=\"timeInSeconds\",\n\n                            # the properties below are optional\n                            offset_in_nanos=\"offsetInNanos\"\n                        ),\n                        value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                            boolean_value=\"booleanValue\",\n                            double_value=\"doubleValue\",\n                            integer_value=\"integerValue\",\n                            string_value=\"stringValue\"\n                        ),\n\n                        # the properties below are optional\n                        quality=\"quality\"\n                    )],\n\n                    # the properties below are optional\n                    asset_id=\"assetId\",\n                    entry_id=\"entryId\",\n                    property_alias=\"propertyAlias\",\n                    property_id=\"propertyId\"\n                )],\n                role_arn=\"roleArn\"\n            ),\n            kafka=iot.CfnTopicRule.KafkaActionProperty(\n                client_properties={\n                    \"client_properties_key\": \"clientProperties\"\n                },\n                destination_arn=\"destinationArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                key=\"key\",\n                partition=\"partition\"\n            ),\n            kinesis=iot.CfnTopicRule.KinesisActionProperty(\n                role_arn=\"roleArn\",\n                stream_name=\"streamName\",\n\n                # the properties below are optional\n                partition_key=\"partitionKey\"\n            ),\n            lambda_=iot.CfnTopicRule.LambdaActionProperty(\n                function_arn=\"functionArn\"\n            ),\n            location=iot.CfnTopicRule.LocationActionProperty(\n                device_id=\"deviceId\",\n                latitude=\"latitude\",\n                longitude=\"longitude\",\n                role_arn=\"roleArn\",\n                tracker_name=\"trackerName\",\n\n                # the properties below are optional\n                timestamp=Date()\n            ),\n            open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            republish=iot.CfnTopicRule.RepublishActionProperty(\n                role_arn=\"roleArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                    content_type=\"contentType\",\n                    correlation_data=\"correlationData\",\n                    message_expiry=\"messageExpiry\",\n                    payload_format_indicator=\"payloadFormatIndicator\",\n                    response_topic=\"responseTopic\",\n                    user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                        key=\"key\",\n                        value=\"value\"\n                    )]\n                ),\n                qos=123\n            ),\n            s3=iot.CfnTopicRule.S3ActionProperty(\n                bucket_name=\"bucketName\",\n                key=\"key\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                canned_acl=\"cannedAcl\"\n            ),\n            sns=iot.CfnTopicRule.SnsActionProperty(\n                role_arn=\"roleArn\",\n                target_arn=\"targetArn\",\n\n                # the properties below are optional\n                message_format=\"messageFormat\"\n            ),\n            sqs=iot.CfnTopicRule.SqsActionProperty(\n                queue_url=\"queueUrl\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                use_base64=False\n            ),\n            step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n                role_arn=\"roleArn\",\n                state_machine_name=\"stateMachineName\",\n\n                # the properties below are optional\n                execution_name_prefix=\"executionNamePrefix\"\n            ),\n            timestream=iot.CfnTopicRule.TimestreamActionProperty(\n                database_name=\"databaseName\",\n                dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )],\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                    unit=\"unit\",\n                    value=\"value\"\n                )\n            )\n        )],\n        sql=\"sql\",\n\n        # the properties below are optional\n        aws_iot_sql_version=\"awsIotSqlVersion\",\n        description=\"description\",\n        error_action=iot.CfnTopicRule.ActionProperty(\n            cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n                alarm_name=\"alarmName\",\n                role_arn=\"roleArn\",\n                state_reason=\"stateReason\",\n                state_value=\"stateValue\"\n            ),\n            cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n                log_group_name=\"logGroupName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n                metric_name=\"metricName\",\n                metric_namespace=\"metricNamespace\",\n                metric_unit=\"metricUnit\",\n                metric_value=\"metricValue\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                metric_timestamp=\"metricTimestamp\"\n            ),\n            dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n                hash_key_field=\"hashKeyField\",\n                hash_key_value=\"hashKeyValue\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                hash_key_type=\"hashKeyType\",\n                payload_field=\"payloadField\",\n                range_key_field=\"rangeKeyField\",\n                range_key_type=\"rangeKeyType\",\n                range_key_value=\"rangeKeyValue\"\n            ),\n            dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n                put_item=iot.CfnTopicRule.PutItemInputProperty(\n                    table_name=\"tableName\"\n                ),\n                role_arn=\"roleArn\"\n            ),\n            elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            firehose=iot.CfnTopicRule.FirehoseActionProperty(\n                delivery_stream_name=\"deliveryStreamName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                separator=\"separator\"\n            ),\n            http=iot.CfnTopicRule.HttpActionProperty(\n                url=\"url\",\n\n                # the properties below are optional\n                auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                    sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                        role_arn=\"roleArn\",\n                        service_name=\"serviceName\",\n                        signing_region=\"signingRegion\"\n                    )\n                ),\n                confirmation_url=\"confirmationUrl\",\n                headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n                channel_name=\"channelName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n                input_name=\"inputName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                message_id=\"messageId\"\n            ),\n            iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n                put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                    property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                        timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                            time_in_seconds=\"timeInSeconds\",\n\n                            # the properties below are optional\n                            offset_in_nanos=\"offsetInNanos\"\n                        ),\n                        value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                            boolean_value=\"booleanValue\",\n                            double_value=\"doubleValue\",\n                            integer_value=\"integerValue\",\n                            string_value=\"stringValue\"\n                        ),\n\n                        # the properties below are optional\n                        quality=\"quality\"\n                    )],\n\n                    # the properties below are optional\n                    asset_id=\"assetId\",\n                    entry_id=\"entryId\",\n                    property_alias=\"propertyAlias\",\n                    property_id=\"propertyId\"\n                )],\n                role_arn=\"roleArn\"\n            ),\n            kafka=iot.CfnTopicRule.KafkaActionProperty(\n                client_properties={\n                    \"client_properties_key\": \"clientProperties\"\n                },\n                destination_arn=\"destinationArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                key=\"key\",\n                partition=\"partition\"\n            ),\n            kinesis=iot.CfnTopicRule.KinesisActionProperty(\n                role_arn=\"roleArn\",\n                stream_name=\"streamName\",\n\n                # the properties below are optional\n                partition_key=\"partitionKey\"\n            ),\n            lambda_=iot.CfnTopicRule.LambdaActionProperty(\n                function_arn=\"functionArn\"\n            ),\n            location=iot.CfnTopicRule.LocationActionProperty(\n                device_id=\"deviceId\",\n                latitude=\"latitude\",\n                longitude=\"longitude\",\n                role_arn=\"roleArn\",\n                tracker_name=\"trackerName\",\n\n                # the properties below are optional\n                timestamp=Date()\n            ),\n            open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            republish=iot.CfnTopicRule.RepublishActionProperty(\n                role_arn=\"roleArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                    content_type=\"contentType\",\n                    correlation_data=\"correlationData\",\n                    message_expiry=\"messageExpiry\",\n                    payload_format_indicator=\"payloadFormatIndicator\",\n                    response_topic=\"responseTopic\",\n                    user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                        key=\"key\",\n                        value=\"value\"\n                    )]\n                ),\n                qos=123\n            ),\n            s3=iot.CfnTopicRule.S3ActionProperty(\n                bucket_name=\"bucketName\",\n                key=\"key\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                canned_acl=\"cannedAcl\"\n            ),\n            sns=iot.CfnTopicRule.SnsActionProperty(\n                role_arn=\"roleArn\",\n                target_arn=\"targetArn\",\n\n                # the properties below are optional\n                message_format=\"messageFormat\"\n            ),\n            sqs=iot.CfnTopicRule.SqsActionProperty(\n                queue_url=\"queueUrl\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                use_base64=False\n            ),\n            step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n                role_arn=\"roleArn\",\n                state_machine_name=\"stateMachineName\",\n\n                # the properties below are optional\n                execution_name_prefix=\"executionNamePrefix\"\n            ),\n            timestream=iot.CfnTopicRule.TimestreamActionProperty(\n                database_name=\"databaseName\",\n                dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )],\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                    unit=\"unit\",\n                    value=\"value\"\n                )\n            )\n        ),\n        rule_disabled=False\n    ),\n\n    # the properties below are optional\n    rule_name=\"ruleName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnTopicRule cfnTopicRule = new CfnTopicRule(this, \"MyCfnTopicRule\", new CfnTopicRuleProps {\n    TopicRulePayload = new TopicRulePayloadProperty {\n        Actions = new [] { new ActionProperty {\n            CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n                AlarmName = \"alarmName\",\n                RoleArn = \"roleArn\",\n                StateReason = \"stateReason\",\n                StateValue = \"stateValue\"\n            },\n            CloudwatchLogs = new CloudwatchLogsActionProperty {\n                LogGroupName = \"logGroupName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            CloudwatchMetric = new CloudwatchMetricActionProperty {\n                MetricName = \"metricName\",\n                MetricNamespace = \"metricNamespace\",\n                MetricUnit = \"metricUnit\",\n                MetricValue = \"metricValue\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                MetricTimestamp = \"metricTimestamp\"\n            },\n            DynamoDb = new DynamoDBActionProperty {\n                HashKeyField = \"hashKeyField\",\n                HashKeyValue = \"hashKeyValue\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                HashKeyType = \"hashKeyType\",\n                PayloadField = \"payloadField\",\n                RangeKeyField = \"rangeKeyField\",\n                RangeKeyType = \"rangeKeyType\",\n                RangeKeyValue = \"rangeKeyValue\"\n            },\n            DynamoDBv2 = new DynamoDBv2ActionProperty {\n                PutItem = new PutItemInputProperty {\n                    TableName = \"tableName\"\n                },\n                RoleArn = \"roleArn\"\n            },\n            Elasticsearch = new ElasticsearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Firehose = new FirehoseActionProperty {\n                DeliveryStreamName = \"deliveryStreamName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                Separator = \"separator\"\n            },\n            Http = new HttpActionProperty {\n                Url = \"url\",\n\n                // the properties below are optional\n                Auth = new HttpAuthorizationProperty {\n                    Sigv4 = new SigV4AuthorizationProperty {\n                        RoleArn = \"roleArn\",\n                        ServiceName = \"serviceName\",\n                        SigningRegion = \"signingRegion\"\n                    }\n                },\n                ConfirmationUrl = \"confirmationUrl\",\n                Headers = new [] { new HttpActionHeaderProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            IotAnalytics = new IotAnalyticsActionProperty {\n                ChannelName = \"channelName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            IotEvents = new IotEventsActionProperty {\n                InputName = \"inputName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                MessageId = \"messageId\"\n            },\n            IotSiteWise = new IotSiteWiseActionProperty {\n                PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                    PropertyValues = new [] { new AssetPropertyValueProperty {\n                        Timestamp = new AssetPropertyTimestampProperty {\n                            TimeInSeconds = \"timeInSeconds\",\n\n                            // the properties below are optional\n                            OffsetInNanos = \"offsetInNanos\"\n                        },\n                        Value = new AssetPropertyVariantProperty {\n                            BooleanValue = \"booleanValue\",\n                            DoubleValue = \"doubleValue\",\n                            IntegerValue = \"integerValue\",\n                            StringValue = \"stringValue\"\n                        },\n\n                        // the properties below are optional\n                        Quality = \"quality\"\n                    } },\n\n                    // the properties below are optional\n                    AssetId = \"assetId\",\n                    EntryId = \"entryId\",\n                    PropertyAlias = \"propertyAlias\",\n                    PropertyId = \"propertyId\"\n                } },\n                RoleArn = \"roleArn\"\n            },\n            Kafka = new KafkaActionProperty {\n                ClientProperties = new Dictionary<string, string> {\n                    { \"clientPropertiesKey\", \"clientProperties\" }\n                },\n                DestinationArn = \"destinationArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Key = \"key\",\n                Partition = \"partition\"\n            },\n            Kinesis = new KinesisActionProperty {\n                RoleArn = \"roleArn\",\n                StreamName = \"streamName\",\n\n                // the properties below are optional\n                PartitionKey = \"partitionKey\"\n            },\n            Lambda = new LambdaActionProperty {\n                FunctionArn = \"functionArn\"\n            },\n            Location = new LocationActionProperty {\n                DeviceId = \"deviceId\",\n                Latitude = \"latitude\",\n                Longitude = \"longitude\",\n                RoleArn = \"roleArn\",\n                TrackerName = \"trackerName\",\n\n                // the properties below are optional\n                Timestamp = new Date()\n            },\n            OpenSearch = new OpenSearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Republish = new RepublishActionProperty {\n                RoleArn = \"roleArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Headers = new RepublishActionHeadersProperty {\n                    ContentType = \"contentType\",\n                    CorrelationData = \"correlationData\",\n                    MessageExpiry = \"messageExpiry\",\n                    PayloadFormatIndicator = \"payloadFormatIndicator\",\n                    ResponseTopic = \"responseTopic\",\n                    UserProperties = new [] { new UserPropertyProperty {\n                        Key = \"key\",\n                        Value = \"value\"\n                    } }\n                },\n                Qos = 123\n            },\n            S3 = new S3ActionProperty {\n                BucketName = \"bucketName\",\n                Key = \"key\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                CannedAcl = \"cannedAcl\"\n            },\n            Sns = new SnsActionProperty {\n                RoleArn = \"roleArn\",\n                TargetArn = \"targetArn\",\n\n                // the properties below are optional\n                MessageFormat = \"messageFormat\"\n            },\n            Sqs = new SqsActionProperty {\n                QueueUrl = \"queueUrl\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                UseBase64 = false\n            },\n            StepFunctions = new StepFunctionsActionProperty {\n                RoleArn = \"roleArn\",\n                StateMachineName = \"stateMachineName\",\n\n                // the properties below are optional\n                ExecutionNamePrefix = \"executionNamePrefix\"\n            },\n            Timestream = new TimestreamActionProperty {\n                DatabaseName = \"databaseName\",\n                Dimensions = new [] { new TimestreamDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } },\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                Timestamp = new TimestreamTimestampProperty {\n                    Unit = \"unit\",\n                    Value = \"value\"\n                }\n            }\n        } },\n        Sql = \"sql\",\n\n        // the properties below are optional\n        AwsIotSqlVersion = \"awsIotSqlVersion\",\n        Description = \"description\",\n        ErrorAction = new ActionProperty {\n            CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n                AlarmName = \"alarmName\",\n                RoleArn = \"roleArn\",\n                StateReason = \"stateReason\",\n                StateValue = \"stateValue\"\n            },\n            CloudwatchLogs = new CloudwatchLogsActionProperty {\n                LogGroupName = \"logGroupName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            CloudwatchMetric = new CloudwatchMetricActionProperty {\n                MetricName = \"metricName\",\n                MetricNamespace = \"metricNamespace\",\n                MetricUnit = \"metricUnit\",\n                MetricValue = \"metricValue\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                MetricTimestamp = \"metricTimestamp\"\n            },\n            DynamoDb = new DynamoDBActionProperty {\n                HashKeyField = \"hashKeyField\",\n                HashKeyValue = \"hashKeyValue\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                HashKeyType = \"hashKeyType\",\n                PayloadField = \"payloadField\",\n                RangeKeyField = \"rangeKeyField\",\n                RangeKeyType = \"rangeKeyType\",\n                RangeKeyValue = \"rangeKeyValue\"\n            },\n            DynamoDBv2 = new DynamoDBv2ActionProperty {\n                PutItem = new PutItemInputProperty {\n                    TableName = \"tableName\"\n                },\n                RoleArn = \"roleArn\"\n            },\n            Elasticsearch = new ElasticsearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Firehose = new FirehoseActionProperty {\n                DeliveryStreamName = \"deliveryStreamName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                Separator = \"separator\"\n            },\n            Http = new HttpActionProperty {\n                Url = \"url\",\n\n                // the properties below are optional\n                Auth = new HttpAuthorizationProperty {\n                    Sigv4 = new SigV4AuthorizationProperty {\n                        RoleArn = \"roleArn\",\n                        ServiceName = \"serviceName\",\n                        SigningRegion = \"signingRegion\"\n                    }\n                },\n                ConfirmationUrl = \"confirmationUrl\",\n                Headers = new [] { new HttpActionHeaderProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            IotAnalytics = new IotAnalyticsActionProperty {\n                ChannelName = \"channelName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            IotEvents = new IotEventsActionProperty {\n                InputName = \"inputName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                MessageId = \"messageId\"\n            },\n            IotSiteWise = new IotSiteWiseActionProperty {\n                PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                    PropertyValues = new [] { new AssetPropertyValueProperty {\n                        Timestamp = new AssetPropertyTimestampProperty {\n                            TimeInSeconds = \"timeInSeconds\",\n\n                            // the properties below are optional\n                            OffsetInNanos = \"offsetInNanos\"\n                        },\n                        Value = new AssetPropertyVariantProperty {\n                            BooleanValue = \"booleanValue\",\n                            DoubleValue = \"doubleValue\",\n                            IntegerValue = \"integerValue\",\n                            StringValue = \"stringValue\"\n                        },\n\n                        // the properties below are optional\n                        Quality = \"quality\"\n                    } },\n\n                    // the properties below are optional\n                    AssetId = \"assetId\",\n                    EntryId = \"entryId\",\n                    PropertyAlias = \"propertyAlias\",\n                    PropertyId = \"propertyId\"\n                } },\n                RoleArn = \"roleArn\"\n            },\n            Kafka = new KafkaActionProperty {\n                ClientProperties = new Dictionary<string, string> {\n                    { \"clientPropertiesKey\", \"clientProperties\" }\n                },\n                DestinationArn = \"destinationArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Key = \"key\",\n                Partition = \"partition\"\n            },\n            Kinesis = new KinesisActionProperty {\n                RoleArn = \"roleArn\",\n                StreamName = \"streamName\",\n\n                // the properties below are optional\n                PartitionKey = \"partitionKey\"\n            },\n            Lambda = new LambdaActionProperty {\n                FunctionArn = \"functionArn\"\n            },\n            Location = new LocationActionProperty {\n                DeviceId = \"deviceId\",\n                Latitude = \"latitude\",\n                Longitude = \"longitude\",\n                RoleArn = \"roleArn\",\n                TrackerName = \"trackerName\",\n\n                // the properties below are optional\n                Timestamp = new Date()\n            },\n            OpenSearch = new OpenSearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Republish = new RepublishActionProperty {\n                RoleArn = \"roleArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Headers = new RepublishActionHeadersProperty {\n                    ContentType = \"contentType\",\n                    CorrelationData = \"correlationData\",\n                    MessageExpiry = \"messageExpiry\",\n                    PayloadFormatIndicator = \"payloadFormatIndicator\",\n                    ResponseTopic = \"responseTopic\",\n                    UserProperties = new [] { new UserPropertyProperty {\n                        Key = \"key\",\n                        Value = \"value\"\n                    } }\n                },\n                Qos = 123\n            },\n            S3 = new S3ActionProperty {\n                BucketName = \"bucketName\",\n                Key = \"key\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                CannedAcl = \"cannedAcl\"\n            },\n            Sns = new SnsActionProperty {\n                RoleArn = \"roleArn\",\n                TargetArn = \"targetArn\",\n\n                // the properties below are optional\n                MessageFormat = \"messageFormat\"\n            },\n            Sqs = new SqsActionProperty {\n                QueueUrl = \"queueUrl\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                UseBase64 = false\n            },\n            StepFunctions = new StepFunctionsActionProperty {\n                RoleArn = \"roleArn\",\n                StateMachineName = \"stateMachineName\",\n\n                // the properties below are optional\n                ExecutionNamePrefix = \"executionNamePrefix\"\n            },\n            Timestream = new TimestreamActionProperty {\n                DatabaseName = \"databaseName\",\n                Dimensions = new [] { new TimestreamDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } },\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                Timestamp = new TimestreamTimestampProperty {\n                    Unit = \"unit\",\n                    Value = \"value\"\n                }\n            }\n        },\n        RuleDisabled = false\n    },\n\n    // the properties below are optional\n    RuleName = \"ruleName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnTopicRule cfnTopicRule = CfnTopicRule.Builder.create(this, \"MyCfnTopicRule\")\n        .topicRulePayload(TopicRulePayloadProperty.builder()\n                .actions(List.of(ActionProperty.builder()\n                        .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                                .alarmName(\"alarmName\")\n                                .roleArn(\"roleArn\")\n                                .stateReason(\"stateReason\")\n                                .stateValue(\"stateValue\")\n                                .build())\n                        .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                                .logGroupName(\"logGroupName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                                .metricName(\"metricName\")\n                                .metricNamespace(\"metricNamespace\")\n                                .metricUnit(\"metricUnit\")\n                                .metricValue(\"metricValue\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .metricTimestamp(\"metricTimestamp\")\n                                .build())\n                        .dynamoDb(DynamoDBActionProperty.builder()\n                                .hashKeyField(\"hashKeyField\")\n                                .hashKeyValue(\"hashKeyValue\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .hashKeyType(\"hashKeyType\")\n                                .payloadField(\"payloadField\")\n                                .rangeKeyField(\"rangeKeyField\")\n                                .rangeKeyType(\"rangeKeyType\")\n                                .rangeKeyValue(\"rangeKeyValue\")\n                                .build())\n                        .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                                .putItem(PutItemInputProperty.builder()\n                                        .tableName(\"tableName\")\n                                        .build())\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .elasticsearch(ElasticsearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .firehose(FirehoseActionProperty.builder()\n                                .deliveryStreamName(\"deliveryStreamName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .separator(\"separator\")\n                                .build())\n                        .http(HttpActionProperty.builder()\n                                .url(\"url\")\n\n                                // the properties below are optional\n                                .auth(HttpAuthorizationProperty.builder()\n                                        .sigv4(SigV4AuthorizationProperty.builder()\n                                                .roleArn(\"roleArn\")\n                                                .serviceName(\"serviceName\")\n                                                .signingRegion(\"signingRegion\")\n                                                .build())\n                                        .build())\n                                .confirmationUrl(\"confirmationUrl\")\n                                .headers(List.of(HttpActionHeaderProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .iotAnalytics(IotAnalyticsActionProperty.builder()\n                                .channelName(\"channelName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .iotEvents(IotEventsActionProperty.builder()\n                                .inputName(\"inputName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .messageId(\"messageId\")\n                                .build())\n                        .iotSiteWise(IotSiteWiseActionProperty.builder()\n                                .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                        .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                                .timestamp(AssetPropertyTimestampProperty.builder()\n                                                        .timeInSeconds(\"timeInSeconds\")\n\n                                                        // the properties below are optional\n                                                        .offsetInNanos(\"offsetInNanos\")\n                                                        .build())\n                                                .value(AssetPropertyVariantProperty.builder()\n                                                        .booleanValue(\"booleanValue\")\n                                                        .doubleValue(\"doubleValue\")\n                                                        .integerValue(\"integerValue\")\n                                                        .stringValue(\"stringValue\")\n                                                        .build())\n\n                                                // the properties below are optional\n                                                .quality(\"quality\")\n                                                .build()))\n\n                                        // the properties below are optional\n                                        .assetId(\"assetId\")\n                                        .entryId(\"entryId\")\n                                        .propertyAlias(\"propertyAlias\")\n                                        .propertyId(\"propertyId\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .kafka(KafkaActionProperty.builder()\n                                .clientProperties(Map.of(\n                                        \"clientPropertiesKey\", \"clientProperties\"))\n                                .destinationArn(\"destinationArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .key(\"key\")\n                                .partition(\"partition\")\n                                .build())\n                        .kinesis(KinesisActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .streamName(\"streamName\")\n\n                                // the properties below are optional\n                                .partitionKey(\"partitionKey\")\n                                .build())\n                        .lambda(LambdaActionProperty.builder()\n                                .functionArn(\"functionArn\")\n                                .build())\n                        .location(LocationActionProperty.builder()\n                                .deviceId(\"deviceId\")\n                                .latitude(\"latitude\")\n                                .longitude(\"longitude\")\n                                .roleArn(\"roleArn\")\n                                .trackerName(\"trackerName\")\n\n                                // the properties below are optional\n                                .timestamp(new Date())\n                                .build())\n                        .openSearch(OpenSearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .republish(RepublishActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .headers(RepublishActionHeadersProperty.builder()\n                                        .contentType(\"contentType\")\n                                        .correlationData(\"correlationData\")\n                                        .messageExpiry(\"messageExpiry\")\n                                        .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                        .responseTopic(\"responseTopic\")\n                                        .userProperties(List.of(UserPropertyProperty.builder()\n                                                .key(\"key\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .qos(123)\n                                .build())\n                        .s3(S3ActionProperty.builder()\n                                .bucketName(\"bucketName\")\n                                .key(\"key\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .cannedAcl(\"cannedAcl\")\n                                .build())\n                        .sns(SnsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .targetArn(\"targetArn\")\n\n                                // the properties below are optional\n                                .messageFormat(\"messageFormat\")\n                                .build())\n                        .sqs(SqsActionProperty.builder()\n                                .queueUrl(\"queueUrl\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .useBase64(false)\n                                .build())\n                        .stepFunctions(StepFunctionsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .stateMachineName(\"stateMachineName\")\n\n                                // the properties below are optional\n                                .executionNamePrefix(\"executionNamePrefix\")\n                                .build())\n                        .timestream(TimestreamActionProperty.builder()\n                                .databaseName(\"databaseName\")\n                                .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .timestamp(TimestreamTimestampProperty.builder()\n                                        .unit(\"unit\")\n                                        .value(\"value\")\n                                        .build())\n                                .build())\n                        .build()))\n                .sql(\"sql\")\n\n                // the properties below are optional\n                .awsIotSqlVersion(\"awsIotSqlVersion\")\n                .description(\"description\")\n                .errorAction(ActionProperty.builder()\n                        .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                                .alarmName(\"alarmName\")\n                                .roleArn(\"roleArn\")\n                                .stateReason(\"stateReason\")\n                                .stateValue(\"stateValue\")\n                                .build())\n                        .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                                .logGroupName(\"logGroupName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                                .metricName(\"metricName\")\n                                .metricNamespace(\"metricNamespace\")\n                                .metricUnit(\"metricUnit\")\n                                .metricValue(\"metricValue\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .metricTimestamp(\"metricTimestamp\")\n                                .build())\n                        .dynamoDb(DynamoDBActionProperty.builder()\n                                .hashKeyField(\"hashKeyField\")\n                                .hashKeyValue(\"hashKeyValue\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .hashKeyType(\"hashKeyType\")\n                                .payloadField(\"payloadField\")\n                                .rangeKeyField(\"rangeKeyField\")\n                                .rangeKeyType(\"rangeKeyType\")\n                                .rangeKeyValue(\"rangeKeyValue\")\n                                .build())\n                        .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                                .putItem(PutItemInputProperty.builder()\n                                        .tableName(\"tableName\")\n                                        .build())\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .elasticsearch(ElasticsearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .firehose(FirehoseActionProperty.builder()\n                                .deliveryStreamName(\"deliveryStreamName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .separator(\"separator\")\n                                .build())\n                        .http(HttpActionProperty.builder()\n                                .url(\"url\")\n\n                                // the properties below are optional\n                                .auth(HttpAuthorizationProperty.builder()\n                                        .sigv4(SigV4AuthorizationProperty.builder()\n                                                .roleArn(\"roleArn\")\n                                                .serviceName(\"serviceName\")\n                                                .signingRegion(\"signingRegion\")\n                                                .build())\n                                        .build())\n                                .confirmationUrl(\"confirmationUrl\")\n                                .headers(List.of(HttpActionHeaderProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .iotAnalytics(IotAnalyticsActionProperty.builder()\n                                .channelName(\"channelName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .iotEvents(IotEventsActionProperty.builder()\n                                .inputName(\"inputName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .messageId(\"messageId\")\n                                .build())\n                        .iotSiteWise(IotSiteWiseActionProperty.builder()\n                                .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                        .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                                .timestamp(AssetPropertyTimestampProperty.builder()\n                                                        .timeInSeconds(\"timeInSeconds\")\n\n                                                        // the properties below are optional\n                                                        .offsetInNanos(\"offsetInNanos\")\n                                                        .build())\n                                                .value(AssetPropertyVariantProperty.builder()\n                                                        .booleanValue(\"booleanValue\")\n                                                        .doubleValue(\"doubleValue\")\n                                                        .integerValue(\"integerValue\")\n                                                        .stringValue(\"stringValue\")\n                                                        .build())\n\n                                                // the properties below are optional\n                                                .quality(\"quality\")\n                                                .build()))\n\n                                        // the properties below are optional\n                                        .assetId(\"assetId\")\n                                        .entryId(\"entryId\")\n                                        .propertyAlias(\"propertyAlias\")\n                                        .propertyId(\"propertyId\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .kafka(KafkaActionProperty.builder()\n                                .clientProperties(Map.of(\n                                        \"clientPropertiesKey\", \"clientProperties\"))\n                                .destinationArn(\"destinationArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .key(\"key\")\n                                .partition(\"partition\")\n                                .build())\n                        .kinesis(KinesisActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .streamName(\"streamName\")\n\n                                // the properties below are optional\n                                .partitionKey(\"partitionKey\")\n                                .build())\n                        .lambda(LambdaActionProperty.builder()\n                                .functionArn(\"functionArn\")\n                                .build())\n                        .location(LocationActionProperty.builder()\n                                .deviceId(\"deviceId\")\n                                .latitude(\"latitude\")\n                                .longitude(\"longitude\")\n                                .roleArn(\"roleArn\")\n                                .trackerName(\"trackerName\")\n\n                                // the properties below are optional\n                                .timestamp(new Date())\n                                .build())\n                        .openSearch(OpenSearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .republish(RepublishActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .headers(RepublishActionHeadersProperty.builder()\n                                        .contentType(\"contentType\")\n                                        .correlationData(\"correlationData\")\n                                        .messageExpiry(\"messageExpiry\")\n                                        .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                        .responseTopic(\"responseTopic\")\n                                        .userProperties(List.of(UserPropertyProperty.builder()\n                                                .key(\"key\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .qos(123)\n                                .build())\n                        .s3(S3ActionProperty.builder()\n                                .bucketName(\"bucketName\")\n                                .key(\"key\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .cannedAcl(\"cannedAcl\")\n                                .build())\n                        .sns(SnsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .targetArn(\"targetArn\")\n\n                                // the properties below are optional\n                                .messageFormat(\"messageFormat\")\n                                .build())\n                        .sqs(SqsActionProperty.builder()\n                                .queueUrl(\"queueUrl\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .useBase64(false)\n                                .build())\n                        .stepFunctions(StepFunctionsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .stateMachineName(\"stateMachineName\")\n\n                                // the properties below are optional\n                                .executionNamePrefix(\"executionNamePrefix\")\n                                .build())\n                        .timestream(TimestreamActionProperty.builder()\n                                .databaseName(\"databaseName\")\n                                .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .timestamp(TimestreamTimestampProperty.builder()\n                                        .unit(\"unit\")\n                                        .value(\"value\")\n                                        .build())\n                                .build())\n                        .build())\n                .ruleDisabled(false)\n                .build())\n\n        // the properties below are optional\n        .ruleName(\"ruleName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnTopicRule := iot.NewCfnTopicRule(this, jsii.String(\"MyCfnTopicRule\"), &cfnTopicRuleProps{\n\ttopicRulePayload: &topicRulePayloadProperty{\n\t\tactions: []interface{}{\n\t\t\t&actionProperty{\n\t\t\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t\t\t},\n\t\t\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t\t\t},\n\t\t\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t\t\t},\n\t\t\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\t\t\tputItem: &putItemInputProperty{\n\t\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\t\t},\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t},\n\t\t\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t\tfirehose: &firehoseActionProperty{\n\t\t\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t\tseparator: jsii.String(\"separator\"),\n\t\t\t\t},\n\t\t\t\thttp: &httpActionProperty{\n\t\t\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\t\t\theaders: []interface{}{\n\t\t\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tiotEvents: &iotEventsActionProperty{\n\t\t\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t\t\t},\n\t\t\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t},\n\t\t\t\tkafka: &kafkaActionProperty{\n\t\t\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t\t\t},\n\t\t\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tpartition: jsii.String(\"partition\"),\n\t\t\t\t},\n\t\t\t\tkinesis: &kinesisActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t\t\t},\n\t\t\t\tlambda: &lambdaActionProperty{\n\t\t\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t\t\t},\n\t\t\t\tlocation: &locationActionProperty{\n\t\t\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ttimestamp: NewDate(),\n\t\t\t\t},\n\t\t\t\topenSearch: &openSearchActionProperty{\n\t\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t\trepublish: &republishActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tqos: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\ts3: &s3ActionProperty{\n\t\t\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t\t\t},\n\t\t\t\tsns: &snsActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t\t\t},\n\t\t\t\tsqs: &sqsActionProperty{\n\t\t\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tuseBase64: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t\t\t},\n\t\t\t\ttimestream: &timestreamActionProperty{\n\t\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsql: jsii.String(\"sql\"),\n\n\t\t// the properties below are optional\n\t\tawsIotSqlVersion: jsii.String(\"awsIotSqlVersion\"),\n\t\tdescription: jsii.String(\"description\"),\n\t\terrorAction: &actionProperty{\n\t\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t\t},\n\t\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t},\n\t\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t\t},\n\t\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t\t},\n\t\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\t\tputItem: &putItemInputProperty{\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t\tfirehose: &firehoseActionProperty{\n\t\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\tseparator: jsii.String(\"separator\"),\n\t\t\t},\n\t\t\thttp: &httpActionProperty{\n\t\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\t\theaders: []interface{}{\n\t\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t},\n\t\t\tiotEvents: &iotEventsActionProperty{\n\t\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t\t},\n\t\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\tkafka: &kafkaActionProperty{\n\t\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t\t},\n\t\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tpartition: jsii.String(\"partition\"),\n\t\t\t},\n\t\t\tkinesis: &kinesisActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t\t},\n\t\t\tlambda: &lambdaActionProperty{\n\t\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t\t},\n\t\t\tlocation: &locationActionProperty{\n\t\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttimestamp: NewDate(),\n\t\t\t},\n\t\t\topenSearch: &openSearchActionProperty{\n\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t\trepublish: &republishActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tqos: jsii.Number(123),\n\t\t\t},\n\t\t\ts3: &s3ActionProperty{\n\t\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t\t},\n\t\t\tsns: &snsActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t\t},\n\t\t\tsqs: &sqsActionProperty{\n\t\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tuseBase64: jsii.Boolean(false),\n\t\t\t},\n\t\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t\t},\n\t\t\ttimestream: &timestreamActionProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\truleDisabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\truleName: jsii.String(\"ruleName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnTopicRule = new iot.CfnTopicRule(this, 'MyCfnTopicRule', {\n  topicRulePayload: {\n    actions: [{\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    }],\n    sql: 'sql',\n\n    // the properties below are optional\n    awsIotSqlVersion: 'awsIotSqlVersion',\n    description: 'description',\n    errorAction: {\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    },\n    ruleDisabled: false,\n  },\n\n  // the properties below are optional\n  ruleName: 'ruleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule",
        "@aws-cdk/aws-iot.CfnTopicRuleProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTopicRule = new iot.CfnTopicRule(this, 'MyCfnTopicRule', {\n  topicRulePayload: {\n    actions: [{\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    }],\n    sql: 'sql',\n\n    // the properties below are optional\n    awsIotSqlVersion: 'awsIotSqlVersion',\n    description: 'description',\n    errorAction: {\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    },\n    ruleDisabled: false,\n  },\n\n  // the properties below are optional\n  ruleName: 'ruleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 212,
        "75": 305,
        "91": 11,
        "104": 1,
        "192": 12,
        "193": 75,
        "194": 1,
        "197": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 299,
        "290": 1
      },
      "fqnsFingerprint": "7f0e0dca380750d9ca7afdb2625fbc6e8b805fc90ea46ebc092466500e436fad"
    },
    "f28032eea9df829952aab3d61c36176d70f3f1f94b7b477f4e48bc11f64bfbe0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\naction_property = iot.CfnTopicRule.ActionProperty(\n    cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n        alarm_name=\"alarmName\",\n        role_arn=\"roleArn\",\n        state_reason=\"stateReason\",\n        state_value=\"stateValue\"\n    ),\n    cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n        log_group_name=\"logGroupName\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        batch_mode=False\n    ),\n    cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n        metric_name=\"metricName\",\n        metric_namespace=\"metricNamespace\",\n        metric_unit=\"metricUnit\",\n        metric_value=\"metricValue\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        metric_timestamp=\"metricTimestamp\"\n    ),\n    dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n        hash_key_field=\"hashKeyField\",\n        hash_key_value=\"hashKeyValue\",\n        role_arn=\"roleArn\",\n        table_name=\"tableName\",\n\n        # the properties below are optional\n        hash_key_type=\"hashKeyType\",\n        payload_field=\"payloadField\",\n        range_key_field=\"rangeKeyField\",\n        range_key_type=\"rangeKeyType\",\n        range_key_value=\"rangeKeyValue\"\n    ),\n    dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n        put_item=iot.CfnTopicRule.PutItemInputProperty(\n            table_name=\"tableName\"\n        ),\n        role_arn=\"roleArn\"\n    ),\n    elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n        endpoint=\"endpoint\",\n        id=\"id\",\n        index=\"index\",\n        role_arn=\"roleArn\",\n        type=\"type\"\n    ),\n    firehose=iot.CfnTopicRule.FirehoseActionProperty(\n        delivery_stream_name=\"deliveryStreamName\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        batch_mode=False,\n        separator=\"separator\"\n    ),\n    http=iot.CfnTopicRule.HttpActionProperty(\n        url=\"url\",\n\n        # the properties below are optional\n        auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n            sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                role_arn=\"roleArn\",\n                service_name=\"serviceName\",\n                signing_region=\"signingRegion\"\n            )\n        ),\n        confirmation_url=\"confirmationUrl\",\n        headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n            key=\"key\",\n            value=\"value\"\n        )]\n    ),\n    iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n        channel_name=\"channelName\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        batch_mode=False\n    ),\n    iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n        input_name=\"inputName\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        batch_mode=False,\n        message_id=\"messageId\"\n    ),\n    iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n        put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n            property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                    time_in_seconds=\"timeInSeconds\",\n\n                    # the properties below are optional\n                    offset_in_nanos=\"offsetInNanos\"\n                ),\n                value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                    boolean_value=\"booleanValue\",\n                    double_value=\"doubleValue\",\n                    integer_value=\"integerValue\",\n                    string_value=\"stringValue\"\n                ),\n\n                # the properties below are optional\n                quality=\"quality\"\n            )],\n\n            # the properties below are optional\n            asset_id=\"assetId\",\n            entry_id=\"entryId\",\n            property_alias=\"propertyAlias\",\n            property_id=\"propertyId\"\n        )],\n        role_arn=\"roleArn\"\n    ),\n    kafka=iot.CfnTopicRule.KafkaActionProperty(\n        client_properties={\n            \"client_properties_key\": \"clientProperties\"\n        },\n        destination_arn=\"destinationArn\",\n        topic=\"topic\",\n\n        # the properties below are optional\n        key=\"key\",\n        partition=\"partition\"\n    ),\n    kinesis=iot.CfnTopicRule.KinesisActionProperty(\n        role_arn=\"roleArn\",\n        stream_name=\"streamName\",\n\n        # the properties below are optional\n        partition_key=\"partitionKey\"\n    ),\n    lambda_=iot.CfnTopicRule.LambdaActionProperty(\n        function_arn=\"functionArn\"\n    ),\n    location=iot.CfnTopicRule.LocationActionProperty(\n        device_id=\"deviceId\",\n        latitude=\"latitude\",\n        longitude=\"longitude\",\n        role_arn=\"roleArn\",\n        tracker_name=\"trackerName\",\n\n        # the properties below are optional\n        timestamp=Date()\n    ),\n    open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n        endpoint=\"endpoint\",\n        id=\"id\",\n        index=\"index\",\n        role_arn=\"roleArn\",\n        type=\"type\"\n    ),\n    republish=iot.CfnTopicRule.RepublishActionProperty(\n        role_arn=\"roleArn\",\n        topic=\"topic\",\n\n        # the properties below are optional\n        headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n            content_type=\"contentType\",\n            correlation_data=\"correlationData\",\n            message_expiry=\"messageExpiry\",\n            payload_format_indicator=\"payloadFormatIndicator\",\n            response_topic=\"responseTopic\",\n            user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        qos=123\n    ),\n    s3=iot.CfnTopicRule.S3ActionProperty(\n        bucket_name=\"bucketName\",\n        key=\"key\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        canned_acl=\"cannedAcl\"\n    ),\n    sns=iot.CfnTopicRule.SnsActionProperty(\n        role_arn=\"roleArn\",\n        target_arn=\"targetArn\",\n\n        # the properties below are optional\n        message_format=\"messageFormat\"\n    ),\n    sqs=iot.CfnTopicRule.SqsActionProperty(\n        queue_url=\"queueUrl\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        use_base64=False\n    ),\n    step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n        role_arn=\"roleArn\",\n        state_machine_name=\"stateMachineName\",\n\n        # the properties below are optional\n        execution_name_prefix=\"executionNamePrefix\"\n    ),\n    timestream=iot.CfnTopicRule.TimestreamActionProperty(\n        database_name=\"databaseName\",\n        dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n            name=\"name\",\n            value=\"value\"\n        )],\n        role_arn=\"roleArn\",\n        table_name=\"tableName\",\n\n        # the properties below are optional\n        timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n            unit=\"unit\",\n            value=\"value\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nActionProperty actionProperty = new ActionProperty {\n    CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n        AlarmName = \"alarmName\",\n        RoleArn = \"roleArn\",\n        StateReason = \"stateReason\",\n        StateValue = \"stateValue\"\n    },\n    CloudwatchLogs = new CloudwatchLogsActionProperty {\n        LogGroupName = \"logGroupName\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BatchMode = false\n    },\n    CloudwatchMetric = new CloudwatchMetricActionProperty {\n        MetricName = \"metricName\",\n        MetricNamespace = \"metricNamespace\",\n        MetricUnit = \"metricUnit\",\n        MetricValue = \"metricValue\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        MetricTimestamp = \"metricTimestamp\"\n    },\n    DynamoDb = new DynamoDBActionProperty {\n        HashKeyField = \"hashKeyField\",\n        HashKeyValue = \"hashKeyValue\",\n        RoleArn = \"roleArn\",\n        TableName = \"tableName\",\n\n        // the properties below are optional\n        HashKeyType = \"hashKeyType\",\n        PayloadField = \"payloadField\",\n        RangeKeyField = \"rangeKeyField\",\n        RangeKeyType = \"rangeKeyType\",\n        RangeKeyValue = \"rangeKeyValue\"\n    },\n    DynamoDBv2 = new DynamoDBv2ActionProperty {\n        PutItem = new PutItemInputProperty {\n            TableName = \"tableName\"\n        },\n        RoleArn = \"roleArn\"\n    },\n    Elasticsearch = new ElasticsearchActionProperty {\n        Endpoint = \"endpoint\",\n        Id = \"id\",\n        Index = \"index\",\n        RoleArn = \"roleArn\",\n        Type = \"type\"\n    },\n    Firehose = new FirehoseActionProperty {\n        DeliveryStreamName = \"deliveryStreamName\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BatchMode = false,\n        Separator = \"separator\"\n    },\n    Http = new HttpActionProperty {\n        Url = \"url\",\n\n        // the properties below are optional\n        Auth = new HttpAuthorizationProperty {\n            Sigv4 = new SigV4AuthorizationProperty {\n                RoleArn = \"roleArn\",\n                ServiceName = \"serviceName\",\n                SigningRegion = \"signingRegion\"\n            }\n        },\n        ConfirmationUrl = \"confirmationUrl\",\n        Headers = new [] { new HttpActionHeaderProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } }\n    },\n    IotAnalytics = new IotAnalyticsActionProperty {\n        ChannelName = \"channelName\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BatchMode = false\n    },\n    IotEvents = new IotEventsActionProperty {\n        InputName = \"inputName\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BatchMode = false,\n        MessageId = \"messageId\"\n    },\n    IotSiteWise = new IotSiteWiseActionProperty {\n        PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n            PropertyValues = new [] { new AssetPropertyValueProperty {\n                Timestamp = new AssetPropertyTimestampProperty {\n                    TimeInSeconds = \"timeInSeconds\",\n\n                    // the properties below are optional\n                    OffsetInNanos = \"offsetInNanos\"\n                },\n                Value = new AssetPropertyVariantProperty {\n                    BooleanValue = \"booleanValue\",\n                    DoubleValue = \"doubleValue\",\n                    IntegerValue = \"integerValue\",\n                    StringValue = \"stringValue\"\n                },\n\n                // the properties below are optional\n                Quality = \"quality\"\n            } },\n\n            // the properties below are optional\n            AssetId = \"assetId\",\n            EntryId = \"entryId\",\n            PropertyAlias = \"propertyAlias\",\n            PropertyId = \"propertyId\"\n        } },\n        RoleArn = \"roleArn\"\n    },\n    Kafka = new KafkaActionProperty {\n        ClientProperties = new Dictionary<string, string> {\n            { \"clientPropertiesKey\", \"clientProperties\" }\n        },\n        DestinationArn = \"destinationArn\",\n        Topic = \"topic\",\n\n        // the properties below are optional\n        Key = \"key\",\n        Partition = \"partition\"\n    },\n    Kinesis = new KinesisActionProperty {\n        RoleArn = \"roleArn\",\n        StreamName = \"streamName\",\n\n        // the properties below are optional\n        PartitionKey = \"partitionKey\"\n    },\n    Lambda = new LambdaActionProperty {\n        FunctionArn = \"functionArn\"\n    },\n    Location = new LocationActionProperty {\n        DeviceId = \"deviceId\",\n        Latitude = \"latitude\",\n        Longitude = \"longitude\",\n        RoleArn = \"roleArn\",\n        TrackerName = \"trackerName\",\n\n        // the properties below are optional\n        Timestamp = new Date()\n    },\n    OpenSearch = new OpenSearchActionProperty {\n        Endpoint = \"endpoint\",\n        Id = \"id\",\n        Index = \"index\",\n        RoleArn = \"roleArn\",\n        Type = \"type\"\n    },\n    Republish = new RepublishActionProperty {\n        RoleArn = \"roleArn\",\n        Topic = \"topic\",\n\n        // the properties below are optional\n        Headers = new RepublishActionHeadersProperty {\n            ContentType = \"contentType\",\n            CorrelationData = \"correlationData\",\n            MessageExpiry = \"messageExpiry\",\n            PayloadFormatIndicator = \"payloadFormatIndicator\",\n            ResponseTopic = \"responseTopic\",\n            UserProperties = new [] { new UserPropertyProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        Qos = 123\n    },\n    S3 = new S3ActionProperty {\n        BucketName = \"bucketName\",\n        Key = \"key\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        CannedAcl = \"cannedAcl\"\n    },\n    Sns = new SnsActionProperty {\n        RoleArn = \"roleArn\",\n        TargetArn = \"targetArn\",\n\n        // the properties below are optional\n        MessageFormat = \"messageFormat\"\n    },\n    Sqs = new SqsActionProperty {\n        QueueUrl = \"queueUrl\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        UseBase64 = false\n    },\n    StepFunctions = new StepFunctionsActionProperty {\n        RoleArn = \"roleArn\",\n        StateMachineName = \"stateMachineName\",\n\n        // the properties below are optional\n        ExecutionNamePrefix = \"executionNamePrefix\"\n    },\n    Timestream = new TimestreamActionProperty {\n        DatabaseName = \"databaseName\",\n        Dimensions = new [] { new TimestreamDimensionProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } },\n        RoleArn = \"roleArn\",\n        TableName = \"tableName\",\n\n        // the properties below are optional\n        Timestamp = new TimestreamTimestampProperty {\n            Unit = \"unit\",\n            Value = \"value\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nActionProperty actionProperty = ActionProperty.builder()\n        .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                .alarmName(\"alarmName\")\n                .roleArn(\"roleArn\")\n                .stateReason(\"stateReason\")\n                .stateValue(\"stateValue\")\n                .build())\n        .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                .logGroupName(\"logGroupName\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .batchMode(false)\n                .build())\n        .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                .metricName(\"metricName\")\n                .metricNamespace(\"metricNamespace\")\n                .metricUnit(\"metricUnit\")\n                .metricValue(\"metricValue\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .metricTimestamp(\"metricTimestamp\")\n                .build())\n        .dynamoDb(DynamoDBActionProperty.builder()\n                .hashKeyField(\"hashKeyField\")\n                .hashKeyValue(\"hashKeyValue\")\n                .roleArn(\"roleArn\")\n                .tableName(\"tableName\")\n\n                // the properties below are optional\n                .hashKeyType(\"hashKeyType\")\n                .payloadField(\"payloadField\")\n                .rangeKeyField(\"rangeKeyField\")\n                .rangeKeyType(\"rangeKeyType\")\n                .rangeKeyValue(\"rangeKeyValue\")\n                .build())\n        .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                .putItem(PutItemInputProperty.builder()\n                        .tableName(\"tableName\")\n                        .build())\n                .roleArn(\"roleArn\")\n                .build())\n        .elasticsearch(ElasticsearchActionProperty.builder()\n                .endpoint(\"endpoint\")\n                .id(\"id\")\n                .index(\"index\")\n                .roleArn(\"roleArn\")\n                .type(\"type\")\n                .build())\n        .firehose(FirehoseActionProperty.builder()\n                .deliveryStreamName(\"deliveryStreamName\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .batchMode(false)\n                .separator(\"separator\")\n                .build())\n        .http(HttpActionProperty.builder()\n                .url(\"url\")\n\n                // the properties below are optional\n                .auth(HttpAuthorizationProperty.builder()\n                        .sigv4(SigV4AuthorizationProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .serviceName(\"serviceName\")\n                                .signingRegion(\"signingRegion\")\n                                .build())\n                        .build())\n                .confirmationUrl(\"confirmationUrl\")\n                .headers(List.of(HttpActionHeaderProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .iotAnalytics(IotAnalyticsActionProperty.builder()\n                .channelName(\"channelName\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .batchMode(false)\n                .build())\n        .iotEvents(IotEventsActionProperty.builder()\n                .inputName(\"inputName\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .batchMode(false)\n                .messageId(\"messageId\")\n                .build())\n        .iotSiteWise(IotSiteWiseActionProperty.builder()\n                .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                        .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                .timestamp(AssetPropertyTimestampProperty.builder()\n                                        .timeInSeconds(\"timeInSeconds\")\n\n                                        // the properties below are optional\n                                        .offsetInNanos(\"offsetInNanos\")\n                                        .build())\n                                .value(AssetPropertyVariantProperty.builder()\n                                        .booleanValue(\"booleanValue\")\n                                        .doubleValue(\"doubleValue\")\n                                        .integerValue(\"integerValue\")\n                                        .stringValue(\"stringValue\")\n                                        .build())\n\n                                // the properties below are optional\n                                .quality(\"quality\")\n                                .build()))\n\n                        // the properties below are optional\n                        .assetId(\"assetId\")\n                        .entryId(\"entryId\")\n                        .propertyAlias(\"propertyAlias\")\n                        .propertyId(\"propertyId\")\n                        .build()))\n                .roleArn(\"roleArn\")\n                .build())\n        .kafka(KafkaActionProperty.builder()\n                .clientProperties(Map.of(\n                        \"clientPropertiesKey\", \"clientProperties\"))\n                .destinationArn(\"destinationArn\")\n                .topic(\"topic\")\n\n                // the properties below are optional\n                .key(\"key\")\n                .partition(\"partition\")\n                .build())\n        .kinesis(KinesisActionProperty.builder()\n                .roleArn(\"roleArn\")\n                .streamName(\"streamName\")\n\n                // the properties below are optional\n                .partitionKey(\"partitionKey\")\n                .build())\n        .lambda(LambdaActionProperty.builder()\n                .functionArn(\"functionArn\")\n                .build())\n        .location(LocationActionProperty.builder()\n                .deviceId(\"deviceId\")\n                .latitude(\"latitude\")\n                .longitude(\"longitude\")\n                .roleArn(\"roleArn\")\n                .trackerName(\"trackerName\")\n\n                // the properties below are optional\n                .timestamp(new Date())\n                .build())\n        .openSearch(OpenSearchActionProperty.builder()\n                .endpoint(\"endpoint\")\n                .id(\"id\")\n                .index(\"index\")\n                .roleArn(\"roleArn\")\n                .type(\"type\")\n                .build())\n        .republish(RepublishActionProperty.builder()\n                .roleArn(\"roleArn\")\n                .topic(\"topic\")\n\n                // the properties below are optional\n                .headers(RepublishActionHeadersProperty.builder()\n                        .contentType(\"contentType\")\n                        .correlationData(\"correlationData\")\n                        .messageExpiry(\"messageExpiry\")\n                        .payloadFormatIndicator(\"payloadFormatIndicator\")\n                        .responseTopic(\"responseTopic\")\n                        .userProperties(List.of(UserPropertyProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .qos(123)\n                .build())\n        .s3(S3ActionProperty.builder()\n                .bucketName(\"bucketName\")\n                .key(\"key\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .cannedAcl(\"cannedAcl\")\n                .build())\n        .sns(SnsActionProperty.builder()\n                .roleArn(\"roleArn\")\n                .targetArn(\"targetArn\")\n\n                // the properties below are optional\n                .messageFormat(\"messageFormat\")\n                .build())\n        .sqs(SqsActionProperty.builder()\n                .queueUrl(\"queueUrl\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .useBase64(false)\n                .build())\n        .stepFunctions(StepFunctionsActionProperty.builder()\n                .roleArn(\"roleArn\")\n                .stateMachineName(\"stateMachineName\")\n\n                // the properties below are optional\n                .executionNamePrefix(\"executionNamePrefix\")\n                .build())\n        .timestream(TimestreamActionProperty.builder()\n                .databaseName(\"databaseName\")\n                .dimensions(List.of(TimestreamDimensionProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .roleArn(\"roleArn\")\n                .tableName(\"tableName\")\n\n                // the properties below are optional\n                .timestamp(TimestreamTimestampProperty.builder()\n                        .unit(\"unit\")\n                        .value(\"value\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nactionProperty := &actionProperty{\n\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\talarmName: jsii.String(\"alarmName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tstateReason: jsii.String(\"stateReason\"),\n\t\tstateValue: jsii.String(\"stateValue\"),\n\t},\n\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbatchMode: jsii.Boolean(false),\n\t},\n\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t},\n\tdynamoDb: &dynamoDBActionProperty{\n\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t// the properties below are optional\n\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t},\n\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\tputItem: &putItemInputProperty{\n\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t},\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\telasticsearch: &elasticsearchActionProperty{\n\t\tendpoint: jsii.String(\"endpoint\"),\n\t\tid: jsii.String(\"id\"),\n\t\tindex: jsii.String(\"index\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttype: jsii.String(\"type\"),\n\t},\n\tfirehose: &firehoseActionProperty{\n\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbatchMode: jsii.Boolean(false),\n\t\tseparator: jsii.String(\"separator\"),\n\t},\n\thttp: &httpActionProperty{\n\t\turl: jsii.String(\"url\"),\n\n\t\t// the properties below are optional\n\t\tauth: &httpAuthorizationProperty{\n\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t},\n\t\t},\n\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\theaders: []interface{}{\n\t\t\t&httpActionHeaderProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\tchannelName: jsii.String(\"channelName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbatchMode: jsii.Boolean(false),\n\t},\n\tiotEvents: &iotEventsActionProperty{\n\t\tinputName: jsii.String(\"inputName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbatchMode: jsii.Boolean(false),\n\t\tmessageId: jsii.String(\"messageId\"),\n\t},\n\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t},\n\t\t},\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tkafka: &kafkaActionProperty{\n\t\tclientProperties: map[string]*string{\n\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t},\n\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\ttopic: jsii.String(\"topic\"),\n\n\t\t// the properties below are optional\n\t\tkey: jsii.String(\"key\"),\n\t\tpartition: jsii.String(\"partition\"),\n\t},\n\tkinesis: &kinesisActionProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t// the properties below are optional\n\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t},\n\tlambda: &lambdaActionProperty{\n\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t},\n\tlocation: &locationActionProperty{\n\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\tlatitude: jsii.String(\"latitude\"),\n\t\tlongitude: jsii.String(\"longitude\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t// the properties below are optional\n\t\ttimestamp: NewDate(),\n\t},\n\topenSearch: &openSearchActionProperty{\n\t\tendpoint: jsii.String(\"endpoint\"),\n\t\tid: jsii.String(\"id\"),\n\t\tindex: jsii.String(\"index\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttype: jsii.String(\"type\"),\n\t},\n\trepublish: &republishActionProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttopic: jsii.String(\"topic\"),\n\n\t\t// the properties below are optional\n\t\theaders: &republishActionHeadersProperty{\n\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\tuserProperties: []interface{}{\n\t\t\t\t&userPropertyProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tqos: jsii.Number(123),\n\t},\n\ts3: &s3ActionProperty{\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tkey: jsii.String(\"key\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t},\n\tsns: &snsActionProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t// the properties below are optional\n\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t},\n\tsqs: &sqsActionProperty{\n\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tuseBase64: jsii.Boolean(false),\n\t},\n\tstepFunctions: &stepFunctionsActionProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t// the properties below are optional\n\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t},\n\ttimestream: &timestreamActionProperty{\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\tdimensions: []interface{}{\n\t\t\t&timestreamDimensionProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t// the properties below are optional\n\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\tunit: jsii.String(\"unit\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst actionProperty: iot.CfnTopicRule.ActionProperty = {\n  cloudwatchAlarm: {\n    alarmName: 'alarmName',\n    roleArn: 'roleArn',\n    stateReason: 'stateReason',\n    stateValue: 'stateValue',\n  },\n  cloudwatchLogs: {\n    logGroupName: 'logGroupName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n  },\n  cloudwatchMetric: {\n    metricName: 'metricName',\n    metricNamespace: 'metricNamespace',\n    metricUnit: 'metricUnit',\n    metricValue: 'metricValue',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    metricTimestamp: 'metricTimestamp',\n  },\n  dynamoDb: {\n    hashKeyField: 'hashKeyField',\n    hashKeyValue: 'hashKeyValue',\n    roleArn: 'roleArn',\n    tableName: 'tableName',\n\n    // the properties below are optional\n    hashKeyType: 'hashKeyType',\n    payloadField: 'payloadField',\n    rangeKeyField: 'rangeKeyField',\n    rangeKeyType: 'rangeKeyType',\n    rangeKeyValue: 'rangeKeyValue',\n  },\n  dynamoDBv2: {\n    putItem: {\n      tableName: 'tableName',\n    },\n    roleArn: 'roleArn',\n  },\n  elasticsearch: {\n    endpoint: 'endpoint',\n    id: 'id',\n    index: 'index',\n    roleArn: 'roleArn',\n    type: 'type',\n  },\n  firehose: {\n    deliveryStreamName: 'deliveryStreamName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n    separator: 'separator',\n  },\n  http: {\n    url: 'url',\n\n    // the properties below are optional\n    auth: {\n      sigv4: {\n        roleArn: 'roleArn',\n        serviceName: 'serviceName',\n        signingRegion: 'signingRegion',\n      },\n    },\n    confirmationUrl: 'confirmationUrl',\n    headers: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  iotAnalytics: {\n    channelName: 'channelName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n  },\n  iotEvents: {\n    inputName: 'inputName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n    messageId: 'messageId',\n  },\n  iotSiteWise: {\n    putAssetPropertyValueEntries: [{\n      propertyValues: [{\n        timestamp: {\n          timeInSeconds: 'timeInSeconds',\n\n          // the properties below are optional\n          offsetInNanos: 'offsetInNanos',\n        },\n        value: {\n          booleanValue: 'booleanValue',\n          doubleValue: 'doubleValue',\n          integerValue: 'integerValue',\n          stringValue: 'stringValue',\n        },\n\n        // the properties below are optional\n        quality: 'quality',\n      }],\n\n      // the properties below are optional\n      assetId: 'assetId',\n      entryId: 'entryId',\n      propertyAlias: 'propertyAlias',\n      propertyId: 'propertyId',\n    }],\n    roleArn: 'roleArn',\n  },\n  kafka: {\n    clientProperties: {\n      clientPropertiesKey: 'clientProperties',\n    },\n    destinationArn: 'destinationArn',\n    topic: 'topic',\n\n    // the properties below are optional\n    key: 'key',\n    partition: 'partition',\n  },\n  kinesis: {\n    roleArn: 'roleArn',\n    streamName: 'streamName',\n\n    // the properties below are optional\n    partitionKey: 'partitionKey',\n  },\n  lambda: {\n    functionArn: 'functionArn',\n  },\n  location: {\n    deviceId: 'deviceId',\n    latitude: 'latitude',\n    longitude: 'longitude',\n    roleArn: 'roleArn',\n    trackerName: 'trackerName',\n\n    // the properties below are optional\n    timestamp: new Date(),\n  },\n  openSearch: {\n    endpoint: 'endpoint',\n    id: 'id',\n    index: 'index',\n    roleArn: 'roleArn',\n    type: 'type',\n  },\n  republish: {\n    roleArn: 'roleArn',\n    topic: 'topic',\n\n    // the properties below are optional\n    headers: {\n      contentType: 'contentType',\n      correlationData: 'correlationData',\n      messageExpiry: 'messageExpiry',\n      payloadFormatIndicator: 'payloadFormatIndicator',\n      responseTopic: 'responseTopic',\n      userProperties: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    qos: 123,\n  },\n  s3: {\n    bucketName: 'bucketName',\n    key: 'key',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    cannedAcl: 'cannedAcl',\n  },\n  sns: {\n    roleArn: 'roleArn',\n    targetArn: 'targetArn',\n\n    // the properties below are optional\n    messageFormat: 'messageFormat',\n  },\n  sqs: {\n    queueUrl: 'queueUrl',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    useBase64: false,\n  },\n  stepFunctions: {\n    roleArn: 'roleArn',\n    stateMachineName: 'stateMachineName',\n\n    // the properties below are optional\n    executionNamePrefix: 'executionNamePrefix',\n  },\n  timestream: {\n    databaseName: 'databaseName',\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    roleArn: 'roleArn',\n    tableName: 'tableName',\n\n    // the properties below are optional\n    timestamp: {\n      unit: 'unit',\n      value: 'value',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.ActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionProperty: iot.CfnTopicRule.ActionProperty = {\n  cloudwatchAlarm: {\n    alarmName: 'alarmName',\n    roleArn: 'roleArn',\n    stateReason: 'stateReason',\n    stateValue: 'stateValue',\n  },\n  cloudwatchLogs: {\n    logGroupName: 'logGroupName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n  },\n  cloudwatchMetric: {\n    metricName: 'metricName',\n    metricNamespace: 'metricNamespace',\n    metricUnit: 'metricUnit',\n    metricValue: 'metricValue',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    metricTimestamp: 'metricTimestamp',\n  },\n  dynamoDb: {\n    hashKeyField: 'hashKeyField',\n    hashKeyValue: 'hashKeyValue',\n    roleArn: 'roleArn',\n    tableName: 'tableName',\n\n    // the properties below are optional\n    hashKeyType: 'hashKeyType',\n    payloadField: 'payloadField',\n    rangeKeyField: 'rangeKeyField',\n    rangeKeyType: 'rangeKeyType',\n    rangeKeyValue: 'rangeKeyValue',\n  },\n  dynamoDBv2: {\n    putItem: {\n      tableName: 'tableName',\n    },\n    roleArn: 'roleArn',\n  },\n  elasticsearch: {\n    endpoint: 'endpoint',\n    id: 'id',\n    index: 'index',\n    roleArn: 'roleArn',\n    type: 'type',\n  },\n  firehose: {\n    deliveryStreamName: 'deliveryStreamName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n    separator: 'separator',\n  },\n  http: {\n    url: 'url',\n\n    // the properties below are optional\n    auth: {\n      sigv4: {\n        roleArn: 'roleArn',\n        serviceName: 'serviceName',\n        signingRegion: 'signingRegion',\n      },\n    },\n    confirmationUrl: 'confirmationUrl',\n    headers: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  iotAnalytics: {\n    channelName: 'channelName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n  },\n  iotEvents: {\n    inputName: 'inputName',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    batchMode: false,\n    messageId: 'messageId',\n  },\n  iotSiteWise: {\n    putAssetPropertyValueEntries: [{\n      propertyValues: [{\n        timestamp: {\n          timeInSeconds: 'timeInSeconds',\n\n          // the properties below are optional\n          offsetInNanos: 'offsetInNanos',\n        },\n        value: {\n          booleanValue: 'booleanValue',\n          doubleValue: 'doubleValue',\n          integerValue: 'integerValue',\n          stringValue: 'stringValue',\n        },\n\n        // the properties below are optional\n        quality: 'quality',\n      }],\n\n      // the properties below are optional\n      assetId: 'assetId',\n      entryId: 'entryId',\n      propertyAlias: 'propertyAlias',\n      propertyId: 'propertyId',\n    }],\n    roleArn: 'roleArn',\n  },\n  kafka: {\n    clientProperties: {\n      clientPropertiesKey: 'clientProperties',\n    },\n    destinationArn: 'destinationArn',\n    topic: 'topic',\n\n    // the properties below are optional\n    key: 'key',\n    partition: 'partition',\n  },\n  kinesis: {\n    roleArn: 'roleArn',\n    streamName: 'streamName',\n\n    // the properties below are optional\n    partitionKey: 'partitionKey',\n  },\n  lambda: {\n    functionArn: 'functionArn',\n  },\n  location: {\n    deviceId: 'deviceId',\n    latitude: 'latitude',\n    longitude: 'longitude',\n    roleArn: 'roleArn',\n    trackerName: 'trackerName',\n\n    // the properties below are optional\n    timestamp: new Date(),\n  },\n  openSearch: {\n    endpoint: 'endpoint',\n    id: 'id',\n    index: 'index',\n    roleArn: 'roleArn',\n    type: 'type',\n  },\n  republish: {\n    roleArn: 'roleArn',\n    topic: 'topic',\n\n    // the properties below are optional\n    headers: {\n      contentType: 'contentType',\n      correlationData: 'correlationData',\n      messageExpiry: 'messageExpiry',\n      payloadFormatIndicator: 'payloadFormatIndicator',\n      responseTopic: 'responseTopic',\n      userProperties: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    qos: 123,\n  },\n  s3: {\n    bucketName: 'bucketName',\n    key: 'key',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    cannedAcl: 'cannedAcl',\n  },\n  sns: {\n    roleArn: 'roleArn',\n    targetArn: 'targetArn',\n\n    // the properties below are optional\n    messageFormat: 'messageFormat',\n  },\n  sqs: {\n    queueUrl: 'queueUrl',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    useBase64: false,\n  },\n  stepFunctions: {\n    roleArn: 'roleArn',\n    stateMachineName: 'stateMachineName',\n\n    // the properties below are optional\n    executionNamePrefix: 'executionNamePrefix',\n  },\n  timestream: {\n    databaseName: 'databaseName',\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    roleArn: 'roleArn',\n    tableName: 'tableName',\n\n    // the properties below are optional\n    timestamp: {\n      unit: 'unit',\n      value: 'value',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 103,
        "75": 150,
        "91": 5,
        "153": 2,
        "169": 1,
        "192": 5,
        "193": 36,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 144,
        "290": 1
      },
      "fqnsFingerprint": "299dec1ac50c5f811c16d11d1a4481b104193616c43b6e53c6eed15321aec7e7"
    },
    "d457c88177c39adaf01a21caff360caeac777a8f3347b8d36bedbd045037300d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nasset_property_timestamp_property = iot.CfnTopicRule.AssetPropertyTimestampProperty(\n    time_in_seconds=\"timeInSeconds\",\n\n    # the properties below are optional\n    offset_in_nanos=\"offsetInNanos\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAssetPropertyTimestampProperty assetPropertyTimestampProperty = new AssetPropertyTimestampProperty {\n    TimeInSeconds = \"timeInSeconds\",\n\n    // the properties below are optional\n    OffsetInNanos = \"offsetInNanos\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAssetPropertyTimestampProperty assetPropertyTimestampProperty = AssetPropertyTimestampProperty.builder()\n        .timeInSeconds(\"timeInSeconds\")\n\n        // the properties below are optional\n        .offsetInNanos(\"offsetInNanos\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nassetPropertyTimestampProperty := &assetPropertyTimestampProperty{\n\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t// the properties below are optional\n\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst assetPropertyTimestampProperty: iot.CfnTopicRule.AssetPropertyTimestampProperty = {\n  timeInSeconds: 'timeInSeconds',\n\n  // the properties below are optional\n  offsetInNanos: 'offsetInNanos',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.AssetPropertyTimestampProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.AssetPropertyTimestampProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assetPropertyTimestampProperty: iot.CfnTopicRule.AssetPropertyTimestampProperty = {\n  timeInSeconds: 'timeInSeconds',\n\n  // the properties below are optional\n  offsetInNanos: 'offsetInNanos',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1fb665626f7ea985eef73e60c3a20ca351a6cea363d43b0aad70857b9d8313cb"
    },
    "9cba0838e9d962d02aa148fc32b02fbbec848e23a682bbb2fc7b802c0e04b7c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nasset_property_value_property = iot.CfnTopicRule.AssetPropertyValueProperty(\n    timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n        time_in_seconds=\"timeInSeconds\",\n\n        # the properties below are optional\n        offset_in_nanos=\"offsetInNanos\"\n    ),\n    value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n        boolean_value=\"booleanValue\",\n        double_value=\"doubleValue\",\n        integer_value=\"integerValue\",\n        string_value=\"stringValue\"\n    ),\n\n    # the properties below are optional\n    quality=\"quality\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAssetPropertyValueProperty assetPropertyValueProperty = new AssetPropertyValueProperty {\n    Timestamp = new AssetPropertyTimestampProperty {\n        TimeInSeconds = \"timeInSeconds\",\n\n        // the properties below are optional\n        OffsetInNanos = \"offsetInNanos\"\n    },\n    Value = new AssetPropertyVariantProperty {\n        BooleanValue = \"booleanValue\",\n        DoubleValue = \"doubleValue\",\n        IntegerValue = \"integerValue\",\n        StringValue = \"stringValue\"\n    },\n\n    // the properties below are optional\n    Quality = \"quality\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAssetPropertyValueProperty assetPropertyValueProperty = AssetPropertyValueProperty.builder()\n        .timestamp(AssetPropertyTimestampProperty.builder()\n                .timeInSeconds(\"timeInSeconds\")\n\n                // the properties below are optional\n                .offsetInNanos(\"offsetInNanos\")\n                .build())\n        .value(AssetPropertyVariantProperty.builder()\n                .booleanValue(\"booleanValue\")\n                .doubleValue(\"doubleValue\")\n                .integerValue(\"integerValue\")\n                .stringValue(\"stringValue\")\n                .build())\n\n        // the properties below are optional\n        .quality(\"quality\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nassetPropertyValueProperty := &assetPropertyValueProperty{\n\ttimestamp: &assetPropertyTimestampProperty{\n\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t// the properties below are optional\n\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t},\n\tvalue: &assetPropertyVariantProperty{\n\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\tstringValue: jsii.String(\"stringValue\"),\n\t},\n\n\t// the properties below are optional\n\tquality: jsii.String(\"quality\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst assetPropertyValueProperty: iot.CfnTopicRule.AssetPropertyValueProperty = {\n  timestamp: {\n    timeInSeconds: 'timeInSeconds',\n\n    // the properties below are optional\n    offsetInNanos: 'offsetInNanos',\n  },\n  value: {\n    booleanValue: 'booleanValue',\n    doubleValue: 'doubleValue',\n    integerValue: 'integerValue',\n    stringValue: 'stringValue',\n  },\n\n  // the properties below are optional\n  quality: 'quality',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.AssetPropertyValueProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.AssetPropertyValueProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assetPropertyValueProperty: iot.CfnTopicRule.AssetPropertyValueProperty = {\n  timestamp: {\n    timeInSeconds: 'timeInSeconds',\n\n    // the properties below are optional\n    offsetInNanos: 'offsetInNanos',\n  },\n  value: {\n    booleanValue: 'booleanValue',\n    doubleValue: 'doubleValue',\n    integerValue: 'integerValue',\n    stringValue: 'stringValue',\n  },\n\n  // the properties below are optional\n  quality: 'quality',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "56bb9a1380539944a059cc44dac7bdfed04b48f0c76d67d802d42922a99f4e34"
    },
    "61bfddd44d28927e5093f55d6cd13ff8141ae4074a60a91444a7ddcc60b5a0d5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nasset_property_variant_property = iot.CfnTopicRule.AssetPropertyVariantProperty(\n    boolean_value=\"booleanValue\",\n    double_value=\"doubleValue\",\n    integer_value=\"integerValue\",\n    string_value=\"stringValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nAssetPropertyVariantProperty assetPropertyVariantProperty = new AssetPropertyVariantProperty {\n    BooleanValue = \"booleanValue\",\n    DoubleValue = \"doubleValue\",\n    IntegerValue = \"integerValue\",\n    StringValue = \"stringValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nAssetPropertyVariantProperty assetPropertyVariantProperty = AssetPropertyVariantProperty.builder()\n        .booleanValue(\"booleanValue\")\n        .doubleValue(\"doubleValue\")\n        .integerValue(\"integerValue\")\n        .stringValue(\"stringValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nassetPropertyVariantProperty := &assetPropertyVariantProperty{\n\tbooleanValue: jsii.String(\"booleanValue\"),\n\tdoubleValue: jsii.String(\"doubleValue\"),\n\tintegerValue: jsii.String(\"integerValue\"),\n\tstringValue: jsii.String(\"stringValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst assetPropertyVariantProperty: iot.CfnTopicRule.AssetPropertyVariantProperty = {\n  booleanValue: 'booleanValue',\n  doubleValue: 'doubleValue',\n  integerValue: 'integerValue',\n  stringValue: 'stringValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.AssetPropertyVariantProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.AssetPropertyVariantProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assetPropertyVariantProperty: iot.CfnTopicRule.AssetPropertyVariantProperty = {\n  booleanValue: 'booleanValue',\n  doubleValue: 'doubleValue',\n  integerValue: 'integerValue',\n  stringValue: 'stringValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "90c750b99bd459e8eef4dff1279da7b49cb56daa7159b146740776e2f52e66a2"
    },
    "27b9c6a2e5394065791c5c5a1e9c64e197935ac9889f9030e79257fc6d83c3ec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncloudwatch_alarm_action_property = iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n    alarm_name=\"alarmName\",\n    role_arn=\"roleArn\",\n    state_reason=\"stateReason\",\n    state_value=\"stateValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCloudwatchAlarmActionProperty cloudwatchAlarmActionProperty = new CloudwatchAlarmActionProperty {\n    AlarmName = \"alarmName\",\n    RoleArn = \"roleArn\",\n    StateReason = \"stateReason\",\n    StateValue = \"stateValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCloudwatchAlarmActionProperty cloudwatchAlarmActionProperty = CloudwatchAlarmActionProperty.builder()\n        .alarmName(\"alarmName\")\n        .roleArn(\"roleArn\")\n        .stateReason(\"stateReason\")\n        .stateValue(\"stateValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncloudwatchAlarmActionProperty := &cloudwatchAlarmActionProperty{\n\talarmName: jsii.String(\"alarmName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\tstateReason: jsii.String(\"stateReason\"),\n\tstateValue: jsii.String(\"stateValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cloudwatchAlarmActionProperty: iot.CfnTopicRule.CloudwatchAlarmActionProperty = {\n  alarmName: 'alarmName',\n  roleArn: 'roleArn',\n  stateReason: 'stateReason',\n  stateValue: 'stateValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.CloudwatchAlarmActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.CloudwatchAlarmActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudwatchAlarmActionProperty: iot.CfnTopicRule.CloudwatchAlarmActionProperty = {\n  alarmName: 'alarmName',\n  roleArn: 'roleArn',\n  stateReason: 'stateReason',\n  stateValue: 'stateValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "21f9c0d19e9ab59041cb721fcf2ecd53e059d92cd027552d3d0c2b191a08a2a4"
    },
    "3c0b1358cd66077f74fbceb56feff02525c54183be47a5c4a78130a04b1a0575": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncloudwatch_logs_action_property = iot.CfnTopicRule.CloudwatchLogsActionProperty(\n    log_group_name=\"logGroupName\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    batch_mode=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCloudwatchLogsActionProperty cloudwatchLogsActionProperty = new CloudwatchLogsActionProperty {\n    LogGroupName = \"logGroupName\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BatchMode = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCloudwatchLogsActionProperty cloudwatchLogsActionProperty = CloudwatchLogsActionProperty.builder()\n        .logGroupName(\"logGroupName\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .batchMode(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncloudwatchLogsActionProperty := &cloudwatchLogsActionProperty{\n\tlogGroupName: jsii.String(\"logGroupName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbatchMode: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cloudwatchLogsActionProperty: iot.CfnTopicRule.CloudwatchLogsActionProperty = {\n  logGroupName: 'logGroupName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.CloudwatchLogsActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.CloudwatchLogsActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudwatchLogsActionProperty: iot.CfnTopicRule.CloudwatchLogsActionProperty = {\n  logGroupName: 'logGroupName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "f20a1b57087f9973b01893d36820b7032d6dc78a9cf9a98547acebf6c25ea436"
    },
    "e96f1921d1e93bc62122e5937a05a8e0c5e2ab487250b112dab9752f652abf80": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncloudwatch_metric_action_property = iot.CfnTopicRule.CloudwatchMetricActionProperty(\n    metric_name=\"metricName\",\n    metric_namespace=\"metricNamespace\",\n    metric_unit=\"metricUnit\",\n    metric_value=\"metricValue\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    metric_timestamp=\"metricTimestamp\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCloudwatchMetricActionProperty cloudwatchMetricActionProperty = new CloudwatchMetricActionProperty {\n    MetricName = \"metricName\",\n    MetricNamespace = \"metricNamespace\",\n    MetricUnit = \"metricUnit\",\n    MetricValue = \"metricValue\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    MetricTimestamp = \"metricTimestamp\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCloudwatchMetricActionProperty cloudwatchMetricActionProperty = CloudwatchMetricActionProperty.builder()\n        .metricName(\"metricName\")\n        .metricNamespace(\"metricNamespace\")\n        .metricUnit(\"metricUnit\")\n        .metricValue(\"metricValue\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .metricTimestamp(\"metricTimestamp\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncloudwatchMetricActionProperty := &cloudwatchMetricActionProperty{\n\tmetricName: jsii.String(\"metricName\"),\n\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\tmetricUnit: jsii.String(\"metricUnit\"),\n\tmetricValue: jsii.String(\"metricValue\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cloudwatchMetricActionProperty: iot.CfnTopicRule.CloudwatchMetricActionProperty = {\n  metricName: 'metricName',\n  metricNamespace: 'metricNamespace',\n  metricUnit: 'metricUnit',\n  metricValue: 'metricValue',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  metricTimestamp: 'metricTimestamp',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.CloudwatchMetricActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.CloudwatchMetricActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudwatchMetricActionProperty: iot.CfnTopicRule.CloudwatchMetricActionProperty = {\n  metricName: 'metricName',\n  metricNamespace: 'metricNamespace',\n  metricUnit: 'metricUnit',\n  metricValue: 'metricValue',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  metricTimestamp: 'metricTimestamp',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "b8790bc420ec42cecf10873fd02d8da6d42dfae43f5a2ded133d62c4b3e6bebb"
    },
    "4484f52651035d63ca52fbc48b012b732e2e65f08286cad18ca2451fbf87758c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ndynamo_dBAction_property = iot.CfnTopicRule.DynamoDBActionProperty(\n    hash_key_field=\"hashKeyField\",\n    hash_key_value=\"hashKeyValue\",\n    role_arn=\"roleArn\",\n    table_name=\"tableName\",\n\n    # the properties below are optional\n    hash_key_type=\"hashKeyType\",\n    payload_field=\"payloadField\",\n    range_key_field=\"rangeKeyField\",\n    range_key_type=\"rangeKeyType\",\n    range_key_value=\"rangeKeyValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nDynamoDBActionProperty dynamoDBActionProperty = new DynamoDBActionProperty {\n    HashKeyField = \"hashKeyField\",\n    HashKeyValue = \"hashKeyValue\",\n    RoleArn = \"roleArn\",\n    TableName = \"tableName\",\n\n    // the properties below are optional\n    HashKeyType = \"hashKeyType\",\n    PayloadField = \"payloadField\",\n    RangeKeyField = \"rangeKeyField\",\n    RangeKeyType = \"rangeKeyType\",\n    RangeKeyValue = \"rangeKeyValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nDynamoDBActionProperty dynamoDBActionProperty = DynamoDBActionProperty.builder()\n        .hashKeyField(\"hashKeyField\")\n        .hashKeyValue(\"hashKeyValue\")\n        .roleArn(\"roleArn\")\n        .tableName(\"tableName\")\n\n        // the properties below are optional\n        .hashKeyType(\"hashKeyType\")\n        .payloadField(\"payloadField\")\n        .rangeKeyField(\"rangeKeyField\")\n        .rangeKeyType(\"rangeKeyType\")\n        .rangeKeyValue(\"rangeKeyValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ndynamoDBActionProperty := &dynamoDBActionProperty{\n\thashKeyField: jsii.String(\"hashKeyField\"),\n\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ttableName: jsii.String(\"tableName\"),\n\n\t// the properties below are optional\n\thashKeyType: jsii.String(\"hashKeyType\"),\n\tpayloadField: jsii.String(\"payloadField\"),\n\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst dynamoDBActionProperty: iot.CfnTopicRule.DynamoDBActionProperty = {\n  hashKeyField: 'hashKeyField',\n  hashKeyValue: 'hashKeyValue',\n  roleArn: 'roleArn',\n  tableName: 'tableName',\n\n  // the properties below are optional\n  hashKeyType: 'hashKeyType',\n  payloadField: 'payloadField',\n  rangeKeyField: 'rangeKeyField',\n  rangeKeyType: 'rangeKeyType',\n  rangeKeyValue: 'rangeKeyValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.DynamoDBActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.DynamoDBActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dynamoDBActionProperty: iot.CfnTopicRule.DynamoDBActionProperty = {\n  hashKeyField: 'hashKeyField',\n  hashKeyValue: 'hashKeyValue',\n  roleArn: 'roleArn',\n  tableName: 'tableName',\n\n  // the properties below are optional\n  hashKeyType: 'hashKeyType',\n  payloadField: 'payloadField',\n  rangeKeyField: 'rangeKeyField',\n  rangeKeyType: 'rangeKeyType',\n  rangeKeyValue: 'rangeKeyValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 14,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "635c8080443ec26fd3e34638f61cfd2a0a72ac8f99669f516f7c2b0ff4a616c2"
    },
    "98298b17d1ef48d2aa8aa9f0f701b90ebf8f29cafb685bb6e9df6036f9fc89c1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ndynamo_dBv2_action_property = iot.CfnTopicRule.DynamoDBv2ActionProperty(\n    put_item=iot.CfnTopicRule.PutItemInputProperty(\n        table_name=\"tableName\"\n    ),\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nDynamoDBv2ActionProperty dynamoDBv2ActionProperty = new DynamoDBv2ActionProperty {\n    PutItem = new PutItemInputProperty {\n        TableName = \"tableName\"\n    },\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nDynamoDBv2ActionProperty dynamoDBv2ActionProperty = DynamoDBv2ActionProperty.builder()\n        .putItem(PutItemInputProperty.builder()\n                .tableName(\"tableName\")\n                .build())\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ndynamoDBv2ActionProperty := &dynamoDBv2ActionProperty{\n\tputItem: &putItemInputProperty{\n\t\ttableName: jsii.String(\"tableName\"),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst dynamoDBv2ActionProperty: iot.CfnTopicRule.DynamoDBv2ActionProperty = {\n  putItem: {\n    tableName: 'tableName',\n  },\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.DynamoDBv2ActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.DynamoDBv2ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dynamoDBv2ActionProperty: iot.CfnTopicRule.DynamoDBv2ActionProperty = {\n  putItem: {\n    tableName: 'tableName',\n  },\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "1968cbcb8aefeb5128396964715a9bb851f93bbc65f8b0dae56ed307957c39b8"
    },
    "3ea5ca6a64643108caa4bd3009c61333cd62bf29018585a615e8da9806b71b3b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nelasticsearch_action_property = iot.CfnTopicRule.ElasticsearchActionProperty(\n    endpoint=\"endpoint\",\n    id=\"id\",\n    index=\"index\",\n    role_arn=\"roleArn\",\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nElasticsearchActionProperty elasticsearchActionProperty = new ElasticsearchActionProperty {\n    Endpoint = \"endpoint\",\n    Id = \"id\",\n    Index = \"index\",\n    RoleArn = \"roleArn\",\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nElasticsearchActionProperty elasticsearchActionProperty = ElasticsearchActionProperty.builder()\n        .endpoint(\"endpoint\")\n        .id(\"id\")\n        .index(\"index\")\n        .roleArn(\"roleArn\")\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nelasticsearchActionProperty := &elasticsearchActionProperty{\n\tendpoint: jsii.String(\"endpoint\"),\n\tid: jsii.String(\"id\"),\n\tindex: jsii.String(\"index\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst elasticsearchActionProperty: iot.CfnTopicRule.ElasticsearchActionProperty = {\n  endpoint: 'endpoint',\n  id: 'id',\n  index: 'index',\n  roleArn: 'roleArn',\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.ElasticsearchActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.ElasticsearchActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elasticsearchActionProperty: iot.CfnTopicRule.ElasticsearchActionProperty = {\n  endpoint: 'endpoint',\n  id: 'id',\n  index: 'index',\n  roleArn: 'roleArn',\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "7a2093cf52fb23c8664903dfd98d8294e7fcd73da9fd4d9183cb28d9879d83e1"
    },
    "82a7c1c404a789befa0ddc3dd4449f39377028200ebf913bf8ffd7be7541cc91": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nfirehose_action_property = iot.CfnTopicRule.FirehoseActionProperty(\n    delivery_stream_name=\"deliveryStreamName\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    batch_mode=False,\n    separator=\"separator\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nFirehoseActionProperty firehoseActionProperty = new FirehoseActionProperty {\n    DeliveryStreamName = \"deliveryStreamName\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BatchMode = false,\n    Separator = \"separator\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nFirehoseActionProperty firehoseActionProperty = FirehoseActionProperty.builder()\n        .deliveryStreamName(\"deliveryStreamName\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .batchMode(false)\n        .separator(\"separator\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nfirehoseActionProperty := &firehoseActionProperty{\n\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbatchMode: jsii.Boolean(false),\n\tseparator: jsii.String(\"separator\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst firehoseActionProperty: iot.CfnTopicRule.FirehoseActionProperty = {\n  deliveryStreamName: 'deliveryStreamName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n  separator: 'separator',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.FirehoseActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.FirehoseActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst firehoseActionProperty: iot.CfnTopicRule.FirehoseActionProperty = {\n  deliveryStreamName: 'deliveryStreamName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n  separator: 'separator',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "6b754687d138c6f3ee1aa310bcb3a771029cf61007091e9559f70b0a0255c0dd"
    },
    "a012e8e89f99dff8db1b5f64a2150d0b29b38618bc95567caa7c97b27d3ea4f5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nhttp_action_header_property = iot.CfnTopicRule.HttpActionHeaderProperty(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nHttpActionHeaderProperty httpActionHeaderProperty = new HttpActionHeaderProperty {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nHttpActionHeaderProperty httpActionHeaderProperty = HttpActionHeaderProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nhttpActionHeaderProperty := &httpActionHeaderProperty{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst httpActionHeaderProperty: iot.CfnTopicRule.HttpActionHeaderProperty = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.HttpActionHeaderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.HttpActionHeaderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpActionHeaderProperty: iot.CfnTopicRule.HttpActionHeaderProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "cfdd11310329bf282fc2b3f36a96bf1f0de772de0f1adf638c49cc2764665a32"
    },
    "c4e212bd0805dd5e0a43b8730df5e3f4779bb2fef705361a445a4f2e610cfd69": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nhttp_action_property = iot.CfnTopicRule.HttpActionProperty(\n    url=\"url\",\n\n    # the properties below are optional\n    auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n        sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n            role_arn=\"roleArn\",\n            service_name=\"serviceName\",\n            signing_region=\"signingRegion\"\n        )\n    ),\n    confirmation_url=\"confirmationUrl\",\n    headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nHttpActionProperty httpActionProperty = new HttpActionProperty {\n    Url = \"url\",\n\n    // the properties below are optional\n    Auth = new HttpAuthorizationProperty {\n        Sigv4 = new SigV4AuthorizationProperty {\n            RoleArn = \"roleArn\",\n            ServiceName = \"serviceName\",\n            SigningRegion = \"signingRegion\"\n        }\n    },\n    ConfirmationUrl = \"confirmationUrl\",\n    Headers = new [] { new HttpActionHeaderProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nHttpActionProperty httpActionProperty = HttpActionProperty.builder()\n        .url(\"url\")\n\n        // the properties below are optional\n        .auth(HttpAuthorizationProperty.builder()\n                .sigv4(SigV4AuthorizationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .serviceName(\"serviceName\")\n                        .signingRegion(\"signingRegion\")\n                        .build())\n                .build())\n        .confirmationUrl(\"confirmationUrl\")\n        .headers(List.of(HttpActionHeaderProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nhttpActionProperty := &httpActionProperty{\n\turl: jsii.String(\"url\"),\n\n\t// the properties below are optional\n\tauth: &httpAuthorizationProperty{\n\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t},\n\t},\n\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\theaders: []interface{}{\n\t\t&httpActionHeaderProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst httpActionProperty: iot.CfnTopicRule.HttpActionProperty = {\n  url: 'url',\n\n  // the properties below are optional\n  auth: {\n    sigv4: {\n      roleArn: 'roleArn',\n      serviceName: 'serviceName',\n      signingRegion: 'signingRegion',\n    },\n  },\n  confirmationUrl: 'confirmationUrl',\n  headers: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.HttpActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.HttpActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpActionProperty: iot.CfnTopicRule.HttpActionProperty = {\n  url: 'url',\n\n  // the properties below are optional\n  auth: {\n    sigv4: {\n      roleArn: 'roleArn',\n      serviceName: 'serviceName',\n      signingRegion: 'signingRegion',\n    },\n  },\n  confirmationUrl: 'confirmationUrl',\n  headers: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 15,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "5a084a4cf7757e738171ab5a0bf9c6fe5406b140f7952c32da0f8783f4ecb096"
    },
    "f3a70abcf4e4451a2cb01a0d2840dfe751963e78b6daf8caf40e52755f6dccd4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nhttp_authorization_property = iot.CfnTopicRule.HttpAuthorizationProperty(\n    sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n        role_arn=\"roleArn\",\n        service_name=\"serviceName\",\n        signing_region=\"signingRegion\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nHttpAuthorizationProperty httpAuthorizationProperty = new HttpAuthorizationProperty {\n    Sigv4 = new SigV4AuthorizationProperty {\n        RoleArn = \"roleArn\",\n        ServiceName = \"serviceName\",\n        SigningRegion = \"signingRegion\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nHttpAuthorizationProperty httpAuthorizationProperty = HttpAuthorizationProperty.builder()\n        .sigv4(SigV4AuthorizationProperty.builder()\n                .roleArn(\"roleArn\")\n                .serviceName(\"serviceName\")\n                .signingRegion(\"signingRegion\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nhttpAuthorizationProperty := &httpAuthorizationProperty{\n\tsigv4: &sigV4AuthorizationProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tserviceName: jsii.String(\"serviceName\"),\n\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst httpAuthorizationProperty: iot.CfnTopicRule.HttpAuthorizationProperty = {\n  sigv4: {\n    roleArn: 'roleArn',\n    serviceName: 'serviceName',\n    signingRegion: 'signingRegion',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.HttpAuthorizationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.HttpAuthorizationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpAuthorizationProperty: iot.CfnTopicRule.HttpAuthorizationProperty = {\n  sigv4: {\n    roleArn: 'roleArn',\n    serviceName: 'serviceName',\n    signingRegion: 'signingRegion',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "15eea12910963c5b79b13985d875cbe93f9e0d5e18fe07a052579f884632a772"
    },
    "317b7ad68cd42089ce99ad74dd3862253c5a63719fb273bffcf6d3907a375b7b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\niot_analytics_action_property = iot.CfnTopicRule.IotAnalyticsActionProperty(\n    channel_name=\"channelName\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    batch_mode=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nIotAnalyticsActionProperty iotAnalyticsActionProperty = new IotAnalyticsActionProperty {\n    ChannelName = \"channelName\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BatchMode = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nIotAnalyticsActionProperty iotAnalyticsActionProperty = IotAnalyticsActionProperty.builder()\n        .channelName(\"channelName\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .batchMode(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\niotAnalyticsActionProperty := &iotAnalyticsActionProperty{\n\tchannelName: jsii.String(\"channelName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbatchMode: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst iotAnalyticsActionProperty: iot.CfnTopicRule.IotAnalyticsActionProperty = {\n  channelName: 'channelName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.IotAnalyticsActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.IotAnalyticsActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iotAnalyticsActionProperty: iot.CfnTopicRule.IotAnalyticsActionProperty = {\n  channelName: 'channelName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "2f0d1737ddec19e641b7bef14c6ca5c287103ab6529321cabeb108ef17e8500e"
    },
    "2899535b7b09e06261055e6da8892f72c808b0abca96d6c4ad49a0cd65600c8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\niot_events_action_property = iot.CfnTopicRule.IotEventsActionProperty(\n    input_name=\"inputName\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    batch_mode=False,\n    message_id=\"messageId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nIotEventsActionProperty iotEventsActionProperty = new IotEventsActionProperty {\n    InputName = \"inputName\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BatchMode = false,\n    MessageId = \"messageId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nIotEventsActionProperty iotEventsActionProperty = IotEventsActionProperty.builder()\n        .inputName(\"inputName\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .batchMode(false)\n        .messageId(\"messageId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\niotEventsActionProperty := &iotEventsActionProperty{\n\tinputName: jsii.String(\"inputName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbatchMode: jsii.Boolean(false),\n\tmessageId: jsii.String(\"messageId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst iotEventsActionProperty: iot.CfnTopicRule.IotEventsActionProperty = {\n  inputName: 'inputName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n  messageId: 'messageId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.IotEventsActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.IotEventsActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iotEventsActionProperty: iot.CfnTopicRule.IotEventsActionProperty = {\n  inputName: 'inputName',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  batchMode: false,\n  messageId: 'messageId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "247cc11499247d842bacef7b51000e4fe91a0c387479ec55bfdc96320d5f52ee"
    },
    "97520fb968335e34687a07d277ca6a30ce03801dd05700304e7998aa2cc0569b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\niot_site_wise_action_property = iot.CfnTopicRule.IotSiteWiseActionProperty(\n    put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n        property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n            timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                time_in_seconds=\"timeInSeconds\",\n\n                # the properties below are optional\n                offset_in_nanos=\"offsetInNanos\"\n            ),\n            value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                boolean_value=\"booleanValue\",\n                double_value=\"doubleValue\",\n                integer_value=\"integerValue\",\n                string_value=\"stringValue\"\n            ),\n\n            # the properties below are optional\n            quality=\"quality\"\n        )],\n\n        # the properties below are optional\n        asset_id=\"assetId\",\n        entry_id=\"entryId\",\n        property_alias=\"propertyAlias\",\n        property_id=\"propertyId\"\n    )],\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nIotSiteWiseActionProperty iotSiteWiseActionProperty = new IotSiteWiseActionProperty {\n    PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n        PropertyValues = new [] { new AssetPropertyValueProperty {\n            Timestamp = new AssetPropertyTimestampProperty {\n                TimeInSeconds = \"timeInSeconds\",\n\n                // the properties below are optional\n                OffsetInNanos = \"offsetInNanos\"\n            },\n            Value = new AssetPropertyVariantProperty {\n                BooleanValue = \"booleanValue\",\n                DoubleValue = \"doubleValue\",\n                IntegerValue = \"integerValue\",\n                StringValue = \"stringValue\"\n            },\n\n            // the properties below are optional\n            Quality = \"quality\"\n        } },\n\n        // the properties below are optional\n        AssetId = \"assetId\",\n        EntryId = \"entryId\",\n        PropertyAlias = \"propertyAlias\",\n        PropertyId = \"propertyId\"\n    } },\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nIotSiteWiseActionProperty iotSiteWiseActionProperty = IotSiteWiseActionProperty.builder()\n        .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                        .timestamp(AssetPropertyTimestampProperty.builder()\n                                .timeInSeconds(\"timeInSeconds\")\n\n                                // the properties below are optional\n                                .offsetInNanos(\"offsetInNanos\")\n                                .build())\n                        .value(AssetPropertyVariantProperty.builder()\n                                .booleanValue(\"booleanValue\")\n                                .doubleValue(\"doubleValue\")\n                                .integerValue(\"integerValue\")\n                                .stringValue(\"stringValue\")\n                                .build())\n\n                        // the properties below are optional\n                        .quality(\"quality\")\n                        .build()))\n\n                // the properties below are optional\n                .assetId(\"assetId\")\n                .entryId(\"entryId\")\n                .propertyAlias(\"propertyAlias\")\n                .propertyId(\"propertyId\")\n                .build()))\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\niotSiteWiseActionProperty := &iotSiteWiseActionProperty{\n\tputAssetPropertyValueEntries: []interface{}{\n\t\t&putAssetPropertyValueEntryProperty{\n\t\t\tpropertyValues: []interface{}{\n\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t},\n\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst iotSiteWiseActionProperty: iot.CfnTopicRule.IotSiteWiseActionProperty = {\n  putAssetPropertyValueEntries: [{\n    propertyValues: [{\n      timestamp: {\n        timeInSeconds: 'timeInSeconds',\n\n        // the properties below are optional\n        offsetInNanos: 'offsetInNanos',\n      },\n      value: {\n        booleanValue: 'booleanValue',\n        doubleValue: 'doubleValue',\n        integerValue: 'integerValue',\n        stringValue: 'stringValue',\n      },\n\n      // the properties below are optional\n      quality: 'quality',\n    }],\n\n    // the properties below are optional\n    assetId: 'assetId',\n    entryId: 'entryId',\n    propertyAlias: 'propertyAlias',\n    propertyId: 'propertyId',\n  }],\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.IotSiteWiseActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.IotSiteWiseActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iotSiteWiseActionProperty: iot.CfnTopicRule.IotSiteWiseActionProperty = {\n  putAssetPropertyValueEntries: [{\n    propertyValues: [{\n      timestamp: {\n        timeInSeconds: 'timeInSeconds',\n\n        // the properties below are optional\n        offsetInNanos: 'offsetInNanos',\n      },\n      value: {\n        booleanValue: 'booleanValue',\n        doubleValue: 'doubleValue',\n        integerValue: 'integerValue',\n        stringValue: 'stringValue',\n      },\n\n      // the properties below are optional\n      quality: 'quality',\n    }],\n\n    // the properties below are optional\n    assetId: 'assetId',\n    entryId: 'entryId',\n    propertyAlias: 'propertyAlias',\n    propertyId: 'propertyId',\n  }],\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 21,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 16,
        "290": 1
      },
      "fqnsFingerprint": "af1d52a9fada6c696a57394fb3a0fc767653c11a73c14f61661606fc2023ace7"
    },
    "4428579142e84a33766ba2606938c363b51f437a1186b7e258967382208e45c6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nkafka_action_property = iot.CfnTopicRule.KafkaActionProperty(\n    client_properties={\n        \"client_properties_key\": \"clientProperties\"\n    },\n    destination_arn=\"destinationArn\",\n    topic=\"topic\",\n\n    # the properties below are optional\n    key=\"key\",\n    partition=\"partition\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nKafkaActionProperty kafkaActionProperty = new KafkaActionProperty {\n    ClientProperties = new Dictionary<string, string> {\n        { \"clientPropertiesKey\", \"clientProperties\" }\n    },\n    DestinationArn = \"destinationArn\",\n    Topic = \"topic\",\n\n    // the properties below are optional\n    Key = \"key\",\n    Partition = \"partition\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nKafkaActionProperty kafkaActionProperty = KafkaActionProperty.builder()\n        .clientProperties(Map.of(\n                \"clientPropertiesKey\", \"clientProperties\"))\n        .destinationArn(\"destinationArn\")\n        .topic(\"topic\")\n\n        // the properties below are optional\n        .key(\"key\")\n        .partition(\"partition\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nkafkaActionProperty := &kafkaActionProperty{\n\tclientProperties: map[string]*string{\n\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t},\n\tdestinationArn: jsii.String(\"destinationArn\"),\n\ttopic: jsii.String(\"topic\"),\n\n\t// the properties below are optional\n\tkey: jsii.String(\"key\"),\n\tpartition: jsii.String(\"partition\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst kafkaActionProperty: iot.CfnTopicRule.KafkaActionProperty = {\n  clientProperties: {\n    clientPropertiesKey: 'clientProperties',\n  },\n  destinationArn: 'destinationArn',\n  topic: 'topic',\n\n  // the properties below are optional\n  key: 'key',\n  partition: 'partition',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.KafkaActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.KafkaActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kafkaActionProperty: iot.CfnTopicRule.KafkaActionProperty = {\n  clientProperties: {\n    clientPropertiesKey: 'clientProperties',\n  },\n  destinationArn: 'destinationArn',\n  topic: 'topic',\n\n  // the properties below are optional\n  key: 'key',\n  partition: 'partition',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "9b998f328c4664c2b576da53b7f312e47b1f64b70fee5befb4df827157f3337d"
    },
    "1824e8e90858a7111bd13902b8e0e2dd7edb5736148690e857b696d831a26518": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nkinesis_action_property = iot.CfnTopicRule.KinesisActionProperty(\n    role_arn=\"roleArn\",\n    stream_name=\"streamName\",\n\n    # the properties below are optional\n    partition_key=\"partitionKey\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nKinesisActionProperty kinesisActionProperty = new KinesisActionProperty {\n    RoleArn = \"roleArn\",\n    StreamName = \"streamName\",\n\n    // the properties below are optional\n    PartitionKey = \"partitionKey\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nKinesisActionProperty kinesisActionProperty = KinesisActionProperty.builder()\n        .roleArn(\"roleArn\")\n        .streamName(\"streamName\")\n\n        // the properties below are optional\n        .partitionKey(\"partitionKey\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nkinesisActionProperty := &kinesisActionProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\tstreamName: jsii.String(\"streamName\"),\n\n\t// the properties below are optional\n\tpartitionKey: jsii.String(\"partitionKey\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst kinesisActionProperty: iot.CfnTopicRule.KinesisActionProperty = {\n  roleArn: 'roleArn',\n  streamName: 'streamName',\n\n  // the properties below are optional\n  partitionKey: 'partitionKey',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.KinesisActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.KinesisActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisActionProperty: iot.CfnTopicRule.KinesisActionProperty = {\n  roleArn: 'roleArn',\n  streamName: 'streamName',\n\n  // the properties below are optional\n  partitionKey: 'partitionKey',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "10d5c7c655eace13604cf1dcfe6eeaa8d78f5aa9864eb2908f3a9b3411223f87"
    },
    "b7b706ea2296f657338aa5f553913f1da29515b74c078fafc836a678f1c62025": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nlambda_action_property = iot.CfnTopicRule.LambdaActionProperty(\n    function_arn=\"functionArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nLambdaActionProperty lambdaActionProperty = new LambdaActionProperty {\n    FunctionArn = \"functionArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nLambdaActionProperty lambdaActionProperty = LambdaActionProperty.builder()\n        .functionArn(\"functionArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nlambdaActionProperty := &lambdaActionProperty{\n\tfunctionArn: jsii.String(\"functionArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst lambdaActionProperty: iot.CfnTopicRule.LambdaActionProperty = {\n  functionArn: 'functionArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.LambdaActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.LambdaActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lambdaActionProperty: iot.CfnTopicRule.LambdaActionProperty = {\n  functionArn: 'functionArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8e3c0371dc434468f991aa592abf3fb3052e36883d04da05491b92533db0517a"
    },
    "c97fbfbe44c6c15b3da1df6a37fa887e74bf802f2f926fad978567e28da79bed": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nlocation_action_property = iot.CfnTopicRule.LocationActionProperty(\n    device_id=\"deviceId\",\n    latitude=\"latitude\",\n    longitude=\"longitude\",\n    role_arn=\"roleArn\",\n    tracker_name=\"trackerName\",\n\n    # the properties below are optional\n    timestamp=Date()\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nLocationActionProperty locationActionProperty = new LocationActionProperty {\n    DeviceId = \"deviceId\",\n    Latitude = \"latitude\",\n    Longitude = \"longitude\",\n    RoleArn = \"roleArn\",\n    TrackerName = \"trackerName\",\n\n    // the properties below are optional\n    Timestamp = new Date()\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nLocationActionProperty locationActionProperty = LocationActionProperty.builder()\n        .deviceId(\"deviceId\")\n        .latitude(\"latitude\")\n        .longitude(\"longitude\")\n        .roleArn(\"roleArn\")\n        .trackerName(\"trackerName\")\n\n        // the properties below are optional\n        .timestamp(new Date())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nlocationActionProperty := &locationActionProperty{\n\tdeviceId: jsii.String(\"deviceId\"),\n\tlatitude: jsii.String(\"latitude\"),\n\tlongitude: jsii.String(\"longitude\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ttrackerName: jsii.String(\"trackerName\"),\n\n\t// the properties below are optional\n\ttimestamp: NewDate(),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst locationActionProperty: iot.CfnTopicRule.LocationActionProperty = {\n  deviceId: 'deviceId',\n  latitude: 'latitude',\n  longitude: 'longitude',\n  roleArn: 'roleArn',\n  trackerName: 'trackerName',\n\n  // the properties below are optional\n  timestamp: new Date(),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.LocationActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.LocationActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst locationActionProperty: iot.CfnTopicRule.LocationActionProperty = {\n  deviceId: 'deviceId',\n  latitude: 'latitude',\n  longitude: 'longitude',\n  roleArn: 'roleArn',\n  trackerName: 'trackerName',\n\n  // the properties below are optional\n  timestamp: new Date(),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "361f8a879e14522397c1e845e4efc3091405546ba2a2453591c3c0fa1b19c684"
    },
    "d047dd4b47fb1cf9d17c3842d214ab20a654c0a185ddd5bb79da1025609b4e39": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nopen_search_action_property = iot.CfnTopicRule.OpenSearchActionProperty(\n    endpoint=\"endpoint\",\n    id=\"id\",\n    index=\"index\",\n    role_arn=\"roleArn\",\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nOpenSearchActionProperty openSearchActionProperty = new OpenSearchActionProperty {\n    Endpoint = \"endpoint\",\n    Id = \"id\",\n    Index = \"index\",\n    RoleArn = \"roleArn\",\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nOpenSearchActionProperty openSearchActionProperty = OpenSearchActionProperty.builder()\n        .endpoint(\"endpoint\")\n        .id(\"id\")\n        .index(\"index\")\n        .roleArn(\"roleArn\")\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nopenSearchActionProperty := &openSearchActionProperty{\n\tendpoint: jsii.String(\"endpoint\"),\n\tid: jsii.String(\"id\"),\n\tindex: jsii.String(\"index\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst openSearchActionProperty: iot.CfnTopicRule.OpenSearchActionProperty = {\n  endpoint: 'endpoint',\n  id: 'id',\n  index: 'index',\n  roleArn: 'roleArn',\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.OpenSearchActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.OpenSearchActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst openSearchActionProperty: iot.CfnTopicRule.OpenSearchActionProperty = {\n  endpoint: 'endpoint',\n  id: 'id',\n  index: 'index',\n  roleArn: 'roleArn',\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "9005564c974be778484380c5102280b58c55ec562c9d8be7a0cc740a138619cf"
    },
    "a2214fab58b666c077cb1fffabeb750cc76b8df4d841ce12b455c3994b1f49fc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nput_asset_property_value_entry_property = iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n    property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n        timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n            time_in_seconds=\"timeInSeconds\",\n\n            # the properties below are optional\n            offset_in_nanos=\"offsetInNanos\"\n        ),\n        value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n            boolean_value=\"booleanValue\",\n            double_value=\"doubleValue\",\n            integer_value=\"integerValue\",\n            string_value=\"stringValue\"\n        ),\n\n        # the properties below are optional\n        quality=\"quality\"\n    )],\n\n    # the properties below are optional\n    asset_id=\"assetId\",\n    entry_id=\"entryId\",\n    property_alias=\"propertyAlias\",\n    property_id=\"propertyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nPutAssetPropertyValueEntryProperty putAssetPropertyValueEntryProperty = new PutAssetPropertyValueEntryProperty {\n    PropertyValues = new [] { new AssetPropertyValueProperty {\n        Timestamp = new AssetPropertyTimestampProperty {\n            TimeInSeconds = \"timeInSeconds\",\n\n            // the properties below are optional\n            OffsetInNanos = \"offsetInNanos\"\n        },\n        Value = new AssetPropertyVariantProperty {\n            BooleanValue = \"booleanValue\",\n            DoubleValue = \"doubleValue\",\n            IntegerValue = \"integerValue\",\n            StringValue = \"stringValue\"\n        },\n\n        // the properties below are optional\n        Quality = \"quality\"\n    } },\n\n    // the properties below are optional\n    AssetId = \"assetId\",\n    EntryId = \"entryId\",\n    PropertyAlias = \"propertyAlias\",\n    PropertyId = \"propertyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nPutAssetPropertyValueEntryProperty putAssetPropertyValueEntryProperty = PutAssetPropertyValueEntryProperty.builder()\n        .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                .timestamp(AssetPropertyTimestampProperty.builder()\n                        .timeInSeconds(\"timeInSeconds\")\n\n                        // the properties below are optional\n                        .offsetInNanos(\"offsetInNanos\")\n                        .build())\n                .value(AssetPropertyVariantProperty.builder()\n                        .booleanValue(\"booleanValue\")\n                        .doubleValue(\"doubleValue\")\n                        .integerValue(\"integerValue\")\n                        .stringValue(\"stringValue\")\n                        .build())\n\n                // the properties below are optional\n                .quality(\"quality\")\n                .build()))\n\n        // the properties below are optional\n        .assetId(\"assetId\")\n        .entryId(\"entryId\")\n        .propertyAlias(\"propertyAlias\")\n        .propertyId(\"propertyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nputAssetPropertyValueEntryProperty := &putAssetPropertyValueEntryProperty{\n\tpropertyValues: []interface{}{\n\t\t&assetPropertyValueProperty{\n\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t},\n\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\tquality: jsii.String(\"quality\"),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tassetId: jsii.String(\"assetId\"),\n\tentryId: jsii.String(\"entryId\"),\n\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\tpropertyId: jsii.String(\"propertyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst putAssetPropertyValueEntryProperty: iot.CfnTopicRule.PutAssetPropertyValueEntryProperty = {\n  propertyValues: [{\n    timestamp: {\n      timeInSeconds: 'timeInSeconds',\n\n      // the properties below are optional\n      offsetInNanos: 'offsetInNanos',\n    },\n    value: {\n      booleanValue: 'booleanValue',\n      doubleValue: 'doubleValue',\n      integerValue: 'integerValue',\n      stringValue: 'stringValue',\n    },\n\n    // the properties below are optional\n    quality: 'quality',\n  }],\n\n  // the properties below are optional\n  assetId: 'assetId',\n  entryId: 'entryId',\n  propertyAlias: 'propertyAlias',\n  propertyId: 'propertyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.PutAssetPropertyValueEntryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.PutAssetPropertyValueEntryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst putAssetPropertyValueEntryProperty: iot.CfnTopicRule.PutAssetPropertyValueEntryProperty = {\n  propertyValues: [{\n    timestamp: {\n      timeInSeconds: 'timeInSeconds',\n\n      // the properties below are optional\n      offsetInNanos: 'offsetInNanos',\n    },\n    value: {\n      booleanValue: 'booleanValue',\n      doubleValue: 'doubleValue',\n      integerValue: 'integerValue',\n      stringValue: 'stringValue',\n    },\n\n    // the properties below are optional\n    quality: 'quality',\n  }],\n\n  // the properties below are optional\n  assetId: 'assetId',\n  entryId: 'entryId',\n  propertyAlias: 'propertyAlias',\n  propertyId: 'propertyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 19,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "db412d0bc95aa967e05df573cff9e9e134e9eae816c0f10fd7a625dc06312972"
    },
    "fa3a17cddd4a1cf1109510df84ea0fc5a34d9065447522cfdc93cc27aa0991b2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nput_item_input_property = iot.CfnTopicRule.PutItemInputProperty(\n    table_name=\"tableName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nPutItemInputProperty putItemInputProperty = new PutItemInputProperty {\n    TableName = \"tableName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nPutItemInputProperty putItemInputProperty = PutItemInputProperty.builder()\n        .tableName(\"tableName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nputItemInputProperty := &putItemInputProperty{\n\ttableName: jsii.String(\"tableName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst putItemInputProperty: iot.CfnTopicRule.PutItemInputProperty = {\n  tableName: 'tableName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.PutItemInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.PutItemInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst putItemInputProperty: iot.CfnTopicRule.PutItemInputProperty = {\n  tableName: 'tableName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "f6aa4518068f150d9d8aaacb67b87872386a017b52225864b0dc92bc518bb639"
    },
    "7c2069e4daf08f73b6656c3d9e0575416eb383dc82cf879ab9a402ee8bc499c1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nrepublish_action_headers_property = iot.CfnTopicRule.RepublishActionHeadersProperty(\n    content_type=\"contentType\",\n    correlation_data=\"correlationData\",\n    message_expiry=\"messageExpiry\",\n    payload_format_indicator=\"payloadFormatIndicator\",\n    response_topic=\"responseTopic\",\n    user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nRepublishActionHeadersProperty republishActionHeadersProperty = new RepublishActionHeadersProperty {\n    ContentType = \"contentType\",\n    CorrelationData = \"correlationData\",\n    MessageExpiry = \"messageExpiry\",\n    PayloadFormatIndicator = \"payloadFormatIndicator\",\n    ResponseTopic = \"responseTopic\",\n    UserProperties = new [] { new UserPropertyProperty {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nRepublishActionHeadersProperty republishActionHeadersProperty = RepublishActionHeadersProperty.builder()\n        .contentType(\"contentType\")\n        .correlationData(\"correlationData\")\n        .messageExpiry(\"messageExpiry\")\n        .payloadFormatIndicator(\"payloadFormatIndicator\")\n        .responseTopic(\"responseTopic\")\n        .userProperties(List.of(UserPropertyProperty.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nrepublishActionHeadersProperty := &republishActionHeadersProperty{\n\tcontentType: jsii.String(\"contentType\"),\n\tcorrelationData: jsii.String(\"correlationData\"),\n\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\tresponseTopic: jsii.String(\"responseTopic\"),\n\tuserProperties: []interface{}{\n\t\t&userPropertyProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst republishActionHeadersProperty: iot.CfnTopicRule.RepublishActionHeadersProperty = {\n  contentType: 'contentType',\n  correlationData: 'correlationData',\n  messageExpiry: 'messageExpiry',\n  payloadFormatIndicator: 'payloadFormatIndicator',\n  responseTopic: 'responseTopic',\n  userProperties: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.RepublishActionHeadersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.RepublishActionHeadersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst republishActionHeadersProperty: iot.CfnTopicRule.RepublishActionHeadersProperty = {\n  contentType: 'contentType',\n  correlationData: 'correlationData',\n  messageExpiry: 'messageExpiry',\n  payloadFormatIndicator: 'payloadFormatIndicator',\n  responseTopic: 'responseTopic',\n  userProperties: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 13,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "df2b886c0c7108f29a40c42eb1743018ed3a0028d3afffebcdbbf33a735d0145"
    },
    "29d9450208dd7bfb8d976ba2f88aeec743f2342a2eee2facc86c04a0cdad296f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nrepublish_action_property = iot.CfnTopicRule.RepublishActionProperty(\n    role_arn=\"roleArn\",\n    topic=\"topic\",\n\n    # the properties below are optional\n    headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n        content_type=\"contentType\",\n        correlation_data=\"correlationData\",\n        message_expiry=\"messageExpiry\",\n        payload_format_indicator=\"payloadFormatIndicator\",\n        response_topic=\"responseTopic\",\n        user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n            key=\"key\",\n            value=\"value\"\n        )]\n    ),\n    qos=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nRepublishActionProperty republishActionProperty = new RepublishActionProperty {\n    RoleArn = \"roleArn\",\n    Topic = \"topic\",\n\n    // the properties below are optional\n    Headers = new RepublishActionHeadersProperty {\n        ContentType = \"contentType\",\n        CorrelationData = \"correlationData\",\n        MessageExpiry = \"messageExpiry\",\n        PayloadFormatIndicator = \"payloadFormatIndicator\",\n        ResponseTopic = \"responseTopic\",\n        UserProperties = new [] { new UserPropertyProperty {\n            Key = \"key\",\n            Value = \"value\"\n        } }\n    },\n    Qos = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nRepublishActionProperty republishActionProperty = RepublishActionProperty.builder()\n        .roleArn(\"roleArn\")\n        .topic(\"topic\")\n\n        // the properties below are optional\n        .headers(RepublishActionHeadersProperty.builder()\n                .contentType(\"contentType\")\n                .correlationData(\"correlationData\")\n                .messageExpiry(\"messageExpiry\")\n                .payloadFormatIndicator(\"payloadFormatIndicator\")\n                .responseTopic(\"responseTopic\")\n                .userProperties(List.of(UserPropertyProperty.builder()\n                        .key(\"key\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .qos(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nrepublishActionProperty := &republishActionProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\ttopic: jsii.String(\"topic\"),\n\n\t// the properties below are optional\n\theaders: &republishActionHeadersProperty{\n\t\tcontentType: jsii.String(\"contentType\"),\n\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\tuserProperties: []interface{}{\n\t\t\t&userPropertyProperty{\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n\tqos: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst republishActionProperty: iot.CfnTopicRule.RepublishActionProperty = {\n  roleArn: 'roleArn',\n  topic: 'topic',\n\n  // the properties below are optional\n  headers: {\n    contentType: 'contentType',\n    correlationData: 'correlationData',\n    messageExpiry: 'messageExpiry',\n    payloadFormatIndicator: 'payloadFormatIndicator',\n    responseTopic: 'responseTopic',\n    userProperties: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  qos: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.RepublishActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.RepublishActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst republishActionProperty: iot.CfnTopicRule.RepublishActionProperty = {\n  roleArn: 'roleArn',\n  topic: 'topic',\n\n  // the properties below are optional\n  headers: {\n    contentType: 'contentType',\n    correlationData: 'correlationData',\n    messageExpiry: 'messageExpiry',\n    payloadFormatIndicator: 'payloadFormatIndicator',\n    responseTopic: 'responseTopic',\n    userProperties: [{\n      key: 'key',\n      value: 'value',\n    }],\n  },\n  qos: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 17,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "677e2a3ea362ccc856e63ef44b01c9726811e2d72fa995f34707e0af82b527ff"
    },
    "2e32e73a3e349f6c9ddf08c6c22768673a1e1cfbb38df9aeb51ceb6b41438919": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ns3_action_property = iot.CfnTopicRule.S3ActionProperty(\n    bucket_name=\"bucketName\",\n    key=\"key\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    canned_acl=\"cannedAcl\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nS3ActionProperty s3ActionProperty = new S3ActionProperty {\n    BucketName = \"bucketName\",\n    Key = \"key\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    CannedAcl = \"cannedAcl\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nS3ActionProperty s3ActionProperty = S3ActionProperty.builder()\n        .bucketName(\"bucketName\")\n        .key(\"key\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .cannedAcl(\"cannedAcl\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ns3ActionProperty := &s3ActionProperty{\n\tbucketName: jsii.String(\"bucketName\"),\n\tkey: jsii.String(\"key\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tcannedAcl: jsii.String(\"cannedAcl\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst s3ActionProperty: iot.CfnTopicRule.S3ActionProperty = {\n  bucketName: 'bucketName',\n  key: 'key',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  cannedAcl: 'cannedAcl',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.S3ActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.S3ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3ActionProperty: iot.CfnTopicRule.S3ActionProperty = {\n  bucketName: 'bucketName',\n  key: 'key',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  cannedAcl: 'cannedAcl',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "d71fd4c6b5a38135f34153adcac867d9c0f5e773dc13a9984274da606b8b6592"
    },
    "62acecbfd287d9c7070e55b729b28f92456522ad682282aaa86d3dfa4ec3ece3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nsig_v4_authorization_property = iot.CfnTopicRule.SigV4AuthorizationProperty(\n    role_arn=\"roleArn\",\n    service_name=\"serviceName\",\n    signing_region=\"signingRegion\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nSigV4AuthorizationProperty sigV4AuthorizationProperty = new SigV4AuthorizationProperty {\n    RoleArn = \"roleArn\",\n    ServiceName = \"serviceName\",\n    SigningRegion = \"signingRegion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nSigV4AuthorizationProperty sigV4AuthorizationProperty = SigV4AuthorizationProperty.builder()\n        .roleArn(\"roleArn\")\n        .serviceName(\"serviceName\")\n        .signingRegion(\"signingRegion\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nsigV4AuthorizationProperty := &sigV4AuthorizationProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\tserviceName: jsii.String(\"serviceName\"),\n\tsigningRegion: jsii.String(\"signingRegion\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst sigV4AuthorizationProperty: iot.CfnTopicRule.SigV4AuthorizationProperty = {\n  roleArn: 'roleArn',\n  serviceName: 'serviceName',\n  signingRegion: 'signingRegion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.SigV4AuthorizationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.SigV4AuthorizationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sigV4AuthorizationProperty: iot.CfnTopicRule.SigV4AuthorizationProperty = {\n  roleArn: 'roleArn',\n  serviceName: 'serviceName',\n  signingRegion: 'signingRegion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "bf5ed7fec022fa8f050f2dc50a1f916b229f60beacdd74bcf92ef4d30caa9f65"
    },
    "d4c11c6806ec6c54d8ed2c6986d6f364eafdccb45923b9c51433277feb050b3a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nsns_action_property = iot.CfnTopicRule.SnsActionProperty(\n    role_arn=\"roleArn\",\n    target_arn=\"targetArn\",\n\n    # the properties below are optional\n    message_format=\"messageFormat\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nSnsActionProperty snsActionProperty = new SnsActionProperty {\n    RoleArn = \"roleArn\",\n    TargetArn = \"targetArn\",\n\n    // the properties below are optional\n    MessageFormat = \"messageFormat\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nSnsActionProperty snsActionProperty = SnsActionProperty.builder()\n        .roleArn(\"roleArn\")\n        .targetArn(\"targetArn\")\n\n        // the properties below are optional\n        .messageFormat(\"messageFormat\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nsnsActionProperty := &snsActionProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\ttargetArn: jsii.String(\"targetArn\"),\n\n\t// the properties below are optional\n\tmessageFormat: jsii.String(\"messageFormat\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst snsActionProperty: iot.CfnTopicRule.SnsActionProperty = {\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  messageFormat: 'messageFormat',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.SnsActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.SnsActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst snsActionProperty: iot.CfnTopicRule.SnsActionProperty = {\n  roleArn: 'roleArn',\n  targetArn: 'targetArn',\n\n  // the properties below are optional\n  messageFormat: 'messageFormat',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "2d183272923229806095c1c005a271b1705588a480706882e05dde2b217f4467"
    },
    "2506ef1f3f880d0ab85924de3da86505dc6fd8d273e25e8f4a1fe72d75aa47d2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nsqs_action_property = iot.CfnTopicRule.SqsActionProperty(\n    queue_url=\"queueUrl\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    use_base64=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nSqsActionProperty sqsActionProperty = new SqsActionProperty {\n    QueueUrl = \"queueUrl\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    UseBase64 = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nSqsActionProperty sqsActionProperty = SqsActionProperty.builder()\n        .queueUrl(\"queueUrl\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .useBase64(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nsqsActionProperty := &sqsActionProperty{\n\tqueueUrl: jsii.String(\"queueUrl\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tuseBase64: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst sqsActionProperty: iot.CfnTopicRule.SqsActionProperty = {\n  queueUrl: 'queueUrl',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  useBase64: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.SqsActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.SqsActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sqsActionProperty: iot.CfnTopicRule.SqsActionProperty = {\n  queueUrl: 'queueUrl',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  useBase64: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "2af6225f9869e73dbc156438949fa809fa3a2db9fdbe4ce9aec5d494e8ba59d6"
    },
    "042572043db1fe2f64bf280428ca2f8229823f17693d3710cc56b10f1bb1ad21": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nstep_functions_action_property = iot.CfnTopicRule.StepFunctionsActionProperty(\n    role_arn=\"roleArn\",\n    state_machine_name=\"stateMachineName\",\n\n    # the properties below are optional\n    execution_name_prefix=\"executionNamePrefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nStepFunctionsActionProperty stepFunctionsActionProperty = new StepFunctionsActionProperty {\n    RoleArn = \"roleArn\",\n    StateMachineName = \"stateMachineName\",\n\n    // the properties below are optional\n    ExecutionNamePrefix = \"executionNamePrefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nStepFunctionsActionProperty stepFunctionsActionProperty = StepFunctionsActionProperty.builder()\n        .roleArn(\"roleArn\")\n        .stateMachineName(\"stateMachineName\")\n\n        // the properties below are optional\n        .executionNamePrefix(\"executionNamePrefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nstepFunctionsActionProperty := &stepFunctionsActionProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t// the properties below are optional\n\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst stepFunctionsActionProperty: iot.CfnTopicRule.StepFunctionsActionProperty = {\n  roleArn: 'roleArn',\n  stateMachineName: 'stateMachineName',\n\n  // the properties below are optional\n  executionNamePrefix: 'executionNamePrefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.StepFunctionsActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.StepFunctionsActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepFunctionsActionProperty: iot.CfnTopicRule.StepFunctionsActionProperty = {\n  roleArn: 'roleArn',\n  stateMachineName: 'stateMachineName',\n\n  // the properties below are optional\n  executionNamePrefix: 'executionNamePrefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "11b880bfc57eb46bc9ec4a227e4015543accd666cb39460231e24f6489d3ee47"
    },
    "bf242fce65deb15d07aa4cb12c4df0297d7e0a3b320b1fbaca6d0b9aeedf09cb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ntimestamp_property = iot.CfnTopicRule.TimestampProperty(\n    value=\"value\",\n\n    # the properties below are optional\n    unit=\"unit\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nTimestampProperty timestampProperty = new TimestampProperty {\n    Value = \"value\",\n\n    // the properties below are optional\n    Unit = \"unit\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nTimestampProperty timestampProperty = TimestampProperty.builder()\n        .value(\"value\")\n\n        // the properties below are optional\n        .unit(\"unit\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ntimestampProperty := &timestampProperty{\n\tvalue: jsii.String(\"value\"),\n\n\t// the properties below are optional\n\tunit: jsii.String(\"unit\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst timestampProperty: iot.CfnTopicRule.TimestampProperty = {\n  value: 'value',\n\n  // the properties below are optional\n  unit: 'unit',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.TimestampProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.TimestampProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timestampProperty: iot.CfnTopicRule.TimestampProperty = {\n  value: 'value',\n\n  // the properties below are optional\n  unit: 'unit',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "64b6c5ed58f2e13290f7c9f6eb989d57fc8ea046b10be5c3487e1f3493ae59fd"
    },
    "6f7859a16d6fd4b903cee3c9f14904495a518583f6fb764c61ba90933d3219d9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ntimestream_action_property = iot.CfnTopicRule.TimestreamActionProperty(\n    database_name=\"databaseName\",\n    dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    role_arn=\"roleArn\",\n    table_name=\"tableName\",\n\n    # the properties below are optional\n    timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n        unit=\"unit\",\n        value=\"value\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nTimestreamActionProperty timestreamActionProperty = new TimestreamActionProperty {\n    DatabaseName = \"databaseName\",\n    Dimensions = new [] { new TimestreamDimensionProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    RoleArn = \"roleArn\",\n    TableName = \"tableName\",\n\n    // the properties below are optional\n    Timestamp = new TimestreamTimestampProperty {\n        Unit = \"unit\",\n        Value = \"value\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nTimestreamActionProperty timestreamActionProperty = TimestreamActionProperty.builder()\n        .databaseName(\"databaseName\")\n        .dimensions(List.of(TimestreamDimensionProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .roleArn(\"roleArn\")\n        .tableName(\"tableName\")\n\n        // the properties below are optional\n        .timestamp(TimestreamTimestampProperty.builder()\n                .unit(\"unit\")\n                .value(\"value\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ntimestreamActionProperty := &timestreamActionProperty{\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tdimensions: []interface{}{\n\t\t&timestreamDimensionProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\ttableName: jsii.String(\"tableName\"),\n\n\t// the properties below are optional\n\ttimestamp: &timestreamTimestampProperty{\n\t\tunit: jsii.String(\"unit\"),\n\t\tvalue: jsii.String(\"value\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst timestreamActionProperty: iot.CfnTopicRule.TimestreamActionProperty = {\n  databaseName: 'databaseName',\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  roleArn: 'roleArn',\n  tableName: 'tableName',\n\n  // the properties below are optional\n  timestamp: {\n    unit: 'unit',\n    value: 'value',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.TimestreamActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.TimestreamActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timestreamActionProperty: iot.CfnTopicRule.TimestreamActionProperty = {\n  databaseName: 'databaseName',\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  roleArn: 'roleArn',\n  tableName: 'tableName',\n\n  // the properties below are optional\n  timestamp: {\n    unit: 'unit',\n    value: 'value',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "4af33f2d8180ba508d6ccb14ba311d75d9b90c69b5665f1d0ed348c07d31f82f"
    },
    "9bd26ebb2b071c200e8a8eab711e171f55fc579d6dc450230d9bf8cc39b35ea5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ntimestream_dimension_property = iot.CfnTopicRule.TimestreamDimensionProperty(\n    name=\"name\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nTimestreamDimensionProperty timestreamDimensionProperty = new TimestreamDimensionProperty {\n    Name = \"name\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nTimestreamDimensionProperty timestreamDimensionProperty = TimestreamDimensionProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ntimestreamDimensionProperty := &timestreamDimensionProperty{\n\tname: jsii.String(\"name\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst timestreamDimensionProperty: iot.CfnTopicRule.TimestreamDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.TimestreamDimensionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.TimestreamDimensionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timestreamDimensionProperty: iot.CfnTopicRule.TimestreamDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ebea4650b80adbe6aa2658324a32b070179a47e8fe2d5b98b5e538dd3e6b0176"
    },
    "867e17b5075bf31ad18fc535ea0ef1dac0b00b7cb08c7bf4a1e39ce35412a22d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ntimestream_timestamp_property = iot.CfnTopicRule.TimestreamTimestampProperty(\n    unit=\"unit\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nTimestreamTimestampProperty timestreamTimestampProperty = new TimestreamTimestampProperty {\n    Unit = \"unit\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nTimestreamTimestampProperty timestreamTimestampProperty = TimestreamTimestampProperty.builder()\n        .unit(\"unit\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ntimestreamTimestampProperty := &timestreamTimestampProperty{\n\tunit: jsii.String(\"unit\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst timestreamTimestampProperty: iot.CfnTopicRule.TimestreamTimestampProperty = {\n  unit: 'unit',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.TimestreamTimestampProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.TimestreamTimestampProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst timestreamTimestampProperty: iot.CfnTopicRule.TimestreamTimestampProperty = {\n  unit: 'unit',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "cb6b6e7ab4e222a79331057dc98d31d37dc2c4ddf5b19374ffc90cda5a53d695"
    },
    "ec665a22c8c91d84df94f417faea293715ee1e20a6ce13fbdd052c7402c0d9c2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ntopic_rule_payload_property = iot.CfnTopicRule.TopicRulePayloadProperty(\n    actions=[iot.CfnTopicRule.ActionProperty(\n        cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n            alarm_name=\"alarmName\",\n            role_arn=\"roleArn\",\n            state_reason=\"stateReason\",\n            state_value=\"stateValue\"\n        ),\n        cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n            log_group_name=\"logGroupName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False\n        ),\n        cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n            metric_name=\"metricName\",\n            metric_namespace=\"metricNamespace\",\n            metric_unit=\"metricUnit\",\n            metric_value=\"metricValue\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            metric_timestamp=\"metricTimestamp\"\n        ),\n        dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n            hash_key_field=\"hashKeyField\",\n            hash_key_value=\"hashKeyValue\",\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            hash_key_type=\"hashKeyType\",\n            payload_field=\"payloadField\",\n            range_key_field=\"rangeKeyField\",\n            range_key_type=\"rangeKeyType\",\n            range_key_value=\"rangeKeyValue\"\n        ),\n        dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n            put_item=iot.CfnTopicRule.PutItemInputProperty(\n                table_name=\"tableName\"\n            ),\n            role_arn=\"roleArn\"\n        ),\n        elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n            endpoint=\"endpoint\",\n            id=\"id\",\n            index=\"index\",\n            role_arn=\"roleArn\",\n            type=\"type\"\n        ),\n        firehose=iot.CfnTopicRule.FirehoseActionProperty(\n            delivery_stream_name=\"deliveryStreamName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False,\n            separator=\"separator\"\n        ),\n        http=iot.CfnTopicRule.HttpActionProperty(\n            url=\"url\",\n\n            # the properties below are optional\n            auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                    role_arn=\"roleArn\",\n                    service_name=\"serviceName\",\n                    signing_region=\"signingRegion\"\n                )\n            ),\n            confirmation_url=\"confirmationUrl\",\n            headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n            channel_name=\"channelName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False\n        ),\n        iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n            input_name=\"inputName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False,\n            message_id=\"messageId\"\n        ),\n        iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n            put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                    timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                        time_in_seconds=\"timeInSeconds\",\n\n                        # the properties below are optional\n                        offset_in_nanos=\"offsetInNanos\"\n                    ),\n                    value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                        boolean_value=\"booleanValue\",\n                        double_value=\"doubleValue\",\n                        integer_value=\"integerValue\",\n                        string_value=\"stringValue\"\n                    ),\n\n                    # the properties below are optional\n                    quality=\"quality\"\n                )],\n\n                # the properties below are optional\n                asset_id=\"assetId\",\n                entry_id=\"entryId\",\n                property_alias=\"propertyAlias\",\n                property_id=\"propertyId\"\n            )],\n            role_arn=\"roleArn\"\n        ),\n        kafka=iot.CfnTopicRule.KafkaActionProperty(\n            client_properties={\n                \"client_properties_key\": \"clientProperties\"\n            },\n            destination_arn=\"destinationArn\",\n            topic=\"topic\",\n\n            # the properties below are optional\n            key=\"key\",\n            partition=\"partition\"\n        ),\n        kinesis=iot.CfnTopicRule.KinesisActionProperty(\n            role_arn=\"roleArn\",\n            stream_name=\"streamName\",\n\n            # the properties below are optional\n            partition_key=\"partitionKey\"\n        ),\n        lambda_=iot.CfnTopicRule.LambdaActionProperty(\n            function_arn=\"functionArn\"\n        ),\n        location=iot.CfnTopicRule.LocationActionProperty(\n            device_id=\"deviceId\",\n            latitude=\"latitude\",\n            longitude=\"longitude\",\n            role_arn=\"roleArn\",\n            tracker_name=\"trackerName\",\n\n            # the properties below are optional\n            timestamp=Date()\n        ),\n        open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n            endpoint=\"endpoint\",\n            id=\"id\",\n            index=\"index\",\n            role_arn=\"roleArn\",\n            type=\"type\"\n        ),\n        republish=iot.CfnTopicRule.RepublishActionProperty(\n            role_arn=\"roleArn\",\n            topic=\"topic\",\n\n            # the properties below are optional\n            headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                content_type=\"contentType\",\n                correlation_data=\"correlationData\",\n                message_expiry=\"messageExpiry\",\n                payload_format_indicator=\"payloadFormatIndicator\",\n                response_topic=\"responseTopic\",\n                user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            qos=123\n        ),\n        s3=iot.CfnTopicRule.S3ActionProperty(\n            bucket_name=\"bucketName\",\n            key=\"key\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            canned_acl=\"cannedAcl\"\n        ),\n        sns=iot.CfnTopicRule.SnsActionProperty(\n            role_arn=\"roleArn\",\n            target_arn=\"targetArn\",\n\n            # the properties below are optional\n            message_format=\"messageFormat\"\n        ),\n        sqs=iot.CfnTopicRule.SqsActionProperty(\n            queue_url=\"queueUrl\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            use_base64=False\n        ),\n        step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n            role_arn=\"roleArn\",\n            state_machine_name=\"stateMachineName\",\n\n            # the properties below are optional\n            execution_name_prefix=\"executionNamePrefix\"\n        ),\n        timestream=iot.CfnTopicRule.TimestreamActionProperty(\n            database_name=\"databaseName\",\n            dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                unit=\"unit\",\n                value=\"value\"\n            )\n        )\n    )],\n    sql=\"sql\",\n\n    # the properties below are optional\n    aws_iot_sql_version=\"awsIotSqlVersion\",\n    description=\"description\",\n    error_action=iot.CfnTopicRule.ActionProperty(\n        cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n            alarm_name=\"alarmName\",\n            role_arn=\"roleArn\",\n            state_reason=\"stateReason\",\n            state_value=\"stateValue\"\n        ),\n        cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n            log_group_name=\"logGroupName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False\n        ),\n        cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n            metric_name=\"metricName\",\n            metric_namespace=\"metricNamespace\",\n            metric_unit=\"metricUnit\",\n            metric_value=\"metricValue\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            metric_timestamp=\"metricTimestamp\"\n        ),\n        dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n            hash_key_field=\"hashKeyField\",\n            hash_key_value=\"hashKeyValue\",\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            hash_key_type=\"hashKeyType\",\n            payload_field=\"payloadField\",\n            range_key_field=\"rangeKeyField\",\n            range_key_type=\"rangeKeyType\",\n            range_key_value=\"rangeKeyValue\"\n        ),\n        dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n            put_item=iot.CfnTopicRule.PutItemInputProperty(\n                table_name=\"tableName\"\n            ),\n            role_arn=\"roleArn\"\n        ),\n        elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n            endpoint=\"endpoint\",\n            id=\"id\",\n            index=\"index\",\n            role_arn=\"roleArn\",\n            type=\"type\"\n        ),\n        firehose=iot.CfnTopicRule.FirehoseActionProperty(\n            delivery_stream_name=\"deliveryStreamName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False,\n            separator=\"separator\"\n        ),\n        http=iot.CfnTopicRule.HttpActionProperty(\n            url=\"url\",\n\n            # the properties below are optional\n            auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                    role_arn=\"roleArn\",\n                    service_name=\"serviceName\",\n                    signing_region=\"signingRegion\"\n                )\n            ),\n            confirmation_url=\"confirmationUrl\",\n            headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                key=\"key\",\n                value=\"value\"\n            )]\n        ),\n        iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n            channel_name=\"channelName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False\n        ),\n        iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n            input_name=\"inputName\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            batch_mode=False,\n            message_id=\"messageId\"\n        ),\n        iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n            put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                    timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                        time_in_seconds=\"timeInSeconds\",\n\n                        # the properties below are optional\n                        offset_in_nanos=\"offsetInNanos\"\n                    ),\n                    value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                        boolean_value=\"booleanValue\",\n                        double_value=\"doubleValue\",\n                        integer_value=\"integerValue\",\n                        string_value=\"stringValue\"\n                    ),\n\n                    # the properties below are optional\n                    quality=\"quality\"\n                )],\n\n                # the properties below are optional\n                asset_id=\"assetId\",\n                entry_id=\"entryId\",\n                property_alias=\"propertyAlias\",\n                property_id=\"propertyId\"\n            )],\n            role_arn=\"roleArn\"\n        ),\n        kafka=iot.CfnTopicRule.KafkaActionProperty(\n            client_properties={\n                \"client_properties_key\": \"clientProperties\"\n            },\n            destination_arn=\"destinationArn\",\n            topic=\"topic\",\n\n            # the properties below are optional\n            key=\"key\",\n            partition=\"partition\"\n        ),\n        kinesis=iot.CfnTopicRule.KinesisActionProperty(\n            role_arn=\"roleArn\",\n            stream_name=\"streamName\",\n\n            # the properties below are optional\n            partition_key=\"partitionKey\"\n        ),\n        lambda_=iot.CfnTopicRule.LambdaActionProperty(\n            function_arn=\"functionArn\"\n        ),\n        location=iot.CfnTopicRule.LocationActionProperty(\n            device_id=\"deviceId\",\n            latitude=\"latitude\",\n            longitude=\"longitude\",\n            role_arn=\"roleArn\",\n            tracker_name=\"trackerName\",\n\n            # the properties below are optional\n            timestamp=Date()\n        ),\n        open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n            endpoint=\"endpoint\",\n            id=\"id\",\n            index=\"index\",\n            role_arn=\"roleArn\",\n            type=\"type\"\n        ),\n        republish=iot.CfnTopicRule.RepublishActionProperty(\n            role_arn=\"roleArn\",\n            topic=\"topic\",\n\n            # the properties below are optional\n            headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                content_type=\"contentType\",\n                correlation_data=\"correlationData\",\n                message_expiry=\"messageExpiry\",\n                payload_format_indicator=\"payloadFormatIndicator\",\n                response_topic=\"responseTopic\",\n                user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            qos=123\n        ),\n        s3=iot.CfnTopicRule.S3ActionProperty(\n            bucket_name=\"bucketName\",\n            key=\"key\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            canned_acl=\"cannedAcl\"\n        ),\n        sns=iot.CfnTopicRule.SnsActionProperty(\n            role_arn=\"roleArn\",\n            target_arn=\"targetArn\",\n\n            # the properties below are optional\n            message_format=\"messageFormat\"\n        ),\n        sqs=iot.CfnTopicRule.SqsActionProperty(\n            queue_url=\"queueUrl\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            use_base64=False\n        ),\n        step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n            role_arn=\"roleArn\",\n            state_machine_name=\"stateMachineName\",\n\n            # the properties below are optional\n            execution_name_prefix=\"executionNamePrefix\"\n        ),\n        timestream=iot.CfnTopicRule.TimestreamActionProperty(\n            database_name=\"databaseName\",\n            dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                unit=\"unit\",\n                value=\"value\"\n            )\n        )\n    ),\n    rule_disabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nTopicRulePayloadProperty topicRulePayloadProperty = new TopicRulePayloadProperty {\n    Actions = new [] { new ActionProperty {\n        CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n            AlarmName = \"alarmName\",\n            RoleArn = \"roleArn\",\n            StateReason = \"stateReason\",\n            StateValue = \"stateValue\"\n        },\n        CloudwatchLogs = new CloudwatchLogsActionProperty {\n            LogGroupName = \"logGroupName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false\n        },\n        CloudwatchMetric = new CloudwatchMetricActionProperty {\n            MetricName = \"metricName\",\n            MetricNamespace = \"metricNamespace\",\n            MetricUnit = \"metricUnit\",\n            MetricValue = \"metricValue\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            MetricTimestamp = \"metricTimestamp\"\n        },\n        DynamoDb = new DynamoDBActionProperty {\n            HashKeyField = \"hashKeyField\",\n            HashKeyValue = \"hashKeyValue\",\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            HashKeyType = \"hashKeyType\",\n            PayloadField = \"payloadField\",\n            RangeKeyField = \"rangeKeyField\",\n            RangeKeyType = \"rangeKeyType\",\n            RangeKeyValue = \"rangeKeyValue\"\n        },\n        DynamoDBv2 = new DynamoDBv2ActionProperty {\n            PutItem = new PutItemInputProperty {\n                TableName = \"tableName\"\n            },\n            RoleArn = \"roleArn\"\n        },\n        Elasticsearch = new ElasticsearchActionProperty {\n            Endpoint = \"endpoint\",\n            Id = \"id\",\n            Index = \"index\",\n            RoleArn = \"roleArn\",\n            Type = \"type\"\n        },\n        Firehose = new FirehoseActionProperty {\n            DeliveryStreamName = \"deliveryStreamName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false,\n            Separator = \"separator\"\n        },\n        Http = new HttpActionProperty {\n            Url = \"url\",\n\n            // the properties below are optional\n            Auth = new HttpAuthorizationProperty {\n                Sigv4 = new SigV4AuthorizationProperty {\n                    RoleArn = \"roleArn\",\n                    ServiceName = \"serviceName\",\n                    SigningRegion = \"signingRegion\"\n                }\n            },\n            ConfirmationUrl = \"confirmationUrl\",\n            Headers = new [] { new HttpActionHeaderProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        IotAnalytics = new IotAnalyticsActionProperty {\n            ChannelName = \"channelName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false\n        },\n        IotEvents = new IotEventsActionProperty {\n            InputName = \"inputName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false,\n            MessageId = \"messageId\"\n        },\n        IotSiteWise = new IotSiteWiseActionProperty {\n            PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                PropertyValues = new [] { new AssetPropertyValueProperty {\n                    Timestamp = new AssetPropertyTimestampProperty {\n                        TimeInSeconds = \"timeInSeconds\",\n\n                        // the properties below are optional\n                        OffsetInNanos = \"offsetInNanos\"\n                    },\n                    Value = new AssetPropertyVariantProperty {\n                        BooleanValue = \"booleanValue\",\n                        DoubleValue = \"doubleValue\",\n                        IntegerValue = \"integerValue\",\n                        StringValue = \"stringValue\"\n                    },\n\n                    // the properties below are optional\n                    Quality = \"quality\"\n                } },\n\n                // the properties below are optional\n                AssetId = \"assetId\",\n                EntryId = \"entryId\",\n                PropertyAlias = \"propertyAlias\",\n                PropertyId = \"propertyId\"\n            } },\n            RoleArn = \"roleArn\"\n        },\n        Kafka = new KafkaActionProperty {\n            ClientProperties = new Dictionary<string, string> {\n                { \"clientPropertiesKey\", \"clientProperties\" }\n            },\n            DestinationArn = \"destinationArn\",\n            Topic = \"topic\",\n\n            // the properties below are optional\n            Key = \"key\",\n            Partition = \"partition\"\n        },\n        Kinesis = new KinesisActionProperty {\n            RoleArn = \"roleArn\",\n            StreamName = \"streamName\",\n\n            // the properties below are optional\n            PartitionKey = \"partitionKey\"\n        },\n        Lambda = new LambdaActionProperty {\n            FunctionArn = \"functionArn\"\n        },\n        Location = new LocationActionProperty {\n            DeviceId = \"deviceId\",\n            Latitude = \"latitude\",\n            Longitude = \"longitude\",\n            RoleArn = \"roleArn\",\n            TrackerName = \"trackerName\",\n\n            // the properties below are optional\n            Timestamp = new Date()\n        },\n        OpenSearch = new OpenSearchActionProperty {\n            Endpoint = \"endpoint\",\n            Id = \"id\",\n            Index = \"index\",\n            RoleArn = \"roleArn\",\n            Type = \"type\"\n        },\n        Republish = new RepublishActionProperty {\n            RoleArn = \"roleArn\",\n            Topic = \"topic\",\n\n            // the properties below are optional\n            Headers = new RepublishActionHeadersProperty {\n                ContentType = \"contentType\",\n                CorrelationData = \"correlationData\",\n                MessageExpiry = \"messageExpiry\",\n                PayloadFormatIndicator = \"payloadFormatIndicator\",\n                ResponseTopic = \"responseTopic\",\n                UserProperties = new [] { new UserPropertyProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            Qos = 123\n        },\n        S3 = new S3ActionProperty {\n            BucketName = \"bucketName\",\n            Key = \"key\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            CannedAcl = \"cannedAcl\"\n        },\n        Sns = new SnsActionProperty {\n            RoleArn = \"roleArn\",\n            TargetArn = \"targetArn\",\n\n            // the properties below are optional\n            MessageFormat = \"messageFormat\"\n        },\n        Sqs = new SqsActionProperty {\n            QueueUrl = \"queueUrl\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            UseBase64 = false\n        },\n        StepFunctions = new StepFunctionsActionProperty {\n            RoleArn = \"roleArn\",\n            StateMachineName = \"stateMachineName\",\n\n            // the properties below are optional\n            ExecutionNamePrefix = \"executionNamePrefix\"\n        },\n        Timestream = new TimestreamActionProperty {\n            DatabaseName = \"databaseName\",\n            Dimensions = new [] { new TimestreamDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            Timestamp = new TimestreamTimestampProperty {\n                Unit = \"unit\",\n                Value = \"value\"\n            }\n        }\n    } },\n    Sql = \"sql\",\n\n    // the properties below are optional\n    AwsIotSqlVersion = \"awsIotSqlVersion\",\n    Description = \"description\",\n    ErrorAction = new ActionProperty {\n        CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n            AlarmName = \"alarmName\",\n            RoleArn = \"roleArn\",\n            StateReason = \"stateReason\",\n            StateValue = \"stateValue\"\n        },\n        CloudwatchLogs = new CloudwatchLogsActionProperty {\n            LogGroupName = \"logGroupName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false\n        },\n        CloudwatchMetric = new CloudwatchMetricActionProperty {\n            MetricName = \"metricName\",\n            MetricNamespace = \"metricNamespace\",\n            MetricUnit = \"metricUnit\",\n            MetricValue = \"metricValue\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            MetricTimestamp = \"metricTimestamp\"\n        },\n        DynamoDb = new DynamoDBActionProperty {\n            HashKeyField = \"hashKeyField\",\n            HashKeyValue = \"hashKeyValue\",\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            HashKeyType = \"hashKeyType\",\n            PayloadField = \"payloadField\",\n            RangeKeyField = \"rangeKeyField\",\n            RangeKeyType = \"rangeKeyType\",\n            RangeKeyValue = \"rangeKeyValue\"\n        },\n        DynamoDBv2 = new DynamoDBv2ActionProperty {\n            PutItem = new PutItemInputProperty {\n                TableName = \"tableName\"\n            },\n            RoleArn = \"roleArn\"\n        },\n        Elasticsearch = new ElasticsearchActionProperty {\n            Endpoint = \"endpoint\",\n            Id = \"id\",\n            Index = \"index\",\n            RoleArn = \"roleArn\",\n            Type = \"type\"\n        },\n        Firehose = new FirehoseActionProperty {\n            DeliveryStreamName = \"deliveryStreamName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false,\n            Separator = \"separator\"\n        },\n        Http = new HttpActionProperty {\n            Url = \"url\",\n\n            // the properties below are optional\n            Auth = new HttpAuthorizationProperty {\n                Sigv4 = new SigV4AuthorizationProperty {\n                    RoleArn = \"roleArn\",\n                    ServiceName = \"serviceName\",\n                    SigningRegion = \"signingRegion\"\n                }\n            },\n            ConfirmationUrl = \"confirmationUrl\",\n            Headers = new [] { new HttpActionHeaderProperty {\n                Key = \"key\",\n                Value = \"value\"\n            } }\n        },\n        IotAnalytics = new IotAnalyticsActionProperty {\n            ChannelName = \"channelName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false\n        },\n        IotEvents = new IotEventsActionProperty {\n            InputName = \"inputName\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BatchMode = false,\n            MessageId = \"messageId\"\n        },\n        IotSiteWise = new IotSiteWiseActionProperty {\n            PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                PropertyValues = new [] { new AssetPropertyValueProperty {\n                    Timestamp = new AssetPropertyTimestampProperty {\n                        TimeInSeconds = \"timeInSeconds\",\n\n                        // the properties below are optional\n                        OffsetInNanos = \"offsetInNanos\"\n                    },\n                    Value = new AssetPropertyVariantProperty {\n                        BooleanValue = \"booleanValue\",\n                        DoubleValue = \"doubleValue\",\n                        IntegerValue = \"integerValue\",\n                        StringValue = \"stringValue\"\n                    },\n\n                    // the properties below are optional\n                    Quality = \"quality\"\n                } },\n\n                // the properties below are optional\n                AssetId = \"assetId\",\n                EntryId = \"entryId\",\n                PropertyAlias = \"propertyAlias\",\n                PropertyId = \"propertyId\"\n            } },\n            RoleArn = \"roleArn\"\n        },\n        Kafka = new KafkaActionProperty {\n            ClientProperties = new Dictionary<string, string> {\n                { \"clientPropertiesKey\", \"clientProperties\" }\n            },\n            DestinationArn = \"destinationArn\",\n            Topic = \"topic\",\n\n            // the properties below are optional\n            Key = \"key\",\n            Partition = \"partition\"\n        },\n        Kinesis = new KinesisActionProperty {\n            RoleArn = \"roleArn\",\n            StreamName = \"streamName\",\n\n            // the properties below are optional\n            PartitionKey = \"partitionKey\"\n        },\n        Lambda = new LambdaActionProperty {\n            FunctionArn = \"functionArn\"\n        },\n        Location = new LocationActionProperty {\n            DeviceId = \"deviceId\",\n            Latitude = \"latitude\",\n            Longitude = \"longitude\",\n            RoleArn = \"roleArn\",\n            TrackerName = \"trackerName\",\n\n            // the properties below are optional\n            Timestamp = new Date()\n        },\n        OpenSearch = new OpenSearchActionProperty {\n            Endpoint = \"endpoint\",\n            Id = \"id\",\n            Index = \"index\",\n            RoleArn = \"roleArn\",\n            Type = \"type\"\n        },\n        Republish = new RepublishActionProperty {\n            RoleArn = \"roleArn\",\n            Topic = \"topic\",\n\n            // the properties below are optional\n            Headers = new RepublishActionHeadersProperty {\n                ContentType = \"contentType\",\n                CorrelationData = \"correlationData\",\n                MessageExpiry = \"messageExpiry\",\n                PayloadFormatIndicator = \"payloadFormatIndicator\",\n                ResponseTopic = \"responseTopic\",\n                UserProperties = new [] { new UserPropertyProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            Qos = 123\n        },\n        S3 = new S3ActionProperty {\n            BucketName = \"bucketName\",\n            Key = \"key\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            CannedAcl = \"cannedAcl\"\n        },\n        Sns = new SnsActionProperty {\n            RoleArn = \"roleArn\",\n            TargetArn = \"targetArn\",\n\n            // the properties below are optional\n            MessageFormat = \"messageFormat\"\n        },\n        Sqs = new SqsActionProperty {\n            QueueUrl = \"queueUrl\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            UseBase64 = false\n        },\n        StepFunctions = new StepFunctionsActionProperty {\n            RoleArn = \"roleArn\",\n            StateMachineName = \"stateMachineName\",\n\n            // the properties below are optional\n            ExecutionNamePrefix = \"executionNamePrefix\"\n        },\n        Timestream = new TimestreamActionProperty {\n            DatabaseName = \"databaseName\",\n            Dimensions = new [] { new TimestreamDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            Timestamp = new TimestreamTimestampProperty {\n                Unit = \"unit\",\n                Value = \"value\"\n            }\n        }\n    },\n    RuleDisabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nTopicRulePayloadProperty topicRulePayloadProperty = TopicRulePayloadProperty.builder()\n        .actions(List.of(ActionProperty.builder()\n                .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                        .alarmName(\"alarmName\")\n                        .roleArn(\"roleArn\")\n                        .stateReason(\"stateReason\")\n                        .stateValue(\"stateValue\")\n                        .build())\n                .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                        .logGroupName(\"logGroupName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .build())\n                .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                        .metricName(\"metricName\")\n                        .metricNamespace(\"metricNamespace\")\n                        .metricUnit(\"metricUnit\")\n                        .metricValue(\"metricValue\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .metricTimestamp(\"metricTimestamp\")\n                        .build())\n                .dynamoDb(DynamoDBActionProperty.builder()\n                        .hashKeyField(\"hashKeyField\")\n                        .hashKeyValue(\"hashKeyValue\")\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .hashKeyType(\"hashKeyType\")\n                        .payloadField(\"payloadField\")\n                        .rangeKeyField(\"rangeKeyField\")\n                        .rangeKeyType(\"rangeKeyType\")\n                        .rangeKeyValue(\"rangeKeyValue\")\n                        .build())\n                .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                        .putItem(PutItemInputProperty.builder()\n                                .tableName(\"tableName\")\n                                .build())\n                        .roleArn(\"roleArn\")\n                        .build())\n                .elasticsearch(ElasticsearchActionProperty.builder()\n                        .endpoint(\"endpoint\")\n                        .id(\"id\")\n                        .index(\"index\")\n                        .roleArn(\"roleArn\")\n                        .type(\"type\")\n                        .build())\n                .firehose(FirehoseActionProperty.builder()\n                        .deliveryStreamName(\"deliveryStreamName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .separator(\"separator\")\n                        .build())\n                .http(HttpActionProperty.builder()\n                        .url(\"url\")\n\n                        // the properties below are optional\n                        .auth(HttpAuthorizationProperty.builder()\n                                .sigv4(SigV4AuthorizationProperty.builder()\n                                        .roleArn(\"roleArn\")\n                                        .serviceName(\"serviceName\")\n                                        .signingRegion(\"signingRegion\")\n                                        .build())\n                                .build())\n                        .confirmationUrl(\"confirmationUrl\")\n                        .headers(List.of(HttpActionHeaderProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .iotAnalytics(IotAnalyticsActionProperty.builder()\n                        .channelName(\"channelName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .build())\n                .iotEvents(IotEventsActionProperty.builder()\n                        .inputName(\"inputName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .messageId(\"messageId\")\n                        .build())\n                .iotSiteWise(IotSiteWiseActionProperty.builder()\n                        .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                        .timestamp(AssetPropertyTimestampProperty.builder()\n                                                .timeInSeconds(\"timeInSeconds\")\n\n                                                // the properties below are optional\n                                                .offsetInNanos(\"offsetInNanos\")\n                                                .build())\n                                        .value(AssetPropertyVariantProperty.builder()\n                                                .booleanValue(\"booleanValue\")\n                                                .doubleValue(\"doubleValue\")\n                                                .integerValue(\"integerValue\")\n                                                .stringValue(\"stringValue\")\n                                                .build())\n\n                                        // the properties below are optional\n                                        .quality(\"quality\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .assetId(\"assetId\")\n                                .entryId(\"entryId\")\n                                .propertyAlias(\"propertyAlias\")\n                                .propertyId(\"propertyId\")\n                                .build()))\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kafka(KafkaActionProperty.builder()\n                        .clientProperties(Map.of(\n                                \"clientPropertiesKey\", \"clientProperties\"))\n                        .destinationArn(\"destinationArn\")\n                        .topic(\"topic\")\n\n                        // the properties below are optional\n                        .key(\"key\")\n                        .partition(\"partition\")\n                        .build())\n                .kinesis(KinesisActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .streamName(\"streamName\")\n\n                        // the properties below are optional\n                        .partitionKey(\"partitionKey\")\n                        .build())\n                .lambda(LambdaActionProperty.builder()\n                        .functionArn(\"functionArn\")\n                        .build())\n                .location(LocationActionProperty.builder()\n                        .deviceId(\"deviceId\")\n                        .latitude(\"latitude\")\n                        .longitude(\"longitude\")\n                        .roleArn(\"roleArn\")\n                        .trackerName(\"trackerName\")\n\n                        // the properties below are optional\n                        .timestamp(new Date())\n                        .build())\n                .openSearch(OpenSearchActionProperty.builder()\n                        .endpoint(\"endpoint\")\n                        .id(\"id\")\n                        .index(\"index\")\n                        .roleArn(\"roleArn\")\n                        .type(\"type\")\n                        .build())\n                .republish(RepublishActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .topic(\"topic\")\n\n                        // the properties below are optional\n                        .headers(RepublishActionHeadersProperty.builder()\n                                .contentType(\"contentType\")\n                                .correlationData(\"correlationData\")\n                                .messageExpiry(\"messageExpiry\")\n                                .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                .responseTopic(\"responseTopic\")\n                                .userProperties(List.of(UserPropertyProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .qos(123)\n                        .build())\n                .s3(S3ActionProperty.builder()\n                        .bucketName(\"bucketName\")\n                        .key(\"key\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .cannedAcl(\"cannedAcl\")\n                        .build())\n                .sns(SnsActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .targetArn(\"targetArn\")\n\n                        // the properties below are optional\n                        .messageFormat(\"messageFormat\")\n                        .build())\n                .sqs(SqsActionProperty.builder()\n                        .queueUrl(\"queueUrl\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .useBase64(false)\n                        .build())\n                .stepFunctions(StepFunctionsActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .stateMachineName(\"stateMachineName\")\n\n                        // the properties below are optional\n                        .executionNamePrefix(\"executionNamePrefix\")\n                        .build())\n                .timestream(TimestreamActionProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .timestamp(TimestreamTimestampProperty.builder()\n                                .unit(\"unit\")\n                                .value(\"value\")\n                                .build())\n                        .build())\n                .build()))\n        .sql(\"sql\")\n\n        // the properties below are optional\n        .awsIotSqlVersion(\"awsIotSqlVersion\")\n        .description(\"description\")\n        .errorAction(ActionProperty.builder()\n                .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                        .alarmName(\"alarmName\")\n                        .roleArn(\"roleArn\")\n                        .stateReason(\"stateReason\")\n                        .stateValue(\"stateValue\")\n                        .build())\n                .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                        .logGroupName(\"logGroupName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .build())\n                .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                        .metricName(\"metricName\")\n                        .metricNamespace(\"metricNamespace\")\n                        .metricUnit(\"metricUnit\")\n                        .metricValue(\"metricValue\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .metricTimestamp(\"metricTimestamp\")\n                        .build())\n                .dynamoDb(DynamoDBActionProperty.builder()\n                        .hashKeyField(\"hashKeyField\")\n                        .hashKeyValue(\"hashKeyValue\")\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .hashKeyType(\"hashKeyType\")\n                        .payloadField(\"payloadField\")\n                        .rangeKeyField(\"rangeKeyField\")\n                        .rangeKeyType(\"rangeKeyType\")\n                        .rangeKeyValue(\"rangeKeyValue\")\n                        .build())\n                .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                        .putItem(PutItemInputProperty.builder()\n                                .tableName(\"tableName\")\n                                .build())\n                        .roleArn(\"roleArn\")\n                        .build())\n                .elasticsearch(ElasticsearchActionProperty.builder()\n                        .endpoint(\"endpoint\")\n                        .id(\"id\")\n                        .index(\"index\")\n                        .roleArn(\"roleArn\")\n                        .type(\"type\")\n                        .build())\n                .firehose(FirehoseActionProperty.builder()\n                        .deliveryStreamName(\"deliveryStreamName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .separator(\"separator\")\n                        .build())\n                .http(HttpActionProperty.builder()\n                        .url(\"url\")\n\n                        // the properties below are optional\n                        .auth(HttpAuthorizationProperty.builder()\n                                .sigv4(SigV4AuthorizationProperty.builder()\n                                        .roleArn(\"roleArn\")\n                                        .serviceName(\"serviceName\")\n                                        .signingRegion(\"signingRegion\")\n                                        .build())\n                                .build())\n                        .confirmationUrl(\"confirmationUrl\")\n                        .headers(List.of(HttpActionHeaderProperty.builder()\n                                .key(\"key\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .iotAnalytics(IotAnalyticsActionProperty.builder()\n                        .channelName(\"channelName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .build())\n                .iotEvents(IotEventsActionProperty.builder()\n                        .inputName(\"inputName\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .batchMode(false)\n                        .messageId(\"messageId\")\n                        .build())\n                .iotSiteWise(IotSiteWiseActionProperty.builder()\n                        .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                        .timestamp(AssetPropertyTimestampProperty.builder()\n                                                .timeInSeconds(\"timeInSeconds\")\n\n                                                // the properties below are optional\n                                                .offsetInNanos(\"offsetInNanos\")\n                                                .build())\n                                        .value(AssetPropertyVariantProperty.builder()\n                                                .booleanValue(\"booleanValue\")\n                                                .doubleValue(\"doubleValue\")\n                                                .integerValue(\"integerValue\")\n                                                .stringValue(\"stringValue\")\n                                                .build())\n\n                                        // the properties below are optional\n                                        .quality(\"quality\")\n                                        .build()))\n\n                                // the properties below are optional\n                                .assetId(\"assetId\")\n                                .entryId(\"entryId\")\n                                .propertyAlias(\"propertyAlias\")\n                                .propertyId(\"propertyId\")\n                                .build()))\n                        .roleArn(\"roleArn\")\n                        .build())\n                .kafka(KafkaActionProperty.builder()\n                        .clientProperties(Map.of(\n                                \"clientPropertiesKey\", \"clientProperties\"))\n                        .destinationArn(\"destinationArn\")\n                        .topic(\"topic\")\n\n                        // the properties below are optional\n                        .key(\"key\")\n                        .partition(\"partition\")\n                        .build())\n                .kinesis(KinesisActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .streamName(\"streamName\")\n\n                        // the properties below are optional\n                        .partitionKey(\"partitionKey\")\n                        .build())\n                .lambda(LambdaActionProperty.builder()\n                        .functionArn(\"functionArn\")\n                        .build())\n                .location(LocationActionProperty.builder()\n                        .deviceId(\"deviceId\")\n                        .latitude(\"latitude\")\n                        .longitude(\"longitude\")\n                        .roleArn(\"roleArn\")\n                        .trackerName(\"trackerName\")\n\n                        // the properties below are optional\n                        .timestamp(new Date())\n                        .build())\n                .openSearch(OpenSearchActionProperty.builder()\n                        .endpoint(\"endpoint\")\n                        .id(\"id\")\n                        .index(\"index\")\n                        .roleArn(\"roleArn\")\n                        .type(\"type\")\n                        .build())\n                .republish(RepublishActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .topic(\"topic\")\n\n                        // the properties below are optional\n                        .headers(RepublishActionHeadersProperty.builder()\n                                .contentType(\"contentType\")\n                                .correlationData(\"correlationData\")\n                                .messageExpiry(\"messageExpiry\")\n                                .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                .responseTopic(\"responseTopic\")\n                                .userProperties(List.of(UserPropertyProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .qos(123)\n                        .build())\n                .s3(S3ActionProperty.builder()\n                        .bucketName(\"bucketName\")\n                        .key(\"key\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .cannedAcl(\"cannedAcl\")\n                        .build())\n                .sns(SnsActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .targetArn(\"targetArn\")\n\n                        // the properties below are optional\n                        .messageFormat(\"messageFormat\")\n                        .build())\n                .sqs(SqsActionProperty.builder()\n                        .queueUrl(\"queueUrl\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .useBase64(false)\n                        .build())\n                .stepFunctions(StepFunctionsActionProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .stateMachineName(\"stateMachineName\")\n\n                        // the properties below are optional\n                        .executionNamePrefix(\"executionNamePrefix\")\n                        .build())\n                .timestream(TimestreamActionProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .timestamp(TimestreamTimestampProperty.builder()\n                                .unit(\"unit\")\n                                .value(\"value\")\n                                .build())\n                        .build())\n                .build())\n        .ruleDisabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ntopicRulePayloadProperty := &topicRulePayloadProperty{\n\tactions: []interface{}{\n\t\t&actionProperty{\n\t\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t\t},\n\t\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t},\n\t\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t\t},\n\t\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t\t},\n\t\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\t\tputItem: &putItemInputProperty{\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t\tfirehose: &firehoseActionProperty{\n\t\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\tseparator: jsii.String(\"separator\"),\n\t\t\t},\n\t\t\thttp: &httpActionProperty{\n\t\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\t\theaders: []interface{}{\n\t\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t},\n\t\t\tiotEvents: &iotEventsActionProperty{\n\t\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t\t},\n\t\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\tkafka: &kafkaActionProperty{\n\t\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t\t},\n\t\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tpartition: jsii.String(\"partition\"),\n\t\t\t},\n\t\t\tkinesis: &kinesisActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t\t},\n\t\t\tlambda: &lambdaActionProperty{\n\t\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t\t},\n\t\t\tlocation: &locationActionProperty{\n\t\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttimestamp: NewDate(),\n\t\t\t},\n\t\t\topenSearch: &openSearchActionProperty{\n\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t\trepublish: &republishActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tqos: jsii.Number(123),\n\t\t\t},\n\t\t\ts3: &s3ActionProperty{\n\t\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t\t},\n\t\t\tsns: &snsActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t\t},\n\t\t\tsqs: &sqsActionProperty{\n\t\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tuseBase64: jsii.Boolean(false),\n\t\t\t},\n\t\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t\t},\n\t\t\ttimestream: &timestreamActionProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tsql: jsii.String(\"sql\"),\n\n\t// the properties below are optional\n\tawsIotSqlVersion: jsii.String(\"awsIotSqlVersion\"),\n\tdescription: jsii.String(\"description\"),\n\terrorAction: &actionProperty{\n\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t},\n\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t},\n\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t},\n\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t},\n\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\tputItem: &putItemInputProperty{\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tindex: jsii.String(\"index\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t\tfirehose: &firehoseActionProperty{\n\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\tseparator: jsii.String(\"separator\"),\n\t\t},\n\t\thttp: &httpActionProperty{\n\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t// the properties below are optional\n\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\theaders: []interface{}{\n\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t},\n\t\tiotEvents: &iotEventsActionProperty{\n\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t},\n\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t\tkafka: &kafkaActionProperty{\n\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t},\n\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tpartition: jsii.String(\"partition\"),\n\t\t},\n\t\tkinesis: &kinesisActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t},\n\t\tlambda: &lambdaActionProperty{\n\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t},\n\t\tlocation: &locationActionProperty{\n\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t// the properties below are optional\n\t\t\ttimestamp: NewDate(),\n\t\t},\n\t\topenSearch: &openSearchActionProperty{\n\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\tid: jsii.String(\"id\"),\n\t\t\tindex: jsii.String(\"index\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t\trepublish: &republishActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t// the properties below are optional\n\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tqos: jsii.Number(123),\n\t\t},\n\t\ts3: &s3ActionProperty{\n\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t},\n\t\tsns: &snsActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t},\n\t\tsqs: &sqsActionProperty{\n\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tuseBase64: jsii.Boolean(false),\n\t\t},\n\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t// the properties below are optional\n\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t},\n\t\ttimestream: &timestreamActionProperty{\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\tdimensions: []interface{}{\n\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n\truleDisabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst topicRulePayloadProperty: iot.CfnTopicRule.TopicRulePayloadProperty = {\n  actions: [{\n    cloudwatchAlarm: {\n      alarmName: 'alarmName',\n      roleArn: 'roleArn',\n      stateReason: 'stateReason',\n      stateValue: 'stateValue',\n    },\n    cloudwatchLogs: {\n      logGroupName: 'logGroupName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    cloudwatchMetric: {\n      metricName: 'metricName',\n      metricNamespace: 'metricNamespace',\n      metricUnit: 'metricUnit',\n      metricValue: 'metricValue',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      metricTimestamp: 'metricTimestamp',\n    },\n    dynamoDb: {\n      hashKeyField: 'hashKeyField',\n      hashKeyValue: 'hashKeyValue',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      hashKeyType: 'hashKeyType',\n      payloadField: 'payloadField',\n      rangeKeyField: 'rangeKeyField',\n      rangeKeyType: 'rangeKeyType',\n      rangeKeyValue: 'rangeKeyValue',\n    },\n    dynamoDBv2: {\n      putItem: {\n        tableName: 'tableName',\n      },\n      roleArn: 'roleArn',\n    },\n    elasticsearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    firehose: {\n      deliveryStreamName: 'deliveryStreamName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      separator: 'separator',\n    },\n    http: {\n      url: 'url',\n\n      // the properties below are optional\n      auth: {\n        sigv4: {\n          roleArn: 'roleArn',\n          serviceName: 'serviceName',\n          signingRegion: 'signingRegion',\n        },\n      },\n      confirmationUrl: 'confirmationUrl',\n      headers: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    iotAnalytics: {\n      channelName: 'channelName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    iotEvents: {\n      inputName: 'inputName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      messageId: 'messageId',\n    },\n    iotSiteWise: {\n      putAssetPropertyValueEntries: [{\n        propertyValues: [{\n          timestamp: {\n            timeInSeconds: 'timeInSeconds',\n\n            // the properties below are optional\n            offsetInNanos: 'offsetInNanos',\n          },\n          value: {\n            booleanValue: 'booleanValue',\n            doubleValue: 'doubleValue',\n            integerValue: 'integerValue',\n            stringValue: 'stringValue',\n          },\n\n          // the properties below are optional\n          quality: 'quality',\n        }],\n\n        // the properties below are optional\n        assetId: 'assetId',\n        entryId: 'entryId',\n        propertyAlias: 'propertyAlias',\n        propertyId: 'propertyId',\n      }],\n      roleArn: 'roleArn',\n    },\n    kafka: {\n      clientProperties: {\n        clientPropertiesKey: 'clientProperties',\n      },\n      destinationArn: 'destinationArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      key: 'key',\n      partition: 'partition',\n    },\n    kinesis: {\n      roleArn: 'roleArn',\n      streamName: 'streamName',\n\n      // the properties below are optional\n      partitionKey: 'partitionKey',\n    },\n    lambda: {\n      functionArn: 'functionArn',\n    },\n    location: {\n      deviceId: 'deviceId',\n      latitude: 'latitude',\n      longitude: 'longitude',\n      roleArn: 'roleArn',\n      trackerName: 'trackerName',\n\n      // the properties below are optional\n      timestamp: new Date(),\n    },\n    openSearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    republish: {\n      roleArn: 'roleArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      headers: {\n        contentType: 'contentType',\n        correlationData: 'correlationData',\n        messageExpiry: 'messageExpiry',\n        payloadFormatIndicator: 'payloadFormatIndicator',\n        responseTopic: 'responseTopic',\n        userProperties: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      qos: 123,\n    },\n    s3: {\n      bucketName: 'bucketName',\n      key: 'key',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      cannedAcl: 'cannedAcl',\n    },\n    sns: {\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n\n      // the properties below are optional\n      messageFormat: 'messageFormat',\n    },\n    sqs: {\n      queueUrl: 'queueUrl',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      useBase64: false,\n    },\n    stepFunctions: {\n      roleArn: 'roleArn',\n      stateMachineName: 'stateMachineName',\n\n      // the properties below are optional\n      executionNamePrefix: 'executionNamePrefix',\n    },\n    timestream: {\n      databaseName: 'databaseName',\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      timestamp: {\n        unit: 'unit',\n        value: 'value',\n      },\n    },\n  }],\n  sql: 'sql',\n\n  // the properties below are optional\n  awsIotSqlVersion: 'awsIotSqlVersion',\n  description: 'description',\n  errorAction: {\n    cloudwatchAlarm: {\n      alarmName: 'alarmName',\n      roleArn: 'roleArn',\n      stateReason: 'stateReason',\n      stateValue: 'stateValue',\n    },\n    cloudwatchLogs: {\n      logGroupName: 'logGroupName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    cloudwatchMetric: {\n      metricName: 'metricName',\n      metricNamespace: 'metricNamespace',\n      metricUnit: 'metricUnit',\n      metricValue: 'metricValue',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      metricTimestamp: 'metricTimestamp',\n    },\n    dynamoDb: {\n      hashKeyField: 'hashKeyField',\n      hashKeyValue: 'hashKeyValue',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      hashKeyType: 'hashKeyType',\n      payloadField: 'payloadField',\n      rangeKeyField: 'rangeKeyField',\n      rangeKeyType: 'rangeKeyType',\n      rangeKeyValue: 'rangeKeyValue',\n    },\n    dynamoDBv2: {\n      putItem: {\n        tableName: 'tableName',\n      },\n      roleArn: 'roleArn',\n    },\n    elasticsearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    firehose: {\n      deliveryStreamName: 'deliveryStreamName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      separator: 'separator',\n    },\n    http: {\n      url: 'url',\n\n      // the properties below are optional\n      auth: {\n        sigv4: {\n          roleArn: 'roleArn',\n          serviceName: 'serviceName',\n          signingRegion: 'signingRegion',\n        },\n      },\n      confirmationUrl: 'confirmationUrl',\n      headers: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    iotAnalytics: {\n      channelName: 'channelName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    iotEvents: {\n      inputName: 'inputName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      messageId: 'messageId',\n    },\n    iotSiteWise: {\n      putAssetPropertyValueEntries: [{\n        propertyValues: [{\n          timestamp: {\n            timeInSeconds: 'timeInSeconds',\n\n            // the properties below are optional\n            offsetInNanos: 'offsetInNanos',\n          },\n          value: {\n            booleanValue: 'booleanValue',\n            doubleValue: 'doubleValue',\n            integerValue: 'integerValue',\n            stringValue: 'stringValue',\n          },\n\n          // the properties below are optional\n          quality: 'quality',\n        }],\n\n        // the properties below are optional\n        assetId: 'assetId',\n        entryId: 'entryId',\n        propertyAlias: 'propertyAlias',\n        propertyId: 'propertyId',\n      }],\n      roleArn: 'roleArn',\n    },\n    kafka: {\n      clientProperties: {\n        clientPropertiesKey: 'clientProperties',\n      },\n      destinationArn: 'destinationArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      key: 'key',\n      partition: 'partition',\n    },\n    kinesis: {\n      roleArn: 'roleArn',\n      streamName: 'streamName',\n\n      // the properties below are optional\n      partitionKey: 'partitionKey',\n    },\n    lambda: {\n      functionArn: 'functionArn',\n    },\n    location: {\n      deviceId: 'deviceId',\n      latitude: 'latitude',\n      longitude: 'longitude',\n      roleArn: 'roleArn',\n      trackerName: 'trackerName',\n\n      // the properties below are optional\n      timestamp: new Date(),\n    },\n    openSearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    republish: {\n      roleArn: 'roleArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      headers: {\n        contentType: 'contentType',\n        correlationData: 'correlationData',\n        messageExpiry: 'messageExpiry',\n        payloadFormatIndicator: 'payloadFormatIndicator',\n        responseTopic: 'responseTopic',\n        userProperties: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      qos: 123,\n    },\n    s3: {\n      bucketName: 'bucketName',\n      key: 'key',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      cannedAcl: 'cannedAcl',\n    },\n    sns: {\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n\n      // the properties below are optional\n      messageFormat: 'messageFormat',\n    },\n    sqs: {\n      queueUrl: 'queueUrl',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      useBase64: false,\n    },\n    stepFunctions: {\n      roleArn: 'roleArn',\n      stateMachineName: 'stateMachineName',\n\n      // the properties below are optional\n      executionNamePrefix: 'executionNamePrefix',\n    },\n    timestream: {\n      databaseName: 'databaseName',\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      timestamp: {\n        unit: 'unit',\n        value: 'value',\n      },\n    },\n  },\n  ruleDisabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.TopicRulePayloadProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.TopicRulePayloadProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst topicRulePayloadProperty: iot.CfnTopicRule.TopicRulePayloadProperty = {\n  actions: [{\n    cloudwatchAlarm: {\n      alarmName: 'alarmName',\n      roleArn: 'roleArn',\n      stateReason: 'stateReason',\n      stateValue: 'stateValue',\n    },\n    cloudwatchLogs: {\n      logGroupName: 'logGroupName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    cloudwatchMetric: {\n      metricName: 'metricName',\n      metricNamespace: 'metricNamespace',\n      metricUnit: 'metricUnit',\n      metricValue: 'metricValue',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      metricTimestamp: 'metricTimestamp',\n    },\n    dynamoDb: {\n      hashKeyField: 'hashKeyField',\n      hashKeyValue: 'hashKeyValue',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      hashKeyType: 'hashKeyType',\n      payloadField: 'payloadField',\n      rangeKeyField: 'rangeKeyField',\n      rangeKeyType: 'rangeKeyType',\n      rangeKeyValue: 'rangeKeyValue',\n    },\n    dynamoDBv2: {\n      putItem: {\n        tableName: 'tableName',\n      },\n      roleArn: 'roleArn',\n    },\n    elasticsearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    firehose: {\n      deliveryStreamName: 'deliveryStreamName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      separator: 'separator',\n    },\n    http: {\n      url: 'url',\n\n      // the properties below are optional\n      auth: {\n        sigv4: {\n          roleArn: 'roleArn',\n          serviceName: 'serviceName',\n          signingRegion: 'signingRegion',\n        },\n      },\n      confirmationUrl: 'confirmationUrl',\n      headers: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    iotAnalytics: {\n      channelName: 'channelName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    iotEvents: {\n      inputName: 'inputName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      messageId: 'messageId',\n    },\n    iotSiteWise: {\n      putAssetPropertyValueEntries: [{\n        propertyValues: [{\n          timestamp: {\n            timeInSeconds: 'timeInSeconds',\n\n            // the properties below are optional\n            offsetInNanos: 'offsetInNanos',\n          },\n          value: {\n            booleanValue: 'booleanValue',\n            doubleValue: 'doubleValue',\n            integerValue: 'integerValue',\n            stringValue: 'stringValue',\n          },\n\n          // the properties below are optional\n          quality: 'quality',\n        }],\n\n        // the properties below are optional\n        assetId: 'assetId',\n        entryId: 'entryId',\n        propertyAlias: 'propertyAlias',\n        propertyId: 'propertyId',\n      }],\n      roleArn: 'roleArn',\n    },\n    kafka: {\n      clientProperties: {\n        clientPropertiesKey: 'clientProperties',\n      },\n      destinationArn: 'destinationArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      key: 'key',\n      partition: 'partition',\n    },\n    kinesis: {\n      roleArn: 'roleArn',\n      streamName: 'streamName',\n\n      // the properties below are optional\n      partitionKey: 'partitionKey',\n    },\n    lambda: {\n      functionArn: 'functionArn',\n    },\n    location: {\n      deviceId: 'deviceId',\n      latitude: 'latitude',\n      longitude: 'longitude',\n      roleArn: 'roleArn',\n      trackerName: 'trackerName',\n\n      // the properties below are optional\n      timestamp: new Date(),\n    },\n    openSearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    republish: {\n      roleArn: 'roleArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      headers: {\n        contentType: 'contentType',\n        correlationData: 'correlationData',\n        messageExpiry: 'messageExpiry',\n        payloadFormatIndicator: 'payloadFormatIndicator',\n        responseTopic: 'responseTopic',\n        userProperties: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      qos: 123,\n    },\n    s3: {\n      bucketName: 'bucketName',\n      key: 'key',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      cannedAcl: 'cannedAcl',\n    },\n    sns: {\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n\n      // the properties below are optional\n      messageFormat: 'messageFormat',\n    },\n    sqs: {\n      queueUrl: 'queueUrl',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      useBase64: false,\n    },\n    stepFunctions: {\n      roleArn: 'roleArn',\n      stateMachineName: 'stateMachineName',\n\n      // the properties below are optional\n      executionNamePrefix: 'executionNamePrefix',\n    },\n    timestream: {\n      databaseName: 'databaseName',\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      timestamp: {\n        unit: 'unit',\n        value: 'value',\n      },\n    },\n  }],\n  sql: 'sql',\n\n  // the properties below are optional\n  awsIotSqlVersion: 'awsIotSqlVersion',\n  description: 'description',\n  errorAction: {\n    cloudwatchAlarm: {\n      alarmName: 'alarmName',\n      roleArn: 'roleArn',\n      stateReason: 'stateReason',\n      stateValue: 'stateValue',\n    },\n    cloudwatchLogs: {\n      logGroupName: 'logGroupName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    cloudwatchMetric: {\n      metricName: 'metricName',\n      metricNamespace: 'metricNamespace',\n      metricUnit: 'metricUnit',\n      metricValue: 'metricValue',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      metricTimestamp: 'metricTimestamp',\n    },\n    dynamoDb: {\n      hashKeyField: 'hashKeyField',\n      hashKeyValue: 'hashKeyValue',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      hashKeyType: 'hashKeyType',\n      payloadField: 'payloadField',\n      rangeKeyField: 'rangeKeyField',\n      rangeKeyType: 'rangeKeyType',\n      rangeKeyValue: 'rangeKeyValue',\n    },\n    dynamoDBv2: {\n      putItem: {\n        tableName: 'tableName',\n      },\n      roleArn: 'roleArn',\n    },\n    elasticsearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    firehose: {\n      deliveryStreamName: 'deliveryStreamName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      separator: 'separator',\n    },\n    http: {\n      url: 'url',\n\n      // the properties below are optional\n      auth: {\n        sigv4: {\n          roleArn: 'roleArn',\n          serviceName: 'serviceName',\n          signingRegion: 'signingRegion',\n        },\n      },\n      confirmationUrl: 'confirmationUrl',\n      headers: [{\n        key: 'key',\n        value: 'value',\n      }],\n    },\n    iotAnalytics: {\n      channelName: 'channelName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n    },\n    iotEvents: {\n      inputName: 'inputName',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      batchMode: false,\n      messageId: 'messageId',\n    },\n    iotSiteWise: {\n      putAssetPropertyValueEntries: [{\n        propertyValues: [{\n          timestamp: {\n            timeInSeconds: 'timeInSeconds',\n\n            // the properties below are optional\n            offsetInNanos: 'offsetInNanos',\n          },\n          value: {\n            booleanValue: 'booleanValue',\n            doubleValue: 'doubleValue',\n            integerValue: 'integerValue',\n            stringValue: 'stringValue',\n          },\n\n          // the properties below are optional\n          quality: 'quality',\n        }],\n\n        // the properties below are optional\n        assetId: 'assetId',\n        entryId: 'entryId',\n        propertyAlias: 'propertyAlias',\n        propertyId: 'propertyId',\n      }],\n      roleArn: 'roleArn',\n    },\n    kafka: {\n      clientProperties: {\n        clientPropertiesKey: 'clientProperties',\n      },\n      destinationArn: 'destinationArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      key: 'key',\n      partition: 'partition',\n    },\n    kinesis: {\n      roleArn: 'roleArn',\n      streamName: 'streamName',\n\n      // the properties below are optional\n      partitionKey: 'partitionKey',\n    },\n    lambda: {\n      functionArn: 'functionArn',\n    },\n    location: {\n      deviceId: 'deviceId',\n      latitude: 'latitude',\n      longitude: 'longitude',\n      roleArn: 'roleArn',\n      trackerName: 'trackerName',\n\n      // the properties below are optional\n      timestamp: new Date(),\n    },\n    openSearch: {\n      endpoint: 'endpoint',\n      id: 'id',\n      index: 'index',\n      roleArn: 'roleArn',\n      type: 'type',\n    },\n    republish: {\n      roleArn: 'roleArn',\n      topic: 'topic',\n\n      // the properties below are optional\n      headers: {\n        contentType: 'contentType',\n        correlationData: 'correlationData',\n        messageExpiry: 'messageExpiry',\n        payloadFormatIndicator: 'payloadFormatIndicator',\n        responseTopic: 'responseTopic',\n        userProperties: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      qos: 123,\n    },\n    s3: {\n      bucketName: 'bucketName',\n      key: 'key',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      cannedAcl: 'cannedAcl',\n    },\n    sns: {\n      roleArn: 'roleArn',\n      targetArn: 'targetArn',\n\n      // the properties below are optional\n      messageFormat: 'messageFormat',\n    },\n    sqs: {\n      queueUrl: 'queueUrl',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      useBase64: false,\n    },\n    stepFunctions: {\n      roleArn: 'roleArn',\n      stateMachineName: 'stateMachineName',\n\n      // the properties below are optional\n      executionNamePrefix: 'executionNamePrefix',\n    },\n    timestream: {\n      databaseName: 'databaseName',\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      timestamp: {\n        unit: 'unit',\n        value: 'value',\n      },\n    },\n  },\n  ruleDisabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 208,
        "75": 301,
        "91": 11,
        "153": 2,
        "169": 1,
        "192": 11,
        "193": 73,
        "197": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 294,
        "290": 1
      },
      "fqnsFingerprint": "a570281cdeb407bd5ae26b5ddd8392a293f76074db95961fecabd653c1dc8381"
    },
    "a74f3a656f4ffdf5f4bf779ebeb24754a5016090862035cfcba13d25febce761": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nuser_property_property = iot.CfnTopicRule.UserPropertyProperty(\n    key=\"key\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nUserPropertyProperty userPropertyProperty = new UserPropertyProperty {\n    Key = \"key\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nUserPropertyProperty userPropertyProperty = UserPropertyProperty.builder()\n        .key(\"key\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nuserPropertyProperty := &userPropertyProperty{\n\tkey: jsii.String(\"key\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst userPropertyProperty: iot.CfnTopicRule.UserPropertyProperty = {\n  key: 'key',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRule.UserPropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRule.UserPropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst userPropertyProperty: iot.CfnTopicRule.UserPropertyProperty = {\n  key: 'key',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "9d4c77a3f3c78b541aacaaea3d2822204b7b2364021ca1225f869c4fa220a2ad"
    },
    "8368ca5d6f47f83ac0fca77a2d61ae0f1a9a14c69bc71a83efb9d359ff4e2dc7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_topic_rule_destination = iot.CfnTopicRuleDestination(self, \"MyCfnTopicRuleDestination\",\n    http_url_properties=iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty(\n        confirmation_url=\"confirmationUrl\"\n    ),\n    status=\"status\",\n    vpc_properties=iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty(\n        role_arn=\"roleArn\",\n        security_groups=[\"securityGroups\"],\n        subnet_ids=[\"subnetIds\"],\n        vpc_id=\"vpcId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnTopicRuleDestination cfnTopicRuleDestination = new CfnTopicRuleDestination(this, \"MyCfnTopicRuleDestination\", new CfnTopicRuleDestinationProps {\n    HttpUrlProperties = new HttpUrlDestinationSummaryProperty {\n        ConfirmationUrl = \"confirmationUrl\"\n    },\n    Status = \"status\",\n    VpcProperties = new VpcDestinationPropertiesProperty {\n        RoleArn = \"roleArn\",\n        SecurityGroups = new [] { \"securityGroups\" },\n        SubnetIds = new [] { \"subnetIds\" },\n        VpcId = \"vpcId\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnTopicRuleDestination cfnTopicRuleDestination = CfnTopicRuleDestination.Builder.create(this, \"MyCfnTopicRuleDestination\")\n        .httpUrlProperties(HttpUrlDestinationSummaryProperty.builder()\n                .confirmationUrl(\"confirmationUrl\")\n                .build())\n        .status(\"status\")\n        .vpcProperties(VpcDestinationPropertiesProperty.builder()\n                .roleArn(\"roleArn\")\n                .securityGroups(List.of(\"securityGroups\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .vpcId(\"vpcId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnTopicRuleDestination := iot.NewCfnTopicRuleDestination(this, jsii.String(\"MyCfnTopicRuleDestination\"), &cfnTopicRuleDestinationProps{\n\thttpUrlProperties: &httpUrlDestinationSummaryProperty{\n\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t},\n\tstatus: jsii.String(\"status\"),\n\tvpcProperties: &vpcDestinationPropertiesProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t\tvpcId: jsii.String(\"vpcId\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnTopicRuleDestination = new iot.CfnTopicRuleDestination(this, 'MyCfnTopicRuleDestination', /* all optional props */ {\n  httpUrlProperties: {\n    confirmationUrl: 'confirmationUrl',\n  },\n  status: 'status',\n  vpcProperties: {\n    roleArn: 'roleArn',\n    securityGroups: ['securityGroups'],\n    subnetIds: ['subnetIds'],\n    vpcId: 'vpcId',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRuleDestination"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRuleDestination",
        "@aws-cdk/aws-iot.CfnTopicRuleDestinationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTopicRuleDestination = new iot.CfnTopicRuleDestination(this, 'MyCfnTopicRuleDestination', /* all optional props */ {\n  httpUrlProperties: {\n    confirmationUrl: 'confirmationUrl',\n  },\n  status: 'status',\n  vpcProperties: {\n    roleArn: 'roleArn',\n    securityGroups: ['securityGroups'],\n    subnetIds: ['subnetIds'],\n    vpcId: 'vpcId',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 12,
        "104": 1,
        "192": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "cfe82d8584e063538edef9cf12eb24e8c92b23777fbee3fe0736a73d4bec62c6"
    },
    "da2cbc32b7903a52f22da74cfdd985c5ada5a7417048be1577770769ccfe78c2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nhttp_url_destination_summary_property = iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty(\n    confirmation_url=\"confirmationUrl\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nHttpUrlDestinationSummaryProperty httpUrlDestinationSummaryProperty = new HttpUrlDestinationSummaryProperty {\n    ConfirmationUrl = \"confirmationUrl\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nHttpUrlDestinationSummaryProperty httpUrlDestinationSummaryProperty = HttpUrlDestinationSummaryProperty.builder()\n        .confirmationUrl(\"confirmationUrl\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nhttpUrlDestinationSummaryProperty := &httpUrlDestinationSummaryProperty{\n\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst httpUrlDestinationSummaryProperty: iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty = {\n  confirmationUrl: 'confirmationUrl',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpUrlDestinationSummaryProperty: iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty = {\n  confirmationUrl: 'confirmationUrl',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "b21eed11413e090c302fa3f7e2de3903c0b2fe5a2986c1fb697f3f4ba3e1978c"
    },
    "8aa4dad5ca1aa540f05cf72ade1941b747d4e7b1da31cee947e9139ab99454b0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\nvpc_destination_properties_property = iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty(\n    role_arn=\"roleArn\",\n    security_groups=[\"securityGroups\"],\n    subnet_ids=[\"subnetIds\"],\n    vpc_id=\"vpcId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nVpcDestinationPropertiesProperty vpcDestinationPropertiesProperty = new VpcDestinationPropertiesProperty {\n    RoleArn = \"roleArn\",\n    SecurityGroups = new [] { \"securityGroups\" },\n    SubnetIds = new [] { \"subnetIds\" },\n    VpcId = \"vpcId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nVpcDestinationPropertiesProperty vpcDestinationPropertiesProperty = VpcDestinationPropertiesProperty.builder()\n        .roleArn(\"roleArn\")\n        .securityGroups(List.of(\"securityGroups\"))\n        .subnetIds(List.of(\"subnetIds\"))\n        .vpcId(\"vpcId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\nvpcDestinationPropertiesProperty := &vpcDestinationPropertiesProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\tvpcId: jsii.String(\"vpcId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst vpcDestinationPropertiesProperty: iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty = {\n  roleArn: 'roleArn',\n  securityGroups: ['securityGroups'],\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcDestinationPropertiesProperty: iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty = {\n  roleArn: 'roleArn',\n  securityGroups: ['securityGroups'],\n  subnetIds: ['subnetIds'],\n  vpcId: 'vpcId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "28639d9f9970bd9be69dba5a6dd054617fec6a3cc7c565b145c6a08c80cfdac6"
    },
    "88eddb38a4b68a2877fa1c09351abc5c60e013a373b4ae0187f648dc43f10fbd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_topic_rule_destination_props = iot.CfnTopicRuleDestinationProps(\n    http_url_properties=iot.CfnTopicRuleDestination.HttpUrlDestinationSummaryProperty(\n        confirmation_url=\"confirmationUrl\"\n    ),\n    status=\"status\",\n    vpc_properties=iot.CfnTopicRuleDestination.VpcDestinationPropertiesProperty(\n        role_arn=\"roleArn\",\n        security_groups=[\"securityGroups\"],\n        subnet_ids=[\"subnetIds\"],\n        vpc_id=\"vpcId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnTopicRuleDestinationProps cfnTopicRuleDestinationProps = new CfnTopicRuleDestinationProps {\n    HttpUrlProperties = new HttpUrlDestinationSummaryProperty {\n        ConfirmationUrl = \"confirmationUrl\"\n    },\n    Status = \"status\",\n    VpcProperties = new VpcDestinationPropertiesProperty {\n        RoleArn = \"roleArn\",\n        SecurityGroups = new [] { \"securityGroups\" },\n        SubnetIds = new [] { \"subnetIds\" },\n        VpcId = \"vpcId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnTopicRuleDestinationProps cfnTopicRuleDestinationProps = CfnTopicRuleDestinationProps.builder()\n        .httpUrlProperties(HttpUrlDestinationSummaryProperty.builder()\n                .confirmationUrl(\"confirmationUrl\")\n                .build())\n        .status(\"status\")\n        .vpcProperties(VpcDestinationPropertiesProperty.builder()\n                .roleArn(\"roleArn\")\n                .securityGroups(List.of(\"securityGroups\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .vpcId(\"vpcId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnTopicRuleDestinationProps := &cfnTopicRuleDestinationProps{\n\thttpUrlProperties: &httpUrlDestinationSummaryProperty{\n\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t},\n\tstatus: jsii.String(\"status\"),\n\tvpcProperties: &vpcDestinationPropertiesProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tsecurityGroups: []*string{\n\t\t\tjsii.String(\"securityGroups\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t\tvpcId: jsii.String(\"vpcId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnTopicRuleDestinationProps: iot.CfnTopicRuleDestinationProps = {\n  httpUrlProperties: {\n    confirmationUrl: 'confirmationUrl',\n  },\n  status: 'status',\n  vpcProperties: {\n    roleArn: 'roleArn',\n    securityGroups: ['securityGroups'],\n    subnetIds: ['subnetIds'],\n    vpcId: 'vpcId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRuleDestinationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRuleDestinationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTopicRuleDestinationProps: iot.CfnTopicRuleDestinationProps = {\n  httpUrlProperties: {\n    confirmationUrl: 'confirmationUrl',\n  },\n  status: 'status',\n  vpcProperties: {\n    roleArn: 'roleArn',\n    securityGroups: ['securityGroups'],\n    subnetIds: ['subnetIds'],\n    vpcId: 'vpcId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "38ebb8b128a2a9f5d7600eff2a7b93313d3cf96ce8d85a39e23f5ce8104f057c"
    },
    "c37b62d1acbabf1bb1e79da86823ae3a70ab0dc5dc680487d879e6e98d398b47": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\ncfn_topic_rule_props = iot.CfnTopicRuleProps(\n    topic_rule_payload=iot.CfnTopicRule.TopicRulePayloadProperty(\n        actions=[iot.CfnTopicRule.ActionProperty(\n            cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n                alarm_name=\"alarmName\",\n                role_arn=\"roleArn\",\n                state_reason=\"stateReason\",\n                state_value=\"stateValue\"\n            ),\n            cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n                log_group_name=\"logGroupName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n                metric_name=\"metricName\",\n                metric_namespace=\"metricNamespace\",\n                metric_unit=\"metricUnit\",\n                metric_value=\"metricValue\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                metric_timestamp=\"metricTimestamp\"\n            ),\n            dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n                hash_key_field=\"hashKeyField\",\n                hash_key_value=\"hashKeyValue\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                hash_key_type=\"hashKeyType\",\n                payload_field=\"payloadField\",\n                range_key_field=\"rangeKeyField\",\n                range_key_type=\"rangeKeyType\",\n                range_key_value=\"rangeKeyValue\"\n            ),\n            dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n                put_item=iot.CfnTopicRule.PutItemInputProperty(\n                    table_name=\"tableName\"\n                ),\n                role_arn=\"roleArn\"\n            ),\n            elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            firehose=iot.CfnTopicRule.FirehoseActionProperty(\n                delivery_stream_name=\"deliveryStreamName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                separator=\"separator\"\n            ),\n            http=iot.CfnTopicRule.HttpActionProperty(\n                url=\"url\",\n\n                # the properties below are optional\n                auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                    sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                        role_arn=\"roleArn\",\n                        service_name=\"serviceName\",\n                        signing_region=\"signingRegion\"\n                    )\n                ),\n                confirmation_url=\"confirmationUrl\",\n                headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n                channel_name=\"channelName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n                input_name=\"inputName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                message_id=\"messageId\"\n            ),\n            iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n                put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                    property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                        timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                            time_in_seconds=\"timeInSeconds\",\n\n                            # the properties below are optional\n                            offset_in_nanos=\"offsetInNanos\"\n                        ),\n                        value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                            boolean_value=\"booleanValue\",\n                            double_value=\"doubleValue\",\n                            integer_value=\"integerValue\",\n                            string_value=\"stringValue\"\n                        ),\n\n                        # the properties below are optional\n                        quality=\"quality\"\n                    )],\n\n                    # the properties below are optional\n                    asset_id=\"assetId\",\n                    entry_id=\"entryId\",\n                    property_alias=\"propertyAlias\",\n                    property_id=\"propertyId\"\n                )],\n                role_arn=\"roleArn\"\n            ),\n            kafka=iot.CfnTopicRule.KafkaActionProperty(\n                client_properties={\n                    \"client_properties_key\": \"clientProperties\"\n                },\n                destination_arn=\"destinationArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                key=\"key\",\n                partition=\"partition\"\n            ),\n            kinesis=iot.CfnTopicRule.KinesisActionProperty(\n                role_arn=\"roleArn\",\n                stream_name=\"streamName\",\n\n                # the properties below are optional\n                partition_key=\"partitionKey\"\n            ),\n            lambda_=iot.CfnTopicRule.LambdaActionProperty(\n                function_arn=\"functionArn\"\n            ),\n            location=iot.CfnTopicRule.LocationActionProperty(\n                device_id=\"deviceId\",\n                latitude=\"latitude\",\n                longitude=\"longitude\",\n                role_arn=\"roleArn\",\n                tracker_name=\"trackerName\",\n\n                # the properties below are optional\n                timestamp=Date()\n            ),\n            open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            republish=iot.CfnTopicRule.RepublishActionProperty(\n                role_arn=\"roleArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                    content_type=\"contentType\",\n                    correlation_data=\"correlationData\",\n                    message_expiry=\"messageExpiry\",\n                    payload_format_indicator=\"payloadFormatIndicator\",\n                    response_topic=\"responseTopic\",\n                    user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                        key=\"key\",\n                        value=\"value\"\n                    )]\n                ),\n                qos=123\n            ),\n            s3=iot.CfnTopicRule.S3ActionProperty(\n                bucket_name=\"bucketName\",\n                key=\"key\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                canned_acl=\"cannedAcl\"\n            ),\n            sns=iot.CfnTopicRule.SnsActionProperty(\n                role_arn=\"roleArn\",\n                target_arn=\"targetArn\",\n\n                # the properties below are optional\n                message_format=\"messageFormat\"\n            ),\n            sqs=iot.CfnTopicRule.SqsActionProperty(\n                queue_url=\"queueUrl\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                use_base64=False\n            ),\n            step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n                role_arn=\"roleArn\",\n                state_machine_name=\"stateMachineName\",\n\n                # the properties below are optional\n                execution_name_prefix=\"executionNamePrefix\"\n            ),\n            timestream=iot.CfnTopicRule.TimestreamActionProperty(\n                database_name=\"databaseName\",\n                dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )],\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                    unit=\"unit\",\n                    value=\"value\"\n                )\n            )\n        )],\n        sql=\"sql\",\n\n        # the properties below are optional\n        aws_iot_sql_version=\"awsIotSqlVersion\",\n        description=\"description\",\n        error_action=iot.CfnTopicRule.ActionProperty(\n            cloudwatch_alarm=iot.CfnTopicRule.CloudwatchAlarmActionProperty(\n                alarm_name=\"alarmName\",\n                role_arn=\"roleArn\",\n                state_reason=\"stateReason\",\n                state_value=\"stateValue\"\n            ),\n            cloudwatch_logs=iot.CfnTopicRule.CloudwatchLogsActionProperty(\n                log_group_name=\"logGroupName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            cloudwatch_metric=iot.CfnTopicRule.CloudwatchMetricActionProperty(\n                metric_name=\"metricName\",\n                metric_namespace=\"metricNamespace\",\n                metric_unit=\"metricUnit\",\n                metric_value=\"metricValue\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                metric_timestamp=\"metricTimestamp\"\n            ),\n            dynamo_db=iot.CfnTopicRule.DynamoDBActionProperty(\n                hash_key_field=\"hashKeyField\",\n                hash_key_value=\"hashKeyValue\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                hash_key_type=\"hashKeyType\",\n                payload_field=\"payloadField\",\n                range_key_field=\"rangeKeyField\",\n                range_key_type=\"rangeKeyType\",\n                range_key_value=\"rangeKeyValue\"\n            ),\n            dynamo_dBv2=iot.CfnTopicRule.DynamoDBv2ActionProperty(\n                put_item=iot.CfnTopicRule.PutItemInputProperty(\n                    table_name=\"tableName\"\n                ),\n                role_arn=\"roleArn\"\n            ),\n            elasticsearch=iot.CfnTopicRule.ElasticsearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            firehose=iot.CfnTopicRule.FirehoseActionProperty(\n                delivery_stream_name=\"deliveryStreamName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                separator=\"separator\"\n            ),\n            http=iot.CfnTopicRule.HttpActionProperty(\n                url=\"url\",\n\n                # the properties below are optional\n                auth=iot.CfnTopicRule.HttpAuthorizationProperty(\n                    sigv4=iot.CfnTopicRule.SigV4AuthorizationProperty(\n                        role_arn=\"roleArn\",\n                        service_name=\"serviceName\",\n                        signing_region=\"signingRegion\"\n                    )\n                ),\n                confirmation_url=\"confirmationUrl\",\n                headers=[iot.CfnTopicRule.HttpActionHeaderProperty(\n                    key=\"key\",\n                    value=\"value\"\n                )]\n            ),\n            iot_analytics=iot.CfnTopicRule.IotAnalyticsActionProperty(\n                channel_name=\"channelName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False\n            ),\n            iot_events=iot.CfnTopicRule.IotEventsActionProperty(\n                input_name=\"inputName\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                batch_mode=False,\n                message_id=\"messageId\"\n            ),\n            iot_site_wise=iot.CfnTopicRule.IotSiteWiseActionProperty(\n                put_asset_property_value_entries=[iot.CfnTopicRule.PutAssetPropertyValueEntryProperty(\n                    property_values=[iot.CfnTopicRule.AssetPropertyValueProperty(\n                        timestamp=iot.CfnTopicRule.AssetPropertyTimestampProperty(\n                            time_in_seconds=\"timeInSeconds\",\n\n                            # the properties below are optional\n                            offset_in_nanos=\"offsetInNanos\"\n                        ),\n                        value=iot.CfnTopicRule.AssetPropertyVariantProperty(\n                            boolean_value=\"booleanValue\",\n                            double_value=\"doubleValue\",\n                            integer_value=\"integerValue\",\n                            string_value=\"stringValue\"\n                        ),\n\n                        # the properties below are optional\n                        quality=\"quality\"\n                    )],\n\n                    # the properties below are optional\n                    asset_id=\"assetId\",\n                    entry_id=\"entryId\",\n                    property_alias=\"propertyAlias\",\n                    property_id=\"propertyId\"\n                )],\n                role_arn=\"roleArn\"\n            ),\n            kafka=iot.CfnTopicRule.KafkaActionProperty(\n                client_properties={\n                    \"client_properties_key\": \"clientProperties\"\n                },\n                destination_arn=\"destinationArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                key=\"key\",\n                partition=\"partition\"\n            ),\n            kinesis=iot.CfnTopicRule.KinesisActionProperty(\n                role_arn=\"roleArn\",\n                stream_name=\"streamName\",\n\n                # the properties below are optional\n                partition_key=\"partitionKey\"\n            ),\n            lambda_=iot.CfnTopicRule.LambdaActionProperty(\n                function_arn=\"functionArn\"\n            ),\n            location=iot.CfnTopicRule.LocationActionProperty(\n                device_id=\"deviceId\",\n                latitude=\"latitude\",\n                longitude=\"longitude\",\n                role_arn=\"roleArn\",\n                tracker_name=\"trackerName\",\n\n                # the properties below are optional\n                timestamp=Date()\n            ),\n            open_search=iot.CfnTopicRule.OpenSearchActionProperty(\n                endpoint=\"endpoint\",\n                id=\"id\",\n                index=\"index\",\n                role_arn=\"roleArn\",\n                type=\"type\"\n            ),\n            republish=iot.CfnTopicRule.RepublishActionProperty(\n                role_arn=\"roleArn\",\n                topic=\"topic\",\n\n                # the properties below are optional\n                headers=iot.CfnTopicRule.RepublishActionHeadersProperty(\n                    content_type=\"contentType\",\n                    correlation_data=\"correlationData\",\n                    message_expiry=\"messageExpiry\",\n                    payload_format_indicator=\"payloadFormatIndicator\",\n                    response_topic=\"responseTopic\",\n                    user_properties=[iot.CfnTopicRule.UserPropertyProperty(\n                        key=\"key\",\n                        value=\"value\"\n                    )]\n                ),\n                qos=123\n            ),\n            s3=iot.CfnTopicRule.S3ActionProperty(\n                bucket_name=\"bucketName\",\n                key=\"key\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                canned_acl=\"cannedAcl\"\n            ),\n            sns=iot.CfnTopicRule.SnsActionProperty(\n                role_arn=\"roleArn\",\n                target_arn=\"targetArn\",\n\n                # the properties below are optional\n                message_format=\"messageFormat\"\n            ),\n            sqs=iot.CfnTopicRule.SqsActionProperty(\n                queue_url=\"queueUrl\",\n                role_arn=\"roleArn\",\n\n                # the properties below are optional\n                use_base64=False\n            ),\n            step_functions=iot.CfnTopicRule.StepFunctionsActionProperty(\n                role_arn=\"roleArn\",\n                state_machine_name=\"stateMachineName\",\n\n                # the properties below are optional\n                execution_name_prefix=\"executionNamePrefix\"\n            ),\n            timestream=iot.CfnTopicRule.TimestreamActionProperty(\n                database_name=\"databaseName\",\n                dimensions=[iot.CfnTopicRule.TimestreamDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )],\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n\n                # the properties below are optional\n                timestamp=iot.CfnTopicRule.TimestreamTimestampProperty(\n                    unit=\"unit\",\n                    value=\"value\"\n                )\n            )\n        ),\n        rule_disabled=False\n    ),\n\n    # the properties below are optional\n    rule_name=\"ruleName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nCfnTopicRuleProps cfnTopicRuleProps = new CfnTopicRuleProps {\n    TopicRulePayload = new TopicRulePayloadProperty {\n        Actions = new [] { new ActionProperty {\n            CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n                AlarmName = \"alarmName\",\n                RoleArn = \"roleArn\",\n                StateReason = \"stateReason\",\n                StateValue = \"stateValue\"\n            },\n            CloudwatchLogs = new CloudwatchLogsActionProperty {\n                LogGroupName = \"logGroupName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            CloudwatchMetric = new CloudwatchMetricActionProperty {\n                MetricName = \"metricName\",\n                MetricNamespace = \"metricNamespace\",\n                MetricUnit = \"metricUnit\",\n                MetricValue = \"metricValue\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                MetricTimestamp = \"metricTimestamp\"\n            },\n            DynamoDb = new DynamoDBActionProperty {\n                HashKeyField = \"hashKeyField\",\n                HashKeyValue = \"hashKeyValue\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                HashKeyType = \"hashKeyType\",\n                PayloadField = \"payloadField\",\n                RangeKeyField = \"rangeKeyField\",\n                RangeKeyType = \"rangeKeyType\",\n                RangeKeyValue = \"rangeKeyValue\"\n            },\n            DynamoDBv2 = new DynamoDBv2ActionProperty {\n                PutItem = new PutItemInputProperty {\n                    TableName = \"tableName\"\n                },\n                RoleArn = \"roleArn\"\n            },\n            Elasticsearch = new ElasticsearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Firehose = new FirehoseActionProperty {\n                DeliveryStreamName = \"deliveryStreamName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                Separator = \"separator\"\n            },\n            Http = new HttpActionProperty {\n                Url = \"url\",\n\n                // the properties below are optional\n                Auth = new HttpAuthorizationProperty {\n                    Sigv4 = new SigV4AuthorizationProperty {\n                        RoleArn = \"roleArn\",\n                        ServiceName = \"serviceName\",\n                        SigningRegion = \"signingRegion\"\n                    }\n                },\n                ConfirmationUrl = \"confirmationUrl\",\n                Headers = new [] { new HttpActionHeaderProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            IotAnalytics = new IotAnalyticsActionProperty {\n                ChannelName = \"channelName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            IotEvents = new IotEventsActionProperty {\n                InputName = \"inputName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                MessageId = \"messageId\"\n            },\n            IotSiteWise = new IotSiteWiseActionProperty {\n                PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                    PropertyValues = new [] { new AssetPropertyValueProperty {\n                        Timestamp = new AssetPropertyTimestampProperty {\n                            TimeInSeconds = \"timeInSeconds\",\n\n                            // the properties below are optional\n                            OffsetInNanos = \"offsetInNanos\"\n                        },\n                        Value = new AssetPropertyVariantProperty {\n                            BooleanValue = \"booleanValue\",\n                            DoubleValue = \"doubleValue\",\n                            IntegerValue = \"integerValue\",\n                            StringValue = \"stringValue\"\n                        },\n\n                        // the properties below are optional\n                        Quality = \"quality\"\n                    } },\n\n                    // the properties below are optional\n                    AssetId = \"assetId\",\n                    EntryId = \"entryId\",\n                    PropertyAlias = \"propertyAlias\",\n                    PropertyId = \"propertyId\"\n                } },\n                RoleArn = \"roleArn\"\n            },\n            Kafka = new KafkaActionProperty {\n                ClientProperties = new Dictionary<string, string> {\n                    { \"clientPropertiesKey\", \"clientProperties\" }\n                },\n                DestinationArn = \"destinationArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Key = \"key\",\n                Partition = \"partition\"\n            },\n            Kinesis = new KinesisActionProperty {\n                RoleArn = \"roleArn\",\n                StreamName = \"streamName\",\n\n                // the properties below are optional\n                PartitionKey = \"partitionKey\"\n            },\n            Lambda = new LambdaActionProperty {\n                FunctionArn = \"functionArn\"\n            },\n            Location = new LocationActionProperty {\n                DeviceId = \"deviceId\",\n                Latitude = \"latitude\",\n                Longitude = \"longitude\",\n                RoleArn = \"roleArn\",\n                TrackerName = \"trackerName\",\n\n                // the properties below are optional\n                Timestamp = new Date()\n            },\n            OpenSearch = new OpenSearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Republish = new RepublishActionProperty {\n                RoleArn = \"roleArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Headers = new RepublishActionHeadersProperty {\n                    ContentType = \"contentType\",\n                    CorrelationData = \"correlationData\",\n                    MessageExpiry = \"messageExpiry\",\n                    PayloadFormatIndicator = \"payloadFormatIndicator\",\n                    ResponseTopic = \"responseTopic\",\n                    UserProperties = new [] { new UserPropertyProperty {\n                        Key = \"key\",\n                        Value = \"value\"\n                    } }\n                },\n                Qos = 123\n            },\n            S3 = new S3ActionProperty {\n                BucketName = \"bucketName\",\n                Key = \"key\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                CannedAcl = \"cannedAcl\"\n            },\n            Sns = new SnsActionProperty {\n                RoleArn = \"roleArn\",\n                TargetArn = \"targetArn\",\n\n                // the properties below are optional\n                MessageFormat = \"messageFormat\"\n            },\n            Sqs = new SqsActionProperty {\n                QueueUrl = \"queueUrl\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                UseBase64 = false\n            },\n            StepFunctions = new StepFunctionsActionProperty {\n                RoleArn = \"roleArn\",\n                StateMachineName = \"stateMachineName\",\n\n                // the properties below are optional\n                ExecutionNamePrefix = \"executionNamePrefix\"\n            },\n            Timestream = new TimestreamActionProperty {\n                DatabaseName = \"databaseName\",\n                Dimensions = new [] { new TimestreamDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } },\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                Timestamp = new TimestreamTimestampProperty {\n                    Unit = \"unit\",\n                    Value = \"value\"\n                }\n            }\n        } },\n        Sql = \"sql\",\n\n        // the properties below are optional\n        AwsIotSqlVersion = \"awsIotSqlVersion\",\n        Description = \"description\",\n        ErrorAction = new ActionProperty {\n            CloudwatchAlarm = new CloudwatchAlarmActionProperty {\n                AlarmName = \"alarmName\",\n                RoleArn = \"roleArn\",\n                StateReason = \"stateReason\",\n                StateValue = \"stateValue\"\n            },\n            CloudwatchLogs = new CloudwatchLogsActionProperty {\n                LogGroupName = \"logGroupName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            CloudwatchMetric = new CloudwatchMetricActionProperty {\n                MetricName = \"metricName\",\n                MetricNamespace = \"metricNamespace\",\n                MetricUnit = \"metricUnit\",\n                MetricValue = \"metricValue\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                MetricTimestamp = \"metricTimestamp\"\n            },\n            DynamoDb = new DynamoDBActionProperty {\n                HashKeyField = \"hashKeyField\",\n                HashKeyValue = \"hashKeyValue\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                HashKeyType = \"hashKeyType\",\n                PayloadField = \"payloadField\",\n                RangeKeyField = \"rangeKeyField\",\n                RangeKeyType = \"rangeKeyType\",\n                RangeKeyValue = \"rangeKeyValue\"\n            },\n            DynamoDBv2 = new DynamoDBv2ActionProperty {\n                PutItem = new PutItemInputProperty {\n                    TableName = \"tableName\"\n                },\n                RoleArn = \"roleArn\"\n            },\n            Elasticsearch = new ElasticsearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Firehose = new FirehoseActionProperty {\n                DeliveryStreamName = \"deliveryStreamName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                Separator = \"separator\"\n            },\n            Http = new HttpActionProperty {\n                Url = \"url\",\n\n                // the properties below are optional\n                Auth = new HttpAuthorizationProperty {\n                    Sigv4 = new SigV4AuthorizationProperty {\n                        RoleArn = \"roleArn\",\n                        ServiceName = \"serviceName\",\n                        SigningRegion = \"signingRegion\"\n                    }\n                },\n                ConfirmationUrl = \"confirmationUrl\",\n                Headers = new [] { new HttpActionHeaderProperty {\n                    Key = \"key\",\n                    Value = \"value\"\n                } }\n            },\n            IotAnalytics = new IotAnalyticsActionProperty {\n                ChannelName = \"channelName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false\n            },\n            IotEvents = new IotEventsActionProperty {\n                InputName = \"inputName\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                BatchMode = false,\n                MessageId = \"messageId\"\n            },\n            IotSiteWise = new IotSiteWiseActionProperty {\n                PutAssetPropertyValueEntries = new [] { new PutAssetPropertyValueEntryProperty {\n                    PropertyValues = new [] { new AssetPropertyValueProperty {\n                        Timestamp = new AssetPropertyTimestampProperty {\n                            TimeInSeconds = \"timeInSeconds\",\n\n                            // the properties below are optional\n                            OffsetInNanos = \"offsetInNanos\"\n                        },\n                        Value = new AssetPropertyVariantProperty {\n                            BooleanValue = \"booleanValue\",\n                            DoubleValue = \"doubleValue\",\n                            IntegerValue = \"integerValue\",\n                            StringValue = \"stringValue\"\n                        },\n\n                        // the properties below are optional\n                        Quality = \"quality\"\n                    } },\n\n                    // the properties below are optional\n                    AssetId = \"assetId\",\n                    EntryId = \"entryId\",\n                    PropertyAlias = \"propertyAlias\",\n                    PropertyId = \"propertyId\"\n                } },\n                RoleArn = \"roleArn\"\n            },\n            Kafka = new KafkaActionProperty {\n                ClientProperties = new Dictionary<string, string> {\n                    { \"clientPropertiesKey\", \"clientProperties\" }\n                },\n                DestinationArn = \"destinationArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Key = \"key\",\n                Partition = \"partition\"\n            },\n            Kinesis = new KinesisActionProperty {\n                RoleArn = \"roleArn\",\n                StreamName = \"streamName\",\n\n                // the properties below are optional\n                PartitionKey = \"partitionKey\"\n            },\n            Lambda = new LambdaActionProperty {\n                FunctionArn = \"functionArn\"\n            },\n            Location = new LocationActionProperty {\n                DeviceId = \"deviceId\",\n                Latitude = \"latitude\",\n                Longitude = \"longitude\",\n                RoleArn = \"roleArn\",\n                TrackerName = \"trackerName\",\n\n                // the properties below are optional\n                Timestamp = new Date()\n            },\n            OpenSearch = new OpenSearchActionProperty {\n                Endpoint = \"endpoint\",\n                Id = \"id\",\n                Index = \"index\",\n                RoleArn = \"roleArn\",\n                Type = \"type\"\n            },\n            Republish = new RepublishActionProperty {\n                RoleArn = \"roleArn\",\n                Topic = \"topic\",\n\n                // the properties below are optional\n                Headers = new RepublishActionHeadersProperty {\n                    ContentType = \"contentType\",\n                    CorrelationData = \"correlationData\",\n                    MessageExpiry = \"messageExpiry\",\n                    PayloadFormatIndicator = \"payloadFormatIndicator\",\n                    ResponseTopic = \"responseTopic\",\n                    UserProperties = new [] { new UserPropertyProperty {\n                        Key = \"key\",\n                        Value = \"value\"\n                    } }\n                },\n                Qos = 123\n            },\n            S3 = new S3ActionProperty {\n                BucketName = \"bucketName\",\n                Key = \"key\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                CannedAcl = \"cannedAcl\"\n            },\n            Sns = new SnsActionProperty {\n                RoleArn = \"roleArn\",\n                TargetArn = \"targetArn\",\n\n                // the properties below are optional\n                MessageFormat = \"messageFormat\"\n            },\n            Sqs = new SqsActionProperty {\n                QueueUrl = \"queueUrl\",\n                RoleArn = \"roleArn\",\n\n                // the properties below are optional\n                UseBase64 = false\n            },\n            StepFunctions = new StepFunctionsActionProperty {\n                RoleArn = \"roleArn\",\n                StateMachineName = \"stateMachineName\",\n\n                // the properties below are optional\n                ExecutionNamePrefix = \"executionNamePrefix\"\n            },\n            Timestream = new TimestreamActionProperty {\n                DatabaseName = \"databaseName\",\n                Dimensions = new [] { new TimestreamDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } },\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n\n                // the properties below are optional\n                Timestamp = new TimestreamTimestampProperty {\n                    Unit = \"unit\",\n                    Value = \"value\"\n                }\n            }\n        },\n        RuleDisabled = false\n    },\n\n    // the properties below are optional\n    RuleName = \"ruleName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nCfnTopicRuleProps cfnTopicRuleProps = CfnTopicRuleProps.builder()\n        .topicRulePayload(TopicRulePayloadProperty.builder()\n                .actions(List.of(ActionProperty.builder()\n                        .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                                .alarmName(\"alarmName\")\n                                .roleArn(\"roleArn\")\n                                .stateReason(\"stateReason\")\n                                .stateValue(\"stateValue\")\n                                .build())\n                        .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                                .logGroupName(\"logGroupName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                                .metricName(\"metricName\")\n                                .metricNamespace(\"metricNamespace\")\n                                .metricUnit(\"metricUnit\")\n                                .metricValue(\"metricValue\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .metricTimestamp(\"metricTimestamp\")\n                                .build())\n                        .dynamoDb(DynamoDBActionProperty.builder()\n                                .hashKeyField(\"hashKeyField\")\n                                .hashKeyValue(\"hashKeyValue\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .hashKeyType(\"hashKeyType\")\n                                .payloadField(\"payloadField\")\n                                .rangeKeyField(\"rangeKeyField\")\n                                .rangeKeyType(\"rangeKeyType\")\n                                .rangeKeyValue(\"rangeKeyValue\")\n                                .build())\n                        .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                                .putItem(PutItemInputProperty.builder()\n                                        .tableName(\"tableName\")\n                                        .build())\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .elasticsearch(ElasticsearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .firehose(FirehoseActionProperty.builder()\n                                .deliveryStreamName(\"deliveryStreamName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .separator(\"separator\")\n                                .build())\n                        .http(HttpActionProperty.builder()\n                                .url(\"url\")\n\n                                // the properties below are optional\n                                .auth(HttpAuthorizationProperty.builder()\n                                        .sigv4(SigV4AuthorizationProperty.builder()\n                                                .roleArn(\"roleArn\")\n                                                .serviceName(\"serviceName\")\n                                                .signingRegion(\"signingRegion\")\n                                                .build())\n                                        .build())\n                                .confirmationUrl(\"confirmationUrl\")\n                                .headers(List.of(HttpActionHeaderProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .iotAnalytics(IotAnalyticsActionProperty.builder()\n                                .channelName(\"channelName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .iotEvents(IotEventsActionProperty.builder()\n                                .inputName(\"inputName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .messageId(\"messageId\")\n                                .build())\n                        .iotSiteWise(IotSiteWiseActionProperty.builder()\n                                .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                        .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                                .timestamp(AssetPropertyTimestampProperty.builder()\n                                                        .timeInSeconds(\"timeInSeconds\")\n\n                                                        // the properties below are optional\n                                                        .offsetInNanos(\"offsetInNanos\")\n                                                        .build())\n                                                .value(AssetPropertyVariantProperty.builder()\n                                                        .booleanValue(\"booleanValue\")\n                                                        .doubleValue(\"doubleValue\")\n                                                        .integerValue(\"integerValue\")\n                                                        .stringValue(\"stringValue\")\n                                                        .build())\n\n                                                // the properties below are optional\n                                                .quality(\"quality\")\n                                                .build()))\n\n                                        // the properties below are optional\n                                        .assetId(\"assetId\")\n                                        .entryId(\"entryId\")\n                                        .propertyAlias(\"propertyAlias\")\n                                        .propertyId(\"propertyId\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .kafka(KafkaActionProperty.builder()\n                                .clientProperties(Map.of(\n                                        \"clientPropertiesKey\", \"clientProperties\"))\n                                .destinationArn(\"destinationArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .key(\"key\")\n                                .partition(\"partition\")\n                                .build())\n                        .kinesis(KinesisActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .streamName(\"streamName\")\n\n                                // the properties below are optional\n                                .partitionKey(\"partitionKey\")\n                                .build())\n                        .lambda(LambdaActionProperty.builder()\n                                .functionArn(\"functionArn\")\n                                .build())\n                        .location(LocationActionProperty.builder()\n                                .deviceId(\"deviceId\")\n                                .latitude(\"latitude\")\n                                .longitude(\"longitude\")\n                                .roleArn(\"roleArn\")\n                                .trackerName(\"trackerName\")\n\n                                // the properties below are optional\n                                .timestamp(new Date())\n                                .build())\n                        .openSearch(OpenSearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .republish(RepublishActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .headers(RepublishActionHeadersProperty.builder()\n                                        .contentType(\"contentType\")\n                                        .correlationData(\"correlationData\")\n                                        .messageExpiry(\"messageExpiry\")\n                                        .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                        .responseTopic(\"responseTopic\")\n                                        .userProperties(List.of(UserPropertyProperty.builder()\n                                                .key(\"key\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .qos(123)\n                                .build())\n                        .s3(S3ActionProperty.builder()\n                                .bucketName(\"bucketName\")\n                                .key(\"key\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .cannedAcl(\"cannedAcl\")\n                                .build())\n                        .sns(SnsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .targetArn(\"targetArn\")\n\n                                // the properties below are optional\n                                .messageFormat(\"messageFormat\")\n                                .build())\n                        .sqs(SqsActionProperty.builder()\n                                .queueUrl(\"queueUrl\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .useBase64(false)\n                                .build())\n                        .stepFunctions(StepFunctionsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .stateMachineName(\"stateMachineName\")\n\n                                // the properties below are optional\n                                .executionNamePrefix(\"executionNamePrefix\")\n                                .build())\n                        .timestream(TimestreamActionProperty.builder()\n                                .databaseName(\"databaseName\")\n                                .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .timestamp(TimestreamTimestampProperty.builder()\n                                        .unit(\"unit\")\n                                        .value(\"value\")\n                                        .build())\n                                .build())\n                        .build()))\n                .sql(\"sql\")\n\n                // the properties below are optional\n                .awsIotSqlVersion(\"awsIotSqlVersion\")\n                .description(\"description\")\n                .errorAction(ActionProperty.builder()\n                        .cloudwatchAlarm(CloudwatchAlarmActionProperty.builder()\n                                .alarmName(\"alarmName\")\n                                .roleArn(\"roleArn\")\n                                .stateReason(\"stateReason\")\n                                .stateValue(\"stateValue\")\n                                .build())\n                        .cloudwatchLogs(CloudwatchLogsActionProperty.builder()\n                                .logGroupName(\"logGroupName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .cloudwatchMetric(CloudwatchMetricActionProperty.builder()\n                                .metricName(\"metricName\")\n                                .metricNamespace(\"metricNamespace\")\n                                .metricUnit(\"metricUnit\")\n                                .metricValue(\"metricValue\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .metricTimestamp(\"metricTimestamp\")\n                                .build())\n                        .dynamoDb(DynamoDBActionProperty.builder()\n                                .hashKeyField(\"hashKeyField\")\n                                .hashKeyValue(\"hashKeyValue\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .hashKeyType(\"hashKeyType\")\n                                .payloadField(\"payloadField\")\n                                .rangeKeyField(\"rangeKeyField\")\n                                .rangeKeyType(\"rangeKeyType\")\n                                .rangeKeyValue(\"rangeKeyValue\")\n                                .build())\n                        .dynamoDBv2(DynamoDBv2ActionProperty.builder()\n                                .putItem(PutItemInputProperty.builder()\n                                        .tableName(\"tableName\")\n                                        .build())\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .elasticsearch(ElasticsearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .firehose(FirehoseActionProperty.builder()\n                                .deliveryStreamName(\"deliveryStreamName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .separator(\"separator\")\n                                .build())\n                        .http(HttpActionProperty.builder()\n                                .url(\"url\")\n\n                                // the properties below are optional\n                                .auth(HttpAuthorizationProperty.builder()\n                                        .sigv4(SigV4AuthorizationProperty.builder()\n                                                .roleArn(\"roleArn\")\n                                                .serviceName(\"serviceName\")\n                                                .signingRegion(\"signingRegion\")\n                                                .build())\n                                        .build())\n                                .confirmationUrl(\"confirmationUrl\")\n                                .headers(List.of(HttpActionHeaderProperty.builder()\n                                        .key(\"key\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .iotAnalytics(IotAnalyticsActionProperty.builder()\n                                .channelName(\"channelName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .build())\n                        .iotEvents(IotEventsActionProperty.builder()\n                                .inputName(\"inputName\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .batchMode(false)\n                                .messageId(\"messageId\")\n                                .build())\n                        .iotSiteWise(IotSiteWiseActionProperty.builder()\n                                .putAssetPropertyValueEntries(List.of(PutAssetPropertyValueEntryProperty.builder()\n                                        .propertyValues(List.of(AssetPropertyValueProperty.builder()\n                                                .timestamp(AssetPropertyTimestampProperty.builder()\n                                                        .timeInSeconds(\"timeInSeconds\")\n\n                                                        // the properties below are optional\n                                                        .offsetInNanos(\"offsetInNanos\")\n                                                        .build())\n                                                .value(AssetPropertyVariantProperty.builder()\n                                                        .booleanValue(\"booleanValue\")\n                                                        .doubleValue(\"doubleValue\")\n                                                        .integerValue(\"integerValue\")\n                                                        .stringValue(\"stringValue\")\n                                                        .build())\n\n                                                // the properties below are optional\n                                                .quality(\"quality\")\n                                                .build()))\n\n                                        // the properties below are optional\n                                        .assetId(\"assetId\")\n                                        .entryId(\"entryId\")\n                                        .propertyAlias(\"propertyAlias\")\n                                        .propertyId(\"propertyId\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .build())\n                        .kafka(KafkaActionProperty.builder()\n                                .clientProperties(Map.of(\n                                        \"clientPropertiesKey\", \"clientProperties\"))\n                                .destinationArn(\"destinationArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .key(\"key\")\n                                .partition(\"partition\")\n                                .build())\n                        .kinesis(KinesisActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .streamName(\"streamName\")\n\n                                // the properties below are optional\n                                .partitionKey(\"partitionKey\")\n                                .build())\n                        .lambda(LambdaActionProperty.builder()\n                                .functionArn(\"functionArn\")\n                                .build())\n                        .location(LocationActionProperty.builder()\n                                .deviceId(\"deviceId\")\n                                .latitude(\"latitude\")\n                                .longitude(\"longitude\")\n                                .roleArn(\"roleArn\")\n                                .trackerName(\"trackerName\")\n\n                                // the properties below are optional\n                                .timestamp(new Date())\n                                .build())\n                        .openSearch(OpenSearchActionProperty.builder()\n                                .endpoint(\"endpoint\")\n                                .id(\"id\")\n                                .index(\"index\")\n                                .roleArn(\"roleArn\")\n                                .type(\"type\")\n                                .build())\n                        .republish(RepublishActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .topic(\"topic\")\n\n                                // the properties below are optional\n                                .headers(RepublishActionHeadersProperty.builder()\n                                        .contentType(\"contentType\")\n                                        .correlationData(\"correlationData\")\n                                        .messageExpiry(\"messageExpiry\")\n                                        .payloadFormatIndicator(\"payloadFormatIndicator\")\n                                        .responseTopic(\"responseTopic\")\n                                        .userProperties(List.of(UserPropertyProperty.builder()\n                                                .key(\"key\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .qos(123)\n                                .build())\n                        .s3(S3ActionProperty.builder()\n                                .bucketName(\"bucketName\")\n                                .key(\"key\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .cannedAcl(\"cannedAcl\")\n                                .build())\n                        .sns(SnsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .targetArn(\"targetArn\")\n\n                                // the properties below are optional\n                                .messageFormat(\"messageFormat\")\n                                .build())\n                        .sqs(SqsActionProperty.builder()\n                                .queueUrl(\"queueUrl\")\n                                .roleArn(\"roleArn\")\n\n                                // the properties below are optional\n                                .useBase64(false)\n                                .build())\n                        .stepFunctions(StepFunctionsActionProperty.builder()\n                                .roleArn(\"roleArn\")\n                                .stateMachineName(\"stateMachineName\")\n\n                                // the properties below are optional\n                                .executionNamePrefix(\"executionNamePrefix\")\n                                .build())\n                        .timestream(TimestreamActionProperty.builder()\n                                .databaseName(\"databaseName\")\n                                .dimensions(List.of(TimestreamDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n\n                                // the properties below are optional\n                                .timestamp(TimestreamTimestampProperty.builder()\n                                        .unit(\"unit\")\n                                        .value(\"value\")\n                                        .build())\n                                .build())\n                        .build())\n                .ruleDisabled(false)\n                .build())\n\n        // the properties below are optional\n        .ruleName(\"ruleName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\ncfnTopicRuleProps := &cfnTopicRuleProps{\n\ttopicRulePayload: &topicRulePayloadProperty{\n\t\tactions: []interface{}{\n\t\t\t&actionProperty{\n\t\t\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t\t\t},\n\t\t\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t\t\t},\n\t\t\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t\t\t},\n\t\t\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\t\t\tputItem: &putItemInputProperty{\n\t\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\t\t},\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t},\n\t\t\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t\tfirehose: &firehoseActionProperty{\n\t\t\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t\tseparator: jsii.String(\"separator\"),\n\t\t\t\t},\n\t\t\t\thttp: &httpActionProperty{\n\t\t\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\t\t\theaders: []interface{}{\n\t\t\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tiotEvents: &iotEventsActionProperty{\n\t\t\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t\t\t},\n\t\t\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t},\n\t\t\t\tkafka: &kafkaActionProperty{\n\t\t\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t\t\t},\n\t\t\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\tpartition: jsii.String(\"partition\"),\n\t\t\t\t},\n\t\t\t\tkinesis: &kinesisActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t\t\t},\n\t\t\t\tlambda: &lambdaActionProperty{\n\t\t\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t\t\t},\n\t\t\t\tlocation: &locationActionProperty{\n\t\t\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ttimestamp: NewDate(),\n\t\t\t\t},\n\t\t\t\topenSearch: &openSearchActionProperty{\n\t\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t\trepublish: &republishActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tqos: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\ts3: &s3ActionProperty{\n\t\t\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t\t\t},\n\t\t\t\tsns: &snsActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t\t\t},\n\t\t\t\tsqs: &sqsActionProperty{\n\t\t\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tuseBase64: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t\t\t},\n\t\t\t\ttimestream: &timestreamActionProperty{\n\t\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tsql: jsii.String(\"sql\"),\n\n\t\t// the properties below are optional\n\t\tawsIotSqlVersion: jsii.String(\"awsIotSqlVersion\"),\n\t\tdescription: jsii.String(\"description\"),\n\t\terrorAction: &actionProperty{\n\t\t\tcloudwatchAlarm: &cloudwatchAlarmActionProperty{\n\t\t\t\talarmName: jsii.String(\"alarmName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstateReason: jsii.String(\"stateReason\"),\n\t\t\t\tstateValue: jsii.String(\"stateValue\"),\n\t\t\t},\n\t\t\tcloudwatchLogs: &cloudwatchLogsActionProperty{\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t},\n\t\t\tcloudwatchMetric: &cloudwatchMetricActionProperty{\n\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\tmetricNamespace: jsii.String(\"metricNamespace\"),\n\t\t\t\tmetricUnit: jsii.String(\"metricUnit\"),\n\t\t\t\tmetricValue: jsii.String(\"metricValue\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmetricTimestamp: jsii.String(\"metricTimestamp\"),\n\t\t\t},\n\t\t\tdynamoDb: &dynamoDBActionProperty{\n\t\t\t\thashKeyField: jsii.String(\"hashKeyField\"),\n\t\t\t\thashKeyValue: jsii.String(\"hashKeyValue\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\thashKeyType: jsii.String(\"hashKeyType\"),\n\t\t\t\tpayloadField: jsii.String(\"payloadField\"),\n\t\t\t\trangeKeyField: jsii.String(\"rangeKeyField\"),\n\t\t\t\trangeKeyType: jsii.String(\"rangeKeyType\"),\n\t\t\t\trangeKeyValue: jsii.String(\"rangeKeyValue\"),\n\t\t\t},\n\t\t\tdynamoDBv2: &dynamoDBv2ActionProperty{\n\t\t\t\tputItem: &putItemInputProperty{\n\t\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\telasticsearch: &elasticsearchActionProperty{\n\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t\tfirehose: &firehoseActionProperty{\n\t\t\t\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\tseparator: jsii.String(\"separator\"),\n\t\t\t},\n\t\t\thttp: &httpActionProperty{\n\t\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tauth: &httpAuthorizationProperty{\n\t\t\t\t\tsigv4: &sigV4AuthorizationProperty{\n\t\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\t\tserviceName: jsii.String(\"serviceName\"),\n\t\t\t\t\t\tsigningRegion: jsii.String(\"signingRegion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tconfirmationUrl: jsii.String(\"confirmationUrl\"),\n\t\t\t\theaders: []interface{}{\n\t\t\t\t\t&httpActionHeaderProperty{\n\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tiotAnalytics: &iotAnalyticsActionProperty{\n\t\t\t\tchannelName: jsii.String(\"channelName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t},\n\t\t\tiotEvents: &iotEventsActionProperty{\n\t\t\t\tinputName: jsii.String(\"inputName\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tbatchMode: jsii.Boolean(false),\n\t\t\t\tmessageId: jsii.String(\"messageId\"),\n\t\t\t},\n\t\t\tiotSiteWise: &iotSiteWiseActionProperty{\n\t\t\t\tputAssetPropertyValueEntries: []interface{}{\n\t\t\t\t\t&putAssetPropertyValueEntryProperty{\n\t\t\t\t\t\tpropertyValues: []interface{}{\n\t\t\t\t\t\t\t&assetPropertyValueProperty{\n\t\t\t\t\t\t\t\ttimestamp: &assetPropertyTimestampProperty{\n\t\t\t\t\t\t\t\t\ttimeInSeconds: jsii.String(\"timeInSeconds\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\toffsetInNanos: jsii.String(\"offsetInNanos\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvalue: &assetPropertyVariantProperty{\n\t\t\t\t\t\t\t\t\tbooleanValue: jsii.String(\"booleanValue\"),\n\t\t\t\t\t\t\t\t\tdoubleValue: jsii.String(\"doubleValue\"),\n\t\t\t\t\t\t\t\t\tintegerValue: jsii.String(\"integerValue\"),\n\t\t\t\t\t\t\t\t\tstringValue: jsii.String(\"stringValue\"),\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tquality: jsii.String(\"quality\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tassetId: jsii.String(\"assetId\"),\n\t\t\t\t\t\tentryId: jsii.String(\"entryId\"),\n\t\t\t\t\t\tpropertyAlias: jsii.String(\"propertyAlias\"),\n\t\t\t\t\t\tpropertyId: jsii.String(\"propertyId\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t},\n\t\t\tkafka: &kafkaActionProperty{\n\t\t\t\tclientProperties: map[string]*string{\n\t\t\t\t\t\"clientPropertiesKey\": jsii.String(\"clientProperties\"),\n\t\t\t\t},\n\t\t\t\tdestinationArn: jsii.String(\"destinationArn\"),\n\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\tpartition: jsii.String(\"partition\"),\n\t\t\t},\n\t\t\tkinesis: &kinesisActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstreamName: jsii.String(\"streamName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tpartitionKey: jsii.String(\"partitionKey\"),\n\t\t\t},\n\t\t\tlambda: &lambdaActionProperty{\n\t\t\t\tfunctionArn: jsii.String(\"functionArn\"),\n\t\t\t},\n\t\t\tlocation: &locationActionProperty{\n\t\t\t\tdeviceId: jsii.String(\"deviceId\"),\n\t\t\t\tlatitude: jsii.String(\"latitude\"),\n\t\t\t\tlongitude: jsii.String(\"longitude\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttrackerName: jsii.String(\"trackerName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttimestamp: NewDate(),\n\t\t\t},\n\t\t\topenSearch: &openSearchActionProperty{\n\t\t\t\tendpoint: jsii.String(\"endpoint\"),\n\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\tindex: jsii.String(\"index\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t\trepublish: &republishActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttopic: jsii.String(\"topic\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\theaders: &republishActionHeadersProperty{\n\t\t\t\t\tcontentType: jsii.String(\"contentType\"),\n\t\t\t\t\tcorrelationData: jsii.String(\"correlationData\"),\n\t\t\t\t\tmessageExpiry: jsii.String(\"messageExpiry\"),\n\t\t\t\t\tpayloadFormatIndicator: jsii.String(\"payloadFormatIndicator\"),\n\t\t\t\t\tresponseTopic: jsii.String(\"responseTopic\"),\n\t\t\t\t\tuserProperties: []interface{}{\n\t\t\t\t\t\t&userPropertyProperty{\n\t\t\t\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tqos: jsii.Number(123),\n\t\t\t},\n\t\t\ts3: &s3ActionProperty{\n\t\t\t\tbucketName: jsii.String(\"bucketName\"),\n\t\t\t\tkey: jsii.String(\"key\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcannedAcl: jsii.String(\"cannedAcl\"),\n\t\t\t},\n\t\t\tsns: &snsActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttargetArn: jsii.String(\"targetArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tmessageFormat: jsii.String(\"messageFormat\"),\n\t\t\t},\n\t\t\tsqs: &sqsActionProperty{\n\t\t\t\tqueueUrl: jsii.String(\"queueUrl\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tuseBase64: jsii.Boolean(false),\n\t\t\t},\n\t\t\tstepFunctions: &stepFunctionsActionProperty{\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\tstateMachineName: jsii.String(\"stateMachineName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texecutionNamePrefix: jsii.String(\"executionNamePrefix\"),\n\t\t\t},\n\t\t\ttimestream: &timestreamActionProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t&timestreamDimensionProperty{\n\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\ttimestamp: &timestreamTimestampProperty{\n\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\truleDisabled: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\truleName: jsii.String(\"ruleName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst cfnTopicRuleProps: iot.CfnTopicRuleProps = {\n  topicRulePayload: {\n    actions: [{\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    }],\n    sql: 'sql',\n\n    // the properties below are optional\n    awsIotSqlVersion: 'awsIotSqlVersion',\n    description: 'description',\n    errorAction: {\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    },\n    ruleDisabled: false,\n  },\n\n  // the properties below are optional\n  ruleName: 'ruleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.CfnTopicRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.CfnTopicRuleProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTopicRuleProps: iot.CfnTopicRuleProps = {\n  topicRulePayload: {\n    actions: [{\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    }],\n    sql: 'sql',\n\n    // the properties below are optional\n    awsIotSqlVersion: 'awsIotSqlVersion',\n    description: 'description',\n    errorAction: {\n      cloudwatchAlarm: {\n        alarmName: 'alarmName',\n        roleArn: 'roleArn',\n        stateReason: 'stateReason',\n        stateValue: 'stateValue',\n      },\n      cloudwatchLogs: {\n        logGroupName: 'logGroupName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      cloudwatchMetric: {\n        metricName: 'metricName',\n        metricNamespace: 'metricNamespace',\n        metricUnit: 'metricUnit',\n        metricValue: 'metricValue',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        metricTimestamp: 'metricTimestamp',\n      },\n      dynamoDb: {\n        hashKeyField: 'hashKeyField',\n        hashKeyValue: 'hashKeyValue',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        hashKeyType: 'hashKeyType',\n        payloadField: 'payloadField',\n        rangeKeyField: 'rangeKeyField',\n        rangeKeyType: 'rangeKeyType',\n        rangeKeyValue: 'rangeKeyValue',\n      },\n      dynamoDBv2: {\n        putItem: {\n          tableName: 'tableName',\n        },\n        roleArn: 'roleArn',\n      },\n      elasticsearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      firehose: {\n        deliveryStreamName: 'deliveryStreamName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        separator: 'separator',\n      },\n      http: {\n        url: 'url',\n\n        // the properties below are optional\n        auth: {\n          sigv4: {\n            roleArn: 'roleArn',\n            serviceName: 'serviceName',\n            signingRegion: 'signingRegion',\n          },\n        },\n        confirmationUrl: 'confirmationUrl',\n        headers: [{\n          key: 'key',\n          value: 'value',\n        }],\n      },\n      iotAnalytics: {\n        channelName: 'channelName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n      },\n      iotEvents: {\n        inputName: 'inputName',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        batchMode: false,\n        messageId: 'messageId',\n      },\n      iotSiteWise: {\n        putAssetPropertyValueEntries: [{\n          propertyValues: [{\n            timestamp: {\n              timeInSeconds: 'timeInSeconds',\n\n              // the properties below are optional\n              offsetInNanos: 'offsetInNanos',\n            },\n            value: {\n              booleanValue: 'booleanValue',\n              doubleValue: 'doubleValue',\n              integerValue: 'integerValue',\n              stringValue: 'stringValue',\n            },\n\n            // the properties below are optional\n            quality: 'quality',\n          }],\n\n          // the properties below are optional\n          assetId: 'assetId',\n          entryId: 'entryId',\n          propertyAlias: 'propertyAlias',\n          propertyId: 'propertyId',\n        }],\n        roleArn: 'roleArn',\n      },\n      kafka: {\n        clientProperties: {\n          clientPropertiesKey: 'clientProperties',\n        },\n        destinationArn: 'destinationArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        key: 'key',\n        partition: 'partition',\n      },\n      kinesis: {\n        roleArn: 'roleArn',\n        streamName: 'streamName',\n\n        // the properties below are optional\n        partitionKey: 'partitionKey',\n      },\n      lambda: {\n        functionArn: 'functionArn',\n      },\n      location: {\n        deviceId: 'deviceId',\n        latitude: 'latitude',\n        longitude: 'longitude',\n        roleArn: 'roleArn',\n        trackerName: 'trackerName',\n\n        // the properties below are optional\n        timestamp: new Date(),\n      },\n      openSearch: {\n        endpoint: 'endpoint',\n        id: 'id',\n        index: 'index',\n        roleArn: 'roleArn',\n        type: 'type',\n      },\n      republish: {\n        roleArn: 'roleArn',\n        topic: 'topic',\n\n        // the properties below are optional\n        headers: {\n          contentType: 'contentType',\n          correlationData: 'correlationData',\n          messageExpiry: 'messageExpiry',\n          payloadFormatIndicator: 'payloadFormatIndicator',\n          responseTopic: 'responseTopic',\n          userProperties: [{\n            key: 'key',\n            value: 'value',\n          }],\n        },\n        qos: 123,\n      },\n      s3: {\n        bucketName: 'bucketName',\n        key: 'key',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        cannedAcl: 'cannedAcl',\n      },\n      sns: {\n        roleArn: 'roleArn',\n        targetArn: 'targetArn',\n\n        // the properties below are optional\n        messageFormat: 'messageFormat',\n      },\n      sqs: {\n        queueUrl: 'queueUrl',\n        roleArn: 'roleArn',\n\n        // the properties below are optional\n        useBase64: false,\n      },\n      stepFunctions: {\n        roleArn: 'roleArn',\n        stateMachineName: 'stateMachineName',\n\n        // the properties below are optional\n        executionNamePrefix: 'executionNamePrefix',\n      },\n      timestream: {\n        databaseName: 'databaseName',\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n\n        // the properties below are optional\n        timestamp: {\n          unit: 'unit',\n          value: 'value',\n        },\n      },\n    },\n    ruleDisabled: false,\n  },\n\n  // the properties below are optional\n  ruleName: 'ruleName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 211,
        "75": 305,
        "91": 11,
        "153": 1,
        "169": 1,
        "192": 12,
        "193": 75,
        "197": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 299,
        "290": 1
      },
      "fqnsFingerprint": "00ad1a11e03967f3d2ebd5e8a33a358f08d7949b668d7439c54cb712cb8fcd8a"
    },
    "9c60dd1c165fcc9e5a7cdd56b8868fc15533cee074ad2fb719db13108c9957cc": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\n\niot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT * FROM 'device/+/data'\"),\n    actions=[\n        actions.S3PutObjectAction(bucket,\n            access_control=s3.BucketAccessControl.PUBLIC_READ\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nnew TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n    Actions = new [] {\n        new S3PutObjectAction(bucket, new S3PutObjectActionProps {\n            AccessControl = BucketAccessControl.PUBLIC_READ\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nTopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"))\n        .actions(List.of(\n            S3PutObjectAction.Builder.create(bucket)\n                    .accessControl(BucketAccessControl.PUBLIC_READ)\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\n\niot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT * FROM 'device/+/data'\")),\n\tactions: []iAction{\n\t\tactions.NewS3PutObjectAction(bucket, &s3PutObjectActionProps{\n\t\t\taccessControl: s3.bucketAccessControl_PUBLIC_READ,\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.IotSql"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.S3PutObjectAction",
        "@aws-cdk/aws-iot-actions.S3PutObjectActionProps",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketAccessControl",
        "@aws-cdk/aws-s3.BucketAccessControl#PUBLIC_READ",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 2,
        "194": 7,
        "196": 1,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "aa7f2142fb89a80e7153badc6351120d2844358987c200ed08db0f8d47f6b0fe"
    },
    "3fcb3fdfca20d819ef120b7256e15e997b05870a631485109970571f2623afa9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iot as iot\n\niot_sql_config = iot.IotSqlConfig(\n    aws_iot_sql_version=\"awsIotSqlVersion\",\n    sql=\"sql\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IoT;\n\nIotSqlConfig iotSqlConfig = new IotSqlConfig {\n    AwsIotSqlVersion = \"awsIotSqlVersion\",\n    Sql = \"sql\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iot.*;\n\nIotSqlConfig iotSqlConfig = IotSqlConfig.builder()\n        .awsIotSqlVersion(\"awsIotSqlVersion\")\n        .sql(\"sql\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iot \"github.com/aws-samples/dummy/awscdkawsiot\"\n\niotSqlConfig := &iotSqlConfig{\n\tawsIotSqlVersion: jsii.String(\"awsIotSqlVersion\"),\n\tsql: jsii.String(\"sql\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\nconst iotSqlConfig: iot.IotSqlConfig = {\n  awsIotSqlVersion: 'awsIotSqlVersion',\n  sql: 'sql',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.IotSqlConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot.IotSqlConfig"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot from '@aws-cdk/aws-iot';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst iotSqlConfig: iot.IotSqlConfig = {\n  awsIotSqlVersion: 'awsIotSqlVersion',\n  sql: 'sql',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "466adc2133f97a83c2303fc037b8bdc7b23a8f8ecdc8aafa6bb0f81c6c24abb0"
    },
    "001d6d50d0a931df767410f4df424b0f827fd9b8a4b46f4491418c1a84f67547": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\n\niot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT * FROM 'device/+/data'\"),\n    actions=[\n        actions.S3PutObjectAction(bucket,\n            access_control=s3.BucketAccessControl.PUBLIC_READ\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nnew TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n    Actions = new [] {\n        new S3PutObjectAction(bucket, new S3PutObjectActionProps {\n            AccessControl = BucketAccessControl.PUBLIC_READ\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nTopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"))\n        .actions(List.of(\n            S3PutObjectAction.Builder.create(bucket)\n                    .accessControl(BucketAccessControl.PUBLIC_READ)\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\n\niot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT * FROM 'device/+/data'\")),\n\tactions: []iAction{\n\t\tactions.NewS3PutObjectAction(bucket, &s3PutObjectActionProps{\n\t\t\taccessControl: s3.bucketAccessControl_PUBLIC_READ,\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.TopicRule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.S3PutObjectAction",
        "@aws-cdk/aws-iot-actions.S3PutObjectActionProps",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketAccessControl",
        "@aws-cdk/aws-s3.BucketAccessControl#PUBLIC_READ",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 2,
        "194": 7,
        "196": 1,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "aa7f2142fb89a80e7153badc6351120d2844358987c200ed08db0f8d47f6b0fe"
    },
    "4e798b11551ba7ddd25c8108f592d990babbb2546cac51c8caf68e6bc016e72d": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"MyBucket\")\n\niot.TopicRule(self, \"TopicRule\",\n    sql=iot.IotSql.from_string_as_ver20160323(\"SELECT * FROM 'device/+/data'\"),\n    actions=[\n        actions.S3PutObjectAction(bucket,\n            access_control=s3.BucketAccessControl.PUBLIC_READ\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nnew TopicRule(this, \"TopicRule\", new TopicRuleProps {\n    Sql = IotSql.FromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n    Actions = new [] {\n        new S3PutObjectAction(bucket, new S3PutObjectActionProps {\n            AccessControl = BucketAccessControl.PUBLIC_READ\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"MyBucket\");\n\nTopicRule.Builder.create(this, \"TopicRule\")\n        .sql(IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"))\n        .actions(List.of(\n            S3PutObjectAction.Builder.create(bucket)\n                    .accessControl(BucketAccessControl.PUBLIC_READ)\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"MyBucket\"))\n\niot.NewTopicRule(this, jsii.String(\"TopicRule\"), &topicRuleProps{\n\tsql: iot.iotSql.fromStringAsVer20160323(jsii.String(\"SELECT * FROM 'device/+/data'\")),\n\tactions: []iAction{\n\t\tactions.NewS3PutObjectAction(bucket, &s3PutObjectActionProps{\n\t\t\taccessControl: s3.bucketAccessControl_PUBLIC_READ,\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-iot.TopicRuleProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iot-actions.S3PutObjectAction",
        "@aws-cdk/aws-iot-actions.S3PutObjectActionProps",
        "@aws-cdk/aws-iot.IotSql",
        "@aws-cdk/aws-iot.IotSql#fromStringAsVer20160323",
        "@aws-cdk/aws-iot.TopicRule",
        "@aws-cdk/aws-iot.TopicRuleProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketAccessControl",
        "@aws-cdk/aws-s3.BucketAccessControl#PUBLIC_READ",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-iot-actions';\nimport * as iot from '@aws-cdk/aws-iot';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}",
      "syntaxKindCounter": {
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 2,
        "194": 7,
        "196": 1,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "aa7f2142fb89a80e7153badc6351120d2844358987c200ed08db0f8d47f6b0fe"
    }
  }
}